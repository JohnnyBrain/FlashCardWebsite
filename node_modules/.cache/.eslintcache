[{"/Users/johnbrain/Projects/SnakeGame/src/index.js":"1","/Users/johnbrain/Projects/SnakeGame/src/snake.js":"2","/Users/johnbrain/Projects/PokerGame/src/index.js":"3","/Users/johnbrain/Projects/PokerGame/src/PokerGame.js":"4","/Users/johnbrain/Projects/FlashCardProject/src/index.js":"5","/Users/johnbrain/Projects/FlashCardProject/src/App.js":"6","/Users/johnbrain/Projects/FlashCardProject/src/block/Card.js":"7","/Users/johnbrain/Projects/FlashCardProject/src/block/Deck.js":"8","/Users/johnbrain/Projects/FlashCardProject/src/block/FlashCardView.js":"9","/Users/johnbrain/Projects/FlashCardProject/src/block/FlashCardEdit.js":"10","/Users/johnbrain/Projects/FlashCardProject/src/block/DeckCreate.js":"11","/Users/johnbrain/Projects/FlashCardProject/src/block/ReturnButton.js":"12","/Users/johnbrain/Projects/FlashCardProject/src/block/HomePage.js":"13","/Users/johnbrain/Projects/FlashCardProject/src/block/DeckStudy.js":"14","/Users/johnbrain/Projects/FlashCardProject/src/block/DeckWidget.js":"15","/Users/johnbrain/Projects/FlashCardProject/src/block/DeckEdit.js":"16","/Users/johnbrain/Projects/FlashCardProject/src/block/CreateCard.js":"17"},{"size":176,"mtime":1654730876145,"results":"18","hashOfConfig":"19"},{"size":5660,"mtime":1654887479004,"results":"20","hashOfConfig":"19"},{"size":188,"mtime":1656360774425,"results":"21","hashOfConfig":"22"},{"size":26737,"mtime":1656428298577,"results":"23","hashOfConfig":"22"},{"size":8099,"mtime":1657728578823,"results":"24","hashOfConfig":"25"},{"size":2257,"mtime":1656788192144,"results":"26","hashOfConfig":"25"},{"size":996,"mtime":1656514561451,"results":"27","hashOfConfig":"25"},{"size":2129,"mtime":1656618393393,"results":"28","hashOfConfig":"25"},{"size":1851,"mtime":1656701451393,"results":"29","hashOfConfig":"25"},{"size":2405,"mtime":1656721436733,"results":"30","hashOfConfig":"25"},{"size":3922,"mtime":1656721358926,"results":"31","hashOfConfig":"25"},{"size":335,"mtime":1656614229190,"results":"32","hashOfConfig":"25"},{"size":832,"mtime":1656717643783,"results":"33","hashOfConfig":"25"},{"size":4477,"mtime":1656772516248,"results":"34","hashOfConfig":"25"},{"size":3556,"mtime":1656772318047,"results":"35","hashOfConfig":"25"},{"size":4355,"mtime":1656721398743,"results":"36","hashOfConfig":"25"},{"size":1365,"mtime":1656717187740,"results":"37","hashOfConfig":"25"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rv2qtv",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"curd0z",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":99,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1nfix4w",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"59"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"59"},"/Users/johnbrain/Projects/SnakeGame/src/index.js",[],[],"/Users/johnbrain/Projects/SnakeGame/src/snake.js",["88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104"],[],"import React, { useState } from \"react\";\n\nvar snakeList = [];\nvar boardList = [];\nvar tempList;\n\nfunction Snake(){\n\n    const title = document.createElement(\"label\");\n    title.className = \"title\";\n    title.innerHTML = \"Snake Game\";\n\n    const titleArea = document.createElement(\"div\");\n    titleArea.className = \"titleArea\";\n    titleArea.appendChild(title);\n\n    const retry = document.createElement(\"button\");\n    retry.innerHTML =  \"RETRY\";\n    retry.className = \"retry\";\n    retry.addEventListener(\"click\", function(){\n        document.body.innerHTML = \"\";\n        snakeList = [];\n        boardList = [];\n        Snake();\n    })\n    titleArea.appendChild(retry);\n\n    document.body.appendChild(titleArea);\n\n    const board = document.createElement('table');\n    const max = 20;\n    for(let i = 0; i < max; i++){\n        const tr = board.insertRow();\n        boardList.push([]);\n        for(let j = 0; j < max; j++){\n            const td = tr.insertCell();\n            //td.appendChild(document.createTextNode(\"___\"));\n            boardList[i].push([i, j]);\n            td.style.border = '1px solid black';\n        }\n    }\n    tempList = boardList;\n    var start = [Math.floor((max - 1) / 2), Math.floor((max - 1) / 2)];\n\n    var berry = [3, 3];\n    berry[0] = Math.floor(Math.random() * max);\n    berry[1] = Math.floor(Math.random() * max);\n    //board.rows.item(berry[0]).cells.item(berry[1]).innerHTML = \"***\";\n\n    var len = 1;\n\n    var direction = [0, 0];\n    var startTimer = true;\n\n    for(let i = 0; i < len; i++){\n        snakeList.push([start[0] + i, start[1]]);\n    }\n\n    var eaten = false;\n    var update = true;\n    var begin = true;\n\n    var timerSpeed = 100;\n\n    var sameLocation = true;\n\n    document.addEventListener('keydown', function(event){\n\n        begin = false;\n        //board.rows.item(start[0]).cells.item(start[1]).innerHTML = \"___\";\n        //left arrow\n        if(event.keyCode == 37 && update){\n            //if(start[1] > 0){\n                //start[1]--;\n           //}\n           if(direction[1] != 1){\n                direction[1] = -1;\n                direction[0] = 0;\n                update = false;\n           }\n           \n        }\n\n        //down arrow\n        else if(event.keyCode == 40 && update){\n            //if(start[0] < max - 1){\n                //start[0]++;\n            //}\n            if(direction[0] != -1){\n                direction[0] = 1;\n                direction[1] = 0;\n                update = false;\n            }\n            \n        }\n\n        //right arrow\n        else if(event.keyCode == 39 && update){\n            //if(start[1] < max - 1){\n                //start[1]++;\n           // }\n           if(direction[1] != -1){\n                direction[1] = 1;\n                direction[0] = 0;\n                update = false;\n           }\n        }\n\n        //up arrow\n        else if(event.keyCode ==38 && update){\n            //if(start[0] > 0){\n                //start[0]--;\n            //}\n            if(direction[0] != 1){\n                direction[0] = -1;\n                direction[1] = 0;\n                update = false;\n            }\n        }\n            \n        if(startTimer){\n            \n        }  \n        startTimer = false;\n\n    });\n\n    var timer = setInterval(function(){\n        if(start[0] < 0 || start[0] > max - 1 || start[1] < 0 || start[1] > max - 1){\n            //clearInterval(timer);\n            //document.body.innerHTML = \"\";\n            end(timer);\n        }\n\n        //board.rows.item(berry[0]).cells.item(berry[1]).innerHTML = \"***\";\n        board.rows.item(berry[0]).cells.item(berry[1]).style.backgroundColor = \"red\";\n\n        //updates position of snake\n        start[0] += direction[0];\n        start[1] += direction[1];\n        //board.rows.item(start[0]).cells.item(start[1]).innerHTML = \"***\";\n        board.rows.item(start[0]).cells.item(start[1]).style.backgroundColor = \"green\";\n\n\n        snakeList.unshift([start[0], start[1]]);\n\n        if(start[0] == berry[0] && start[1] == berry[1]){\n            eaten = true;\n            //berry[0] = Math.floor(Math.random() * max);\n            //berry[1] = Math.floor(Math.random() * max);\n            timerSpeed -= 20;\n\n            //for(let i = 0; i < snakeList.length; i++){\n                //tempList[snakeList[i][0]].splice(snakeList[i][1], 1);\n            //}\n            var rand0 = Math.floor(Math.random() * tempList.length);\n            var rand1 = Math.floor(Math.random() * tempList[rand0].length);\n            berry[0] = tempList[rand0][rand1][0];\n            berry[1] = tempList[rand0][rand1][1];\n            tempList = boardList;\n        }\n        \n        if(!eaten){\n            //board.rows.item(snakeList[snakeList.length - 1][0]).cells.item(snakeList[snakeList.length - 1][1]).innerHTML = \"___\";\n            board.rows.item(snakeList[snakeList.length - 1][0]).cells.item(snakeList[snakeList.length - 1][1]).style.backgroundColor = \"white\";\n            snakeList.splice(snakeList.length - 1, 1);\n        }\n        else{\n            eaten = false;\n        }\n\n        update = true;\n\n        if(!begin){\n            for(let i = 1; i < snakeList.length; i++){\n                if(start[0] == snakeList[i][0] && start[1] == snakeList[i][1]){\n                    //clearInterval(timer);\n                    //document.body.innerHTML = \"\";\n                    end(timer);\n                }\n            }\n        }\n    }, 100 /*timerSpeed*/);\n   \n\n    document.body.appendChild(board);\n\n}\n\nfunction end(timer){\n    clearInterval(timer);\n}\n\nfunction randomize(list, max){\n    list[0] = Math.floor(Math.random() * max);\n    list[1] = Math.floor(Math.random() * max);\n}\n\n\nexport default Snake;","/Users/johnbrain/Projects/PokerGame/src/index.js",[],[],[],"/Users/johnbrain/Projects/PokerGame/src/PokerGame.js",["105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203"],[],"\nvar players = [];\nvar deck = [];\nvar board = [];\nvar tempDeck = 0;\nvar winner = -1;\nvar cnt = 52;\n\n/*\n    9: straight flush\n    8: four of a kind\n    7: full house\n    6: flush\n    5: straight\n    4: 3 of a kind\n    3: 2 pair\n    2: pair\n    1: high card\n\n\n    1: diamond\n    2: spades\n    3: clubs\n    4: hearts\n */\n\nfunction pokerGame(){\n    deck = [];\n    players = [];\n    board = [];\n    for(let i = 2; i <= 13; i++){\n        deck.push([[i, 1], [i, 2], [i, 3], [i, 4]]);\n    }\n    //players.push([[12, 2], [12, 1]]);\n    //players.push([[13, 1], [13, 3]]);\n    \n    /*players.push([]);\n    var tempi = Math.floor(Math.random() * deck.length);\n    var tempj =  Math.floor(Math.random() * deck[tempi].length);\n    players[0].push(deck[tempi][tempj]);\n    var tempi = Math.floor(Math.random() * deck.length);\n    var tempj =  Math.floor(Math.random() * deck[tempi].length);\n    players[0].push(deck[tempi][tempj]);\n    players.push([]);\n    var tempi = Math.floor(Math.random() * deck.length);\n    var tempj =  Math.floor(Math.random() * deck[tempi].length);\n    players[1].push(deck[tempi][tempj]);\n    var tempi = Math.floor(Math.random() * deck.length);\n    var tempj =  Math.floor(Math.random() * deck[tempi].length);\n    players[1].push(deck[tempi][tempj]);*/\n\n    /*for(let i = 0; i < 5; i++){\n        var tempi = Math.floor(Math.random() * deck.length);\n        var tempj =  Math.floor(Math.random() * deck[tempi].length);\n        board.push(deck[tempi][tempj]);\n        deck[tempi].splice(tempj, 1);\n    }*/\n    /*board.push([2,2]);\n    board.push([3,3]);\n    board.push([7,2]);\n    board.push([4,1]);\n    board.push([10,3]);*/\n\n    var playerProb = []\n    for(let i = 0; i < players.length; i++){\n        playerProb[i] = 0;\n    }\n    var num = 2;\n    var cnt = 2;\n    var rtn = 0;\n    /*board.length > 0*/ \n    /*while(cnt < 11){\n        rtn = 1;\n        board = [];\n        for(let i = 4; i >= 0; i--){\n            var tempi = Math.floor(Math.random() * deck.length);\n            var tempj =  Math.floor(Math.random() * deck[tempi].length);\n            board.push(deck[tempi][tempj].slice());\n            deck[tempi].splice(tempj, 1);\n            if(deck[tempi].length == 0){\n                deck.splice(tempi, 1);\n            }\n            \n        }\n        cnt += 1;\n        //return board;\n        //rtn = board;\n        \n\n        //return win(players, board);\n        //win(players, board)\n        playerProb[win(players, board)] += 1;\n    }*/\n\n    players.push([deck[2][1].slice(), deck[4][3].slice()]);\n    deck[2].splice(1, 1);\n    deck[4].splice(3, 1);\n    players.push([deck[6][0].slice(), deck[8][2].slice()]);\n    deck[6].splice(0, 1);\n    deck[8].splice(2, 1);\n\n    //var winPoint = win(players, board);\n    var winPoint = calc(players, deck, board);\n    //var winPoint = 1;\n    \n    const testL = document.createElement(\"label\");\n    //testL.innerHTML = winPoint;\n    testL.innerHTML = winPoint;\n    document.body.appendChild(testL);\n        //tempDeck = deck;\n}\n\nfunction calc(players, deck, board){\n    var playerProb = []\n    var tempDeck = [];\n    for(let i = 0; i < deck.length; i++){\n        for(let j = 0; j < deck[i].length; j++){\n            tempDeck.push(deck[i][j].slice());\n        }\n    }\n    var tempBoard = [[],[],[],[],[]];\n    for(let i = 0; i < players.length; i++){\n        playerProb.push(0);\n    }\n    tempBoard[0] = tempDeck[0].slice();\n    for(let j = 1; j < 4; j++){\n        tempBoard[1] = tempDeck[j].slice();\n\n        for(let h = j + 1; h < tempDeck.length - 2; h++){\n            tempBoard[2] = tempDeck[h].slice();\n\n            for(let l = h + 1; l < tempDeck.length - 1; l++){\n                tempBoard[3] = tempDeck[l].slice();\n\n                for(let m = l + 1; m < tempDeck.length; m++){\n                    tempBoard[4] = tempDeck[h].slice();\n                    playerProb[win(players, tempBoard)]++;\n                }\n            }\n        }\n        //return playerProb;\n    } \n    return playerProb;\n    if(board.length == 0){\n        for(let i = 0; i < tempDeck.length - 4; i++){\n            tempBoard[0] = tempDeck[i].slice();\n\n            for(let j = i + 1; j < tempDeck.length - 3; j++){\n                tempBoard[1] = tempDeck[j].slice();\n\n                for(let h = j + 1; h < tempDeck.length - 2; h++){\n                    tempBoard[2] = tempDeck[h].slice();\n\n                    for(let l = h + 1; l < tempDeck.length - 1; l++){\n                        tempBoard[3] = tempDeck[l].slice();\n\n                        for(let m = l + 1; m < tempDeck.length; m++){\n                            tempBoard[4] = tempDeck[h].slice();\n                            //playerProb[win(players, tempBoard)]++;\n                        }\n                    }\n                }\n                //return playerProb;\n            } \n        }\n    }\n    return playerProb;\n    /*if(board.length == 0){\n        while(cnt >= 0){\n            for(let i = 0; i < 5; i++){\n                var tempi = Math.floor(Math.random() * deck.length);\n                var tempj =  Math.floor(Math.random() * deck[tempi].length);\n                board.push(deck[tempi][tempj]);\n                deck[tempi].splice(tempj, 1);\n            }\n            cnt--;\n            playerProb[win(players, board)]++;\n        }\n    }*/\n}\n\n/*function play(deck, board){\n    if(board.length == 0){\n        for(let i = 0; i < 3; i++){\n            var tempi = Math.floor(Math.random() * deck.length);\n            var tempj =  Math.floor(Math.random() * deck[tempi].length);\n            board.add(deck[tempi][tempj]);\n            deck[tempi].splice(tempj, 1);\n        }\n    }\n    else if(board.length == 3 || board.length == 4){\n        var tempi = Math.floor(Math.random() * deck.length);\n        var tempj =  Math.floor(Math.random() * deck[tempi].length);\n        board.add(deck[tempi][tempj]);\n        deck[tempi].splice(tempj, 1);\n    }\n}*/\n\nfunction win(player, board){\n    var winner = 0;\n    var max = 0;\n    var win = [];\n    var playerBoard = []\n\n    var repeat = true;\n    /*while(repeat){\n        repeat = false;\n        for(let i = 0; i < board.length - 1; i++){\n            if(board[i] > board[i + 1]){\n                var temp = board[i];\n                board[i] = board[i + 1];\n                board[i + 1] = temp;\n                repeat = true;\n            }\n        }\n    }*/\n    \n    for(let i = 0; i < player.length; i++){\n        win.push([[], 0, 0]);\n        playerBoard.push([player[i][0], player[i][1], board[0], board[1], board[2], board[3], board[4]]);\n        \n        //return playerBoard[0][0][0];\n        //sorts the array\n        var repeat = true;\n        while(repeat){\n            repeat = false;\n            for(let j = 0; j < playerBoard[i].length - 1; j++){\n                if(playerBoard[i][j][0] > playerBoard[i][j + 1][0]){\n                    var temp = playerBoard[i][j];\n                    playerBoard[i][j] = playerBoard[i][j + 1];\n                    playerBoard[i][j + 1] = temp;\n                    repeat = true;\n                }\n            }\n        }\n    }\n\n    //straights and straight flush\n    for(let i = 0; i < playerBoard.length; i++){\n        var cnt = 1;\n        var straightFlush = 1;\n        var repeat = false;\n        var temp = [];\n        for(let j = 0; j < playerBoard[i].length - 1; j++){\n            if(!repeat){\n                temp.push(playerBoard[i][j]);\n            }\n            if(playerBoard[i][j][0] + 1 == playerBoard[i][j + 1][0]){\n                repeat = true;\n                cnt += 1;\n                if(playerBoard[i][j][1] == playerBoard[i][j + 1][1]){\n                    straightFlush += 1;\n                    temp.push(playerBoard[i][j + 1]);\n                }\n                else{\n                    temp.push(playerBoard[i][j + 1]);\n                }\n            }\n            else if(playerBoard[i][j][0] == playerBoard[i][j + 1][0]){\n                repeat = true;\n                 //temp.push(playerBoard[i][j]);\n                //cnt++;\n            }\n            else{\n                cnt = 1;\n                repeat = false;\n                straightFlush = 1;\n                temp = [];\n            }\n            if(cnt == 5 && straightFlush == 5){\n                //win[i] = temp;\n                win[i][0] = temp.slice();\n                win[i][1] = 9;\n                temp.splice(0, 1);\n                cnt--;\n                straightFlush--;\n            }\n            else if(cnt == 5){\n                win[i][0] = temp.slice();\n                win[i][1] = 5;\n                temp.splice(0, 1);\n                cnt--;\n                straightFlush--;\n            }\n        }\n    }\n\n    //pairs, 3 of a kind, full house, 4 of a kind\n    for(let i = 0; i < playerBoard.length; i++){\n        var pair = 0;\n        var twoPair = 0;\n        var secondPair = false;\n        var threePairs = 0;\n        var thirdPair = false;\n        var temp = [];\n        var card = playerBoard[i][0];\n        var first = true;\n        for(let j = 0; j < playerBoard[i].length - 1; j++){\n            if(card[0] == playerBoard[i][j + 1][0]){\n                if(secondPair && !thirdPair){\n                    twoPair++;\n                }\n                else if(thirdPair){\n                    threePairs++;\n                }\n                else{\n                    pair++;\n                }\n                //temp.push(card);\n                if(first){\n                    temp.push(card);\n                    first = false;\n                }\n                temp.push(playerBoard[i][j + 1]);\n            }\n            else{\n                if(pair >= 1){\n                    secondPair = true;\n                }\n                if(secondPair && secondPair >= 1){\n                    thirdPair = true;\n                }\n                card = playerBoard[i][j + 1];\n                first = true;\n                //pair = 0;\n                //twoPair = 0;\n                //temp = [];\n            }\n\n            if(pair >= 1){\n                win[i][0] = temp.slice;\n                //four of a kind\n                if(pair == 3 || twoPair == 3){\n                    win[i][1] = Math.max(win[i][1], 8);\n                    win[i][0] = temp.slice();\n                }\n                //full house\n                else if((pair == 2 && twoPair == 1) || (pair == 1 && twoPair == 2)){\n                    win[i][1] = Math.max(win[i][1], 7);\n                    win[i][0] = temp.slice();\n                }\n                else if((pair == 2 && threePairs == 1) || (pair == 1 && threePairs == 2)){\n                    win[i][1] = Math.max(win[i][1], 7);\n                    win[i][0] = temp.slice();\n                }\n                else if((threePairs == 2 && twoPair == 1) || (threePairs == 1 && twoPair == 2)){\n                    win[i][1] = Math.max(win[i][1], 7);\n                    win[i][0] = temp.slice();\n                }\n                //three of a kind\n                else if(pair == 2){\n                    win[i][1] = Math.max(win[i][1], 4);\n                    win[i][0] = temp.slice();\n                }\n                //two pair\n                if((pair == 1 && twoPair == 1) || (pair == 1 && threePairs == 1) || (threePairs == 1 && twoPair == 1)){\n                    win[i][1] = Math.max(win[i][1], 3);\n                    win[i][0] = temp.slice();\n                }\n                //pair\n                else if(pair == 1){\n                    win[i][1] = Math.max(win[i][1], 2);\n                    win[i][0] = temp.slice();\n                } \n            }\n        }\n    }\n\n    //flush\n    for(let i = 0; i < playerBoard.length; i++){\n        var d = 0;\n        var s = 0;\n        var c = 0;\n        var h = 0;\n        for(let j = 0; j < playerBoard[i].length; j++){\n            if(playerBoard[i][j][1] == 1){\n                d++;\n            }\n            else if(playerBoard[i][j][1] == 2){\n                s++;\n            }\n            else if(playerBoard[i][j][1] == 3){\n                c++;\n            }\n            else if(playerBoard[i][j][1] == 4){\n                h++;\n            }\n        }\n        if(d >= 5){\n            win[i][1] = Math.max(win[i][1], 6);\n            for(let j = 0; j < playerBoard[i].length; j++){\n                if(playerBoard[i][j][1] == 1){\n                    win[i][0].push(playerBoard[i][j]);\n                }\n            }\n        }\n        else if(s >= 5){\n            win[i][1] = Math.max(win[i][1], 6);\n            for(let j = 0; j < playerBoard[i].length; j++){\n                if(playerBoard[i][j][1] == 2){\n                    win[i][0].push(playerBoard[i][j]);\n                }\n            }\n        }\n        else if(c >= 5){\n            win[i][1] = Math.max(win[i][1], 6);\n            for(let j = 0; j < playerBoard[i].length; j++){\n                if(playerBoard[i][j][1] == 3){\n                    win[i][0].push(playerBoard[i][j]);\n                }\n            }\n        }\n        else if(h >= 5){\n            win[i][1] = Math.max(win[i][1], 6);\n            for(let j = 0; j < playerBoard[i].length; j++){\n                if(playerBoard[i][j][1] == 4){\n                    win[i][0].push(playerBoard[i][j]);\n                }\n            }\n        }\n    }\n\n    //high card\n    for(let i = 0; i < playerBoard.length; i++){\n        if(win[i][1] == 0){\n            win[i][1] = 1;\n            win[i][0].push(playerBoard[i][playerBoard[i].length - 1]);\n        }   \n    }\n\n    //checks if anyone has a winner\n    //loop1: \n    var winner = -1;\n    for(let i = 0; i < win.length; i++){\n        var winnerList = [];\n        var multiWin = false;\n        //straight flush\n        if(win[i][1] == 9){\n            winnerList.push(win[i])\n            for(let j = i + 1; j < win.length; j++){\n                if(win[j][1] == 9){\n                    multiWin = true;\n                    winnerList.push(win[j]);\n                }\n            }\n            if(multiWin){\n                winner = winnerList[0];\n                for(let j = 0; j < winnerList.length - 1; j++){\n                    if(winner[0][winner.length - 1][0] < winnerList[j][0][winner.length - 1][0]){\n                        winner = winnerList[i][1];\n                    }\n                } \n            }\n            else{\n                //winner = winnerList[i][1];\n                winner = i;\n            }\n            break;\n        }\n        //four of a kind\n        else if(win[i][1] == 8){\n            winnerList.push(win[i])\n            for(let j = i + 1; j < win.length; j++){\n                if(win[j][1] == 8){\n                    multiWin = true;\n                    winnerList.push(win[j]);\n                }\n            }\n            if(multiWin){\n                winner = winnerList[0];\n                var fourKind;\n                for(let j = 0; j < winnerList[0][0].length - 3; j++){\n                    if(winnerList[0][0][j][0] == winnerList[0][0][j + 1][0] && winnerList[0][0][j + 1][0] == winnerList[0][0][j + 2][0]\n                         && winnerList[0][0][j + 2][0] == winnerList[0][0][j + 3][0]/* && winnerList[0][0][j + 3][0] == winnerList[0][0][j + 4][0]*/){\n                            fourKind = winnerList[0][0][j][0];\n                         }\n                }\n                var fourKind2 = 0\n                for(let j = 1; j < winnerList.length; j++){\n                    for(let k = 0; k < winnerList[j][0].length - 3; k++){\n                        if(winnerList[j][0][k][0] == winnerList[j][0][k + 1][0] && winnerList[j][0][k + 1][0] == winnerList[j][0][k + 2][0]\n                             && winnerList[j][0][k + 2][0] == winnerList[j][0][k + 3][0]){\n                                fourKind2 = winnerList[j][0][k][0];\n                             }\n                    }\n                    if(fourKind2 > fourKind){\n                        fourKind = fourKind2;\n                        //winner = winnerList[j];\n                        winner = i;\n                    }\n                } \n            }\n            else{\n                //winner = winnerList[0];\n                winner = i;\n                break;\n            }\n        }\n        //full house\n        //FULL HOUSE IS NOT WORKING!!!!!!! THE TWO PAIR IS NOT COUNTING ALL POSSIBLE SCENARIOS\n        else if(win[i][1] == 7){\n            winnerList.push(win[i])\n            for(let j = i + 1; j < win.length; j++){\n                if(win[j][1] == 7){\n                    multiWin = true;\n                    winnerList.push(win[j]);\n                }\n            }\n            if(multiWin){\n                winner = winnerList[0];\n                var threeKind = 0;\n                var twoKind = 0;\n                for(let j = 0; j < winnerList[0][0].length - 2; j++){\n                    if(winnerList[0][0][j][0] == winnerList[0][0][j + 1][0] && winnerList[0][0][j + 1][0] == winnerList[0][0][j + 2][0]\n                         /*&& winnerList[0][0][j + 2][0] == winnerList[0][0][j + 3][0]*/){\n                            threeKind = Math.max(threeKind, winnerList[0][0][j][0]);\n                         }\n                    else if(winnerList[0][0][j][0] == winnerList[0][0][j + 1][0] /*&& winnerList[0][0][j + 1][0] == winnerList[0][0][j + 2][0]*/){\n                        twoKind = Math.max(twoKind, winnerList[0][0][j][0]);\n                    }\n                }\n                var threeKind2 = 0\n                var twoKind2 = 0;\n                for(let j = 1; j < winnerList.length; j++){\n                    for(let k = 0; k < winnerList[j][0].length - 2; k++){\n                        if(winnerList[j][0][k][0] == winnerList[j][0][k + 1][0] && winnerList[j][0][k + 1][0] == winnerList[j][0][k + 2][0]){\n                                threeKind2 = Math.max(threeKind2, winnerList[j][0][k][0]);\n                             }\n                        else if(winnerList[j][0][k][0] == winnerList[j][0][k + 1][0]){\n                            twoKind2 = Math.max(twoKind2, winnerList[j][0][k][0]);\n                        }\n                    }\n                    if(threeKind2 > threeKind){\n                        threeKind = threeKind2;\n                        winner = winnerList[j];\n                    }\n                    else if(threeKind2 == threeKind){\n                        if(twoKind2 > twoKind){\n                            twoKind = twoKind2\n                            threeKind = threeKind2;\n                            winner = i;\n                        }\n                    }\n                } \n            }\n            else{\n                winner = i;\n                break;\n            }\n        }\n        //flush\n        //STILL NEED TO ADD CHECKS FOR NEXT HIGHEST CARD IN CASE TOP HIGHERST CARDS ARE BOTH THE SAME\n        else if(win[i][1] == 6){\n            winnerList.push(win[i])\n            for(let j = i + 1; j < win.length; j++){\n                if(win[j][1] == 6){\n                    multiWin = true;\n                    winnerList.push(win[j]);\n                }\n            }\n            if(multiWin){\n                winner = winnerList[0];\n                var flush = winnerList[0][0][winnerList[0][0].length - 1][0];\n                var flush2 = 0\n                for(let j = 1; j < winnerList.length; j++){\n                    flush2 = winnerList[j][0][winnerList[j][0].length - 1][0];\n                    if(flush2 > flush){\n                        flush = flush2;\n                        winner = i;\n                    }\n                } \n            }\n            else{\n                winner = i;\n                break;\n            }\n        }\n        //straight\n        //STILL NEED TO ADD CHECKS FOR STYRAIGHT SPECIFIC KICKERS\n        else if(win[i][1] == 5){\n            winnerList.push(win[i])\n            for(let j = i + 1; j < win.length; j++){\n                if(win[j][1] == 5){\n                    multiWin = true;\n                    winnerList.push(win[j]);\n                }\n            }\n            if(multiWin){\n                winner = winnerList[0];\n                var straight = winnerList[0][0][winnerList[0][0].length - 1][0];\n                var straight2 = 0\n                for(let j = 1; j < winnerList.length; j++){\n                    straight2 = winnerList[j][0][winnerList[j][0].length - 1][0];\n                    if(straight2 > straight){\n                        straight = straight2;\n                        winner = i;\n                    }\n                } \n            }\n            else{\n                winner = i;\n                break;\n            }\n        }\n        //three of a kind\n        else if(win[i][1] == 4){\n            winnerList.push(win[i])\n            for(let j = i + 1; j < win.length; j++){\n                if(win[j][1] == 4){\n                    multiWin = true;\n                    winnerList.push(win[j]);\n                }\n            }\n            if(multiWin){\n                winner = winnerList[0];\n                var threeKind;\n                for(let j = 0; j < winnerList[0][0].length - 2; j++){\n                    if(winnerList[0][0][j][0] == winnerList[0][0][j + 1][0] && winnerList[0][0][j + 1][0] == winnerList[0][0][j + 2][0]\n                         && winnerList[0][0][j + 2][0] == winnerList[0][0][j + 3][0]){\n                            threeKind = Math.max(winnerList[0][0][j][0], threeKind);\n                         }\n                }\n                var threeKind2 = 0\n                for(let j = 1; j < winnerList.length; j++){\n                    for(let k = 0; k < winnerList[j][0].length - 2; k++){\n                        if(winnerList[j][0][k][0] == winnerList[j][0][k + 1][0] && winnerList[j][0][k + 1][0] == winnerList[j][0][k + 2][0]\n                             && winnerList[j][0][k + 2][0] == winnerList[j][0][k + 3][0]){\n                                threeKind2 = Math.max(winnerList[j][0][k][0], threeKind2);\n                             }\n                    }\n                    if(threeKind2 > threeKind){\n                        threeKind = threeKind2;\n                        winner = i;\n                    }\n                } \n            }\n            else{\n                winner = i;\n                break;\n            }\n        }\n        //two pair\n        else if(win[i][1] == 3){\n            winnerList.push(win[i])\n            for(let j = i + 1; j < win.length; j++){\n                if(win[j][1] == 3){\n                    multiWin = true;\n                    winnerList.push(win[j]);\n                }\n            }\n            if(multiWin){\n                winner = winnerList[0];\n                var maxTwoKind = 0;\n                var secondTwoKind = 0;\n                for(let j = 0; j < winnerList[0][0].length - 1; j++){\n                    if(winnerList[0][0][j][0] == winnerList[0][0][j + 1][0]/* && winnerList[0][0][j + 1][0] == winnerList[0][0][j + 2][0]*/){\n                        if(maxTwoKind <= winnerList[0][0][j][0]){\n                            var temp = maxTwoKind\n                            maxTwoKind = winnerList[0][0][j][0];\n                            secondTwoKind = temp;\n                        }\n                        //maxTwoKind = Math.max(maxTwoKind, winnerList[0][0][j][0]);\n                        //firstDone = true;\n                    }\n                }\n                var maxTwoKind2 = 0\n                var secondTwoKind2 = 0;\n                for(let j = 1; j < winnerList.length; j++){\n                    for(let k = 0; k < winnerList[j][0].length - 1; k++){\n                        if(winnerList[j][0][k][0] == winnerList[j][0][k + 1][0]){\n                            if(maxTwoKind2 <= winnerList[j][0][k][0]){\n                                var temp = maxTwoKind2\n                                maxTwoKind2 = winnerList[j][0][k][0];\n                                secondTwoKind2 = temp;\n                            }\n                        }\n                    }\n                    if(maxTwoKind2 > maxTwoKind){\n                        maxTwoKind = maxTwoKind2;\n                        winner = winnerList[j];\n                    }\n                    else if(maxTwoKind2 == maxTwoKind){\n                        if(secondTwoKind2 > secondTwoKind){\n                            secondTwoKind = secondTwoKind2\n                            maxTwoKind = maxTwoKind2;\n                            winner = i;\n                        }\n                    }\n                } \n            }\n            else{\n                winner = i;\n                break;\n            }\n        }\n        //pair\n        else if(win[i][1] == 2){\n            winnerList.push(win[i])\n            for(let j = i + 1; j < win.length; j++){\n                if(win[j][1] == 2){\n                    multiWin = true;\n                    winnerList.push(win[j]);\n                }\n            }\n            if(multiWin){\n                winner = winnerList[0];\n                var pair;\n                for(let j = 0; j < winnerList[0][0].length - 1; j++){\n                    if(winnerList[0][0][j][0] == winnerList[0][0][j + 1][0]){\n                        pair = Math.max(winnerList[0][0][j][0], pair);\n                         }\n                }\n                var pair2 = 0\n                for(let j = 1; j < winnerList.length; j++){\n                    for(let k = 0; k < winnerList[j][0].length - 1; k++){\n                        if(winnerList[j][0][k][0] == winnerList[j][0][k + 1][0]){\n                                pair2 = Math.max(winnerList[j][0][k][0], pair2);\n                             }\n                    }\n                    if(pair2 > pair){\n                        pair = pair2;\n                        winner = i;\n                    }\n                } \n            }\n            else{\n                winner = i;\n                break;\n            }\n        }\n        //high card\n        else if(win[i][1] == 1){\n            winnerList.push(win[i])\n            for(let j = i + 1; j < win.length; j++){\n                if(win[j][1] == 1){\n                    multiWin = true;\n                    winnerList.push(win[j]);\n                }\n            }\n            if(multiWin){\n                winner = winnerList[0];\n                var high;\n                for(let j = 0; j < winnerList[0][0].length; j++){\n                    high = Math.max(winnerList[0][0][j][0], pair);\n                }\n                var high2 = 0\n                for(let j = 1; j < winnerList.length; j++){\n                    for(let k = 0; k < winnerList[j][0].length; k++){\n                        high2 = Math.max(winnerList[j][0][k][0], pair);\n                    }\n                    if(high2 > high){\n                        high = high2;\n                        winner = i;\n                    }\n                } \n            }\n            else{\n                winner = i;\n                break;\n            }\n        }\n    }\n    return winner;\n}\n\nexport default pokerGame;","/Users/johnbrain/Projects/FlashCardProject/src/index.js",["204","205","206","207","208","209","210","211","212","213","214","215"],"/Users/johnbrain/Projects/FlashCardProject/src/App.js",["216","217","218","219","220","221","222","223","224","225","226","227","228"],"/Users/johnbrain/Projects/FlashCardProject/src/block/Card.js",[],["229","230"],"/Users/johnbrain/Projects/FlashCardProject/src/block/Deck.js",["231","232","233","234","235","236","237"],"import {Card} from \"./Card.js\";\n\nexport class Deck{\n\n    constructor(name){\n        this.name = name;\n        this.cardList = [];\n    }\n\n    length(){\n        return this.cardList.length;\n    }\n\n    getName(){\n        return this.name;\n    }\n\n    setName(name){\n       this.name = name;\n    }\n\n    getCardList(){\n        return this.cardList;\n    }\n\n    getCardListUnStarred(){\n        var temp = new Deck(this.name);\n        for(let i = 0; i < this.cardList.length; i++){\n            if(!this.cardList[i].getStar()){\n                temp.addCard(this.cardList[i]);\n            }\n        }\n        return temp;\n    }\n\n    getCardListStarred(){\n        var temp = new Deck(this.name);\n        for(let i = 0; i < this.cardList.length; i++){\n            if(this.cardList[i].getStar()){\n                temp.addCard(this.cardList[i]);\n            }\n        }\n        return temp;\n    }\n\n    addCard(card){\n        this.cardList.push(card);\n    }\n\n    removeCard(idx){\n        if(idx < 0 || idx >= this.cardList.length){\n            throw new Error(\"idx not in cardList\");\n        }\n        this.cardList.splice(idx, 1);\n    }\n\n    removeCardName(front, back){\n        for(let i = 0; i < this.cardList.length; i++){\n            if(this.cardList[i].getFront() == front \n            && this.cardList[i].getBack() == back){\n                this.cardList.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    getCard(idx){\n        if(idx < 0 || idx >= this.cardList.length){\n            throw new Error(\"idx not in cardList\");\n        }\n        return this.cardList[idx];\n    }\n\n    getCardName(front, back){\n        for(let i = 0; i < this.cardList.length; i++){\n            if(this.cardList[i].getFront() == front \n            && this.cardList[i].getBack() == back){\n                return this.cardList.getCard(i);\n            }\n        }\n    }\n\n    cardExists(front, back){\n        for(let i = 0; i < this.cardList.length; i++){\n            if(this.cardList[i].getFront() == front \n            && this.cardList[i].getBack() == back){\n                return true;\n            }\n        }\n        return false;\n    }\n}","/Users/johnbrain/Projects/FlashCardProject/src/block/FlashCardView.js",["238","239","240"],"import {Card} from \"./Card.js\";\nimport {Deck} from \"./Deck.js\";\n\n//Visualizes one flashCard (particularly in study mode)\nexport function FlashCardView(card, deck){\n    //flash Card has front, back, flip button, delete button, star button\n\n    const can = document.createElement(\"div\");\n    can.className = \"flashCardView\";\n\n    const frontSide = document.createElement(\"h2\");\n    frontSide.innerHTML = card.getFront();\n    can.appendChild(frontSide);\n    var front = true;\n    \n    var flipButton = document.createElement(\"button\");\n    flipButton.innerHTML = \"FLIP\";\n\n    flipButton.addEventListener(\"click\", function(){\n        if(front){\n            frontSide.innerHTML = card.getBack();\n            front = false;\n        }\n        else{\n            frontSide.innerHTML = card.getFront();\n            front = true;\n        }\n        \n        \n    });\n    can.appendChild(flipButton);\n\n    /*var deleteButton = document.createElement(\"button\");\n    deleteButton.innerHTML = 'DELETE';\n    deleteButton.className = \"deleteButton\";\n    deleteButton.addEventListener(\"click\", function(){\n        document.body.removeChild(can);\n        deck.removeCardName(card.getFront(), card.getBack());\n\n    });\n    can.appendChild(deleteButton);*/\n\n    var starButton = document.createElement(\"button\");\n    starButton.innerHTML = 'Star';\n    starButton.className = \"starButton\";\n\n    if(card.getStar()){\n        starButton.style.backgroundColor = \"gold\";\n    }\n    starButton.addEventListener(\"click\", function(){\n        card.setStar();\n        if(starButton.style.backgroundColor == \"gold\"){\n            starButton.style.backgroundColor = \"\";\n        }\n        else{\n            starButton.style.backgroundColor = \"gold\";\n        }\n    });\n    can.appendChild(starButton);\n    //document.body.appendChild(can);\n    return can;\n}\n\n//export default FlashCardView;","/Users/johnbrain/Projects/FlashCardProject/src/block/FlashCardEdit.js",["241","242","243","244"],"import {Card} from \"./Card.js\";\nimport {Deck} from \"./Deck.js\";\n\n//visualizes a card when in edit mode or creating the card\nexport function FlashCardEdit(card, deck, tempDeck, rightSide){\n    var checkDup = false;\n    /*if(front.value != '' && back.value != ''){\n    for(let k = 0; k < cardList.length; k++){\n        if(front.value == cardList[k][0] && back.value == cardList[k][1]){\n        checkDup = true;\n        }\n    }*/\n\n    const newCard = document.createElement(\"div\");\n        \n    newCard.className = \"flashCardEdit\";\n\n    const frontSide = document.createElement(\"textArea\");\n    frontSide.innerHTML = card.getFront();\n    frontSide.className = \"a\";\n    const backSide = document.createElement(\"textArea\");\n    backSide.innerHTML = card.getBack();\n    backSide.className = \"b\";\n    newCard.appendChild(frontSide);\n    newCard.appendChild(backSide);\n\n    var deleteButton = document.createElement(\"button\");\n    deleteButton.innerHTML = 'DELETE';\n    deleteButton.className = \"deleteButton\";\n    deleteButton.addEventListener(\"mouseover\", function(){\n        deleteButton.style.backgroundColor = \"red\";\n    });\n    deleteButton.addEventListener(\"mouseout\", function(){\n        deleteButton.style.backgroundColor = \"\";\n    });\n    deleteButton.addEventListener(\"click\", function(){\n        deck.removeCardName(card.getFront(), card.getBack());\n        //document.body.removeChild(newCard);\n        rightSide.removeChild(newCard);\n        /*for(let i = 0; i < tempDeck.length; i++){\n            if(tempDeck[i] == newCard){\n                tempDeck.splice(i, 1);\n                break;\n            }\n        }*/\n        tempDeck.splice(tempDeck.indexOf(newCard), 1);\n    });\n    newCard.appendChild(deleteButton);\n\n    const starButton2 = document.createElement(\"button\");\n    starButton2.innerHTML = 'Star';\n    starButton2.className = \"starButton\";\n    starButton2.className = \"c\";\n    if(card.getStar()){\n        starButton2.style.backgroundColor = \"gold\";\n    }\n    starButton2.addEventListener(\"click\", function(){\n        card.setStar();\n        if(starButton2.style.backgroundColor == \"gold\"){\n            starButton2.style.backgroundColor = \"\";\n        }\n        else{\n            starButton2.style.backgroundColor = \"gold\";\n        }\n    });\n    newCard.appendChild(starButton2);\n\n\n    //document.body.appendChild(newCard);\n    rightSide.appendChild(newCard);\n    return newCard;  \n    \n}","/Users/johnbrain/Projects/FlashCardProject/src/block/DeckCreate.js",["245","246","247"],"import {Card} from \"./Card.js\";\nimport { CreateCard } from \"./CreateCard.js\";\nimport {Deck} from \"./Deck.js\";\nimport { DeckEdit } from \"./DeckEdit.js\";\nimport {FlashCardEdit} from \"./FlashCardEdit.js\"\nimport { HomePage } from \"./HomePage.js\";\nimport { ReturnButton } from \"./ReturnButton.js\";\n\n\n//visualizes the create deck view. used when creating a deck\nexport function DeckCreate(deckList, rightSide, leftSide){\n    //document.body.innerHTML = \"\";\n    rightSide.innerHTML = \"\";\n\n    var tempDeck = new Deck(\"TEMP\");\n\n    var tempCardList = [];\n\n    const buttonArray = document.createElement(\"div\");\n    buttonArray.className = \"buttonArray\";\n\n    buttonArray.appendChild(ReturnButton(deckList));\n\n    const saveButton = document.createElement(\"button\");\n    saveButton.innerHTML = \"Save\";\n    saveButton.addEventListener(\"click\", function(){\n        if(nameArea.value != 0){\n            /*tempDeck.setName(nameArea.value);\n            deckList.push(tempDeck);\n            document.body.innerHTML = \"\";\n            HomePage(deckList);*/\n            var rtnDeck = new Deck(nameArea.value);\n            for(let i = 0; i < tempCardList.length; i++){\n                rtnDeck.addCard(new Card(tempCardList[i].getElementsByClassName(\"a\")[0].value, tempCardList[i].getElementsByClassName(\"b\")[0].value));\n                if(tempCardList[i].getElementsByClassName(\"c\")[0].style.backgroundColor == \"gold\"){\n                    rtnDeck.getCard(i).setStar();\n                }\n            }\n            deckList.push(rtnDeck);\n            //document.body.innerHTML = \"\";\n            rightSide.innerHTML = \"\";\n            HomePage(deckList, rightSide, leftSide);\n            DeckEdit(rtnDeck, deckList, rightSide, leftSide);\n        }\n    });\n    buttonArray.appendChild(saveButton);\n\n    const nameArea = document.createElement(\"textArea\");\n    buttonArray.appendChild(nameArea);\n\n    rightSide.appendChild(buttonArray);\n\n    /*var div = document.createElement(\"div\");\n    div.className = 'cardCreator';\n    \n    var frontText = document.createElement(\"label\");\n    frontText.innerHTML = 'FRONT:   ';\n    div.appendChild(frontText);\n    var front = document.createElement(\"textarea\");\n    div.appendChild(front);\n    var br = document.createElement(\"br\");\n    \n    var backText = document.createElement(\"label\");\n    backText.innerHTML = 'BACK:   ';\n    backText.className = \"backtext\";\n    div.appendChild(backText);\n    var back = document.createElement(\"textarea\");\n    div.appendChild(back);\n    div.appendChild(br);\n\n    var createButton = document.createElement(\"button\");\n    createButton.innerHTML = 'Create Card';\n    \n    //when creating a new card while editing\n    createButton.addEventListener(\"click\", function(){\n        if(front.value != '' && back.value != ''){\n            //if(!deck.cardExists(front.value, back.value)){\n                //const newCard = new Card(front.value, back.value);\n                //FlashCardEdit(newCard, deck);\n                //deck.addCard(newCard);\n                //front.value = '';\n                //back.value = '';\n            //}\n            const newCard = new Card(front.value, back.value);\n            //FlashCardEdit(newCard, tempDeck);\n            tempCardList.push(FlashCardEdit(newCard, tempDeck, tempCardList));\n            front.value = \"\";\n            back.value = \"\";\n            front.focus();\n            //tempDeck.addCard(newCard);\n        } \n        //const newCard = new Card(front.value, back.value);\n        //FlashCardEdit(newCard, deck);\n    });\n\n    /*createButton.addEventListener(\"click\", function(){\n      if(front.value != '' && back.value != ''){\n        front.value = '';\n        back.value = '';\n      } \n    });*/ \n\n    /*for(let i = 0; i < deck.length(); i++){\n        FlashCardEdit(deck.getCard(i), deck);\n    }*//*\n\n    div.appendChild(createButton);\n    document.body.appendChild(div);*/\n\n    CreateCard(tempDeck, tempCardList, rightSide);\n}","/Users/johnbrain/Projects/FlashCardProject/src/block/ReturnButton.js",[],"/Users/johnbrain/Projects/FlashCardProject/src/block/HomePage.js",[],"/Users/johnbrain/Projects/FlashCardProject/src/block/DeckStudy.js",["248","249","250","251","252"],"import {FlashCardView} from \"./FlashCardView.js\";\nimport {ReturnButton} from \"./ReturnButton.js\";\n\n//Creates the study card page\nexport function DeckStudy(deck, deckList, rightSide, leftSide){\n\n    var cnt = 0;\n\n    const div = document.createElement(\"div\");\n\n    const buttonArray = document.createElement(\"div\");\n    buttonArray.className = \"buttonArray\";\n\n    //buttonArray.appendChild(ReturnButton(deckList));\n\n    const cardCounter = document.createElement(\"text\");\n    function createCardCounter(){\n        if(cnt + 1 <= deck.length()){\n            cardCounter.innerHTML = \"CARD: \" + (cnt + 1) + \" / \" + deck.length();\n        }\n        else{\n            cardCounter.innerHTML = \"END\";\n        }\n        cardCounter.className = 'cardcounter';\n        //document.body.appendChild(cardCounter);\n    }\n\n    if(deck.length() != 0){\n        createCardCounter();\n    }\n\n    buttonArray.appendChild(cardCounter);\n    rightSide.appendChild(buttonArray);\n\n    //prblem with this is that am passing in the getListStarred() list which returns a copy of the true list\n    // thus when I edit that list it is not editing the true list\n   /* const deleteButton = document.createElement(\"button\");\n    deleteButton.innerHTML = \"Delete Card\";\n    document.body.appendChild(deleteButton);\n    deleteButton.addEventListener(\"click\", function(){\n        if(cnt == 0){\n            if(deck.length() == 1){\n                deck.removeCard(cnt);\n                document.body.removeChild(cardCounter);\n                div.innerHTML = \"\";\n                document.body.removeChild(deleteButton);\n            }\n            else{\n                deck.removeCard(cnt);\n                cnt--;\n                nextButton.click();\n            }\n        }\n        else if(cnt == deck.length() - 1){\n            deck.removeCard(cnt);\n            prevButton.click();\n        }\n        else{\n            deck.removeCard(cnt);\n            cnt--;\n            nextButton.click();\n        }\n    });\n\n    document.body.appendChild(deleteButton);\n    */\n\n    var can = FlashCardView(deck.getCard(cnt));\n\n\n    const nextButton = document.createElement(\"button\");\n    nextButton.innerHTML = 'NEXT';\n    nextButton.style = \"\";\n    nextButton.className = 'nextButton';\n    if(cnt == deck.length() - 1){\n        nextButton.style.opacity = \"50%\";\n    }\n    nextButton.addEventListener(\"click\", function(){\n        if(cnt < deck.length() - 1){\n            prevButton.style = \"100%\";\n            div.removeChild(can);\n            div.removeChild(nextButton);\n            div.removeChild(prevButton);\n            //document.body.removeChild(cardCounter);\n            cnt++;\n            can = FlashCardView(deck.getCard(cnt));\n            div.appendChild(can);\n            createCardCounter();\n            div.appendChild(nextButton);\n            div.appendChild(prevButton);\n        }\n        if(cnt == deck.length() - 1){\n            nextButton.style.opacity = \"50%\";\n        }\n    });\n\n    const prevButton = document.createElement(\"button\");\n    prevButton.innerHTML = 'PREVIOUS';\n    prevButton.className = 'nextButton';\n    prevButton.style = \"\";\n    prevButton.style.opacity = \"50%\";\n    prevButton.addEventListener(\"click\", function(){\n        if(cnt > 0){\n            nextButton.style = \"100%\";\n            div.removeChild(can);\n            div.removeChild(nextButton);\n            div.removeChild(prevButton);\n            //document.body.removeChild(cardCounter);\n            cnt--;\n            can =  FlashCardView(deck.getCard(cnt));\n            div.appendChild(can);\n            createCardCounter();\n            div.appendChild(nextButton);\n            div.appendChild(prevButton);\n        }\n        if(cnt == 0){\n            prevButton.style.opacity = \"50%\";\n        }\n    });\n    div.appendChild(can);\n    div.appendChild(nextButton);\n    div.appendChild(prevButton);\n\n    rightSide.appendChild(div);\n    \n\n    /*if(cnt >= 0 && cnt < deck.length()){\n        nextButton.style.marginLeft = \"23%\";\n        prevButton.style.marginLeft = \"4%\";\n        document.body.appendChild(nextButton);\n        document.body.appendChild(prevButton);\n    }\n    else if(cnt < 0){\n        nextButton.style.display = \"block\";\n        nextButton.style.marginLeft = \"38%\";\n        document.body.appendChild(nextButton);\n    }\n    else if(cnt >= deck.length() && deck.length() != 0){\n        prevButton.style.display = \"block\";\n        prevButton.style.marginLeft = \"38%\";\n        document.body.appendChild(prevButton);\n    }*/\n\n}","/Users/johnbrain/Projects/FlashCardProject/src/block/DeckWidget.js",["253","254","255"],"import {Deck} from \"./Deck.js\";\nimport {DeckEdit} from \"./DeckEdit.js\";\nimport {DeckStudy} from \"./DeckStudy.js\";\nimport {HomePage} from \"./HomePage.js\";\nimport { ReturnButton } from \"./ReturnButton.js\";\n\n//visualizes the deck widget, used on the homepage\nexport function DeckWidget(deck, deckList, rightSide, leftSide){\n\n    const deckWidget = document.createElement(\"div\");\n    deckWidget.className = 'deckWidget';\n    \n    const deckName = document.createElement(\"h2\");\n    deckName.innerHTML = deck.getName();\n\n    const deckSize = document.createElement(\"label\");\n    deckSize.innerHTML = \"SIZE: \" + deck.length();\n\n    const studyButton = document.createElement(\"button\");\n    studyButton.innerHTML = 'STUDY';\n    studyButton.className = 'widgetButton';\n\n    studyButton.addEventListener(\"click\", function(){\n        //document.body.innerHTML = \"\";\n        rightSide.innerHTML = \"\";\n\n        ReturnButton(deckList);\n\n        var normalStudyButton = document.createElement(\"button\");\n        normalStudyButton.innerHTML = \"Normal Study\";\n        normalStudyButton.addEventListener(\"click\", function(){\n            //document.body.innerHTML = \"\";\n            rightSide.innerHTML = \"\";\n            DeckStudy(deck.getCardListUnStarred(), deckList, rightSide, leftSide);\n        });\n\n        var starStudyButton = document.createElement(\"button\");\n        starStudyButton.innerHTML = \"Starred Study\";\n        starStudyButton.addEventListener(\"click\", function(){\n            //document.body.innerHTML = \"\";\n            rightSide.innerHTML = \"\";\n            DeckStudy(deck.getCardListStarred(), deckList, rightSide, leftSide);\n        });\n\n        //document.body.appendChild(normalStudyButton);\n        //document.body.appendChild(starStudyButton);\n        rightSide.appendChild(normalStudyButton);\n        rightSide.appendChild(starStudyButton);\n    });\n\n    const deleteWidget = document.createElement(\"button\");\n    deleteWidget.innerHTML = \"DELETE\";\n    deleteWidget.className = \"deleteButton2\";\n    deleteWidget.addEventListener(\"mouseover\", function(){\n        deleteWidget.style.backgroundColor = \"red\";\n    });\n    deleteWidget.addEventListener(\"mouseout\", function(){\n        deleteWidget.style.backgroundColor = \"\";\n    });\n\n    deleteWidget.addEventListener(\"click\", function(){\n        for(let i = 0; i < deckList.length; i++){\n            if(deckList[i].getName() == deck.getName()){\n                deckList.splice(i, 1);\n                break;\n            }\n        }\n        //deckList.splice(deckList.indexOf(deck.getName()), 1);\n        //document.body.removeChild(deckWidget);\n        leftSide.removeChild(deckWidget);\n        rightSide.innerHTML = \"\";\n    });\n\n    const editButton = document.createElement(\"button\");\n    editButton.innerHTML = \"EDIT\";\n    //editButton.style.marginLeft = \"1%\";\n\n    editButton.addEventListener(\"click\", function(){\n        DeckEdit(deck, deckList, rightSide, leftSide);\n    });\n\n    deckWidget.appendChild(deckName);\n    deckWidget.appendChild(studyButton);\n    deckWidget.appendChild(deleteWidget);\n    deckWidget.appendChild(editButton);\n    deckWidget.appendChild(deckSize);\n    //document.body.appendChild(deckWidget);\n    leftSide.appendChild(deckWidget);\n\n    function createReturnButton(){\n        const returnButton = document.createElement(\"button\");\n        returnButton.innerHTML = \"Return\";\n        returnButton.addEventListener(\"click\", function(){\n            document.innerHTML = \"\";\n            HomePage(deckList);\n        });\n        document.body.appendChild(returnButton);\n    }\n\n\n}","/Users/johnbrain/Projects/FlashCardProject/src/block/DeckEdit.js",["256","257","258"],"import {Card} from \"./Card.js\";\nimport { CreateCard } from \"./CreateCard.js\";\nimport {Deck} from \"./Deck.js\";\nimport {FlashCardEdit} from \"./FlashCardEdit.js\"\nimport { HomePage } from \"./HomePage.js\";\nimport { ReturnButton } from \"./ReturnButton.js\";\n\n\n//visualizes the create deck view. used when creating a deck\nexport function DeckEdit(deck, deckList, rightSide, leftSide){\n    //document.body.innerHTML = \"\";\n    rightSide.innerHTML = \"\";\n\n    var tempCardList = [];\n\n    var tempDeck = new Deck(\"TEMP\");\n    for(let i = 0; i < deck.length(); i++){\n        tempDeck.addCard(new Card(deck.getCard(i).getFront(), deck.getCard(i).getBack()));\n        if(deck.getCard(i).getStar()){\n            tempDeck.getCard(i).setStar();\n        }\n    }\n\n    const buttonArray = document.createElement(\"div\");\n    buttonArray.className = \"buttonArray\";\n\n    buttonArray.appendChild(ReturnButton(deckList));\n\n    const saveButton = document.createElement(\"button\");\n    saveButton.innerHTML = \"Save\";\n    saveButton.addEventListener(\"click\", function(){\n        if(nameArea.value != 0){\n            var rtnDeck = new Deck(nameArea.value);\n            for(let i = 0; i < tempCardList.length; i++){\n                rtnDeck.addCard(new Card(tempCardList[i].getElementsByClassName(\"a\")[0].value, tempCardList[i].getElementsByClassName(\"b\")[0].value));\n                if(tempCardList[i].getElementsByClassName(\"c\")[0].style.backgroundColor == \"gold\"){\n                    rtnDeck.getCard(i).setStar();\n                }\n            }\n            for(let i = 0; i < deckList.length; i++){\n                if(deckList[i].getName() == deck.getName()){\n                    deckList[i] = rtnDeck;\n                    break;\n                }\n            }\n            /*tempDeck.setName(nameArea.value);\n            for(let i = 0; i < deckList.length; i++){\n                if(deckList[i].getName() == deck.getName()){\n                    deckList[i] = tempDeck;\n                    break;\n                }\n            }*/\n            //document.body.innerHTML = \"\";\n            HomePage(deckList, rightSide, leftSide);\n        }\n    });\n    buttonArray.appendChild(saveButton);\n\n    const nameArea = document.createElement(\"textArea\");\n    nameArea.value = deck.getName();\n    buttonArray.appendChild(nameArea);\n\n    //document.body.appendChild(buttonArray);\n    rightSide.appendChild(buttonArray);\n\n    /*var div = document.createElement(\"div\");\n    div.className = 'cardCreator';\n    \n    var frontText = document.createElement(\"label\");\n    frontText.innerHTML = 'FRONT:   ';\n    div.appendChild(frontText);\n    var front = document.createElement(\"textarea\");\n    div.appendChild(front);\n    var br = document.createElement(\"br\");\n    \n    var backText = document.createElement(\"label\");\n    backText.innerHTML = 'BACK:   ';\n    backText.className = \"backtext\";\n    div.appendChild(backText);\n    var back = document.createElement(\"textarea\");\n    div.appendChild(back);\n    div.appendChild(br);\n\n    var createButton = document.createElement(\"button\");\n    createButton.innerHTML = 'Create Card';\n    \n    //when creating a new card while editing\n    createButton.addEventListener(\"click\", function(){\n        if(front.value != '' && back.value != ''){\n            //if(!deck.cardExists(front.value, back.value)){\n                //const newCard = new Card(front.value, back.value);\n                //FlashCardEdit(newCard, deck);\n                //deck.addCard(newCard);\n                //front.value = '';\n                //back.value = '';\n            //}\n            const newCard = new Card(front.value, back.value);\n            //FlashCardEdit(newCard, tempDeck);\n            tempCardList.push(FlashCardEdit(newCard, tempDeck));\n        } \n        //const newCard = new Card(front.value, back.value);\n        //FlashCardEdit(newCard, deck);\n    });\n\n    /*createButton.addEventListener(\"click\", function(){\n      if(front.value != '' && back.value != ''){\n        front.value = '';\n        back.value = '';\n      } \n    });*/ /*\n    \n\n    div.appendChild(createButton);\n    document.body.appendChild(div);*/\n    CreateCard(tempDeck, tempCardList, rightSide);\n\n    for(let i = 0; i < deck.length(); i++){\n        //FlashCardEdit(tempDeck.getCard(i), tempDeck);\n        tempCardList.push(FlashCardEdit(tempDeck.getCard(i), tempDeck, tempCardList, rightSide));\n    }\n}","/Users/johnbrain/Projects/FlashCardProject/src/block/CreateCard.js",["259","260"],"import {Card} from \"./Card.js\";\nimport {FlashCardEdit} from \"./FlashCardEdit.js\"\n\nexport function CreateCard(tempDeck, tempCardList, rightSide){\n    var div = document.createElement(\"div\");\n    div.className = 'cardCreator';\n    \n    var frontText = document.createElement(\"label\");\n    frontText.innerHTML = 'FRONT:   ';\n    div.appendChild(frontText);\n    var front = document.createElement(\"textarea\");\n    div.appendChild(front);\n    var br = document.createElement(\"br\");\n    \n    var backText = document.createElement(\"label\");\n    backText.innerHTML = 'BACK:   ';\n    backText.className = \"backtext\";\n    div.appendChild(backText);\n    var back = document.createElement(\"textarea\");\n    div.appendChild(back);\n    div.appendChild(br);\n\n    var createButton = document.createElement(\"button\");\n    createButton.innerHTML = 'Create Card';\n    \n    //when creating a new card while editing\n    createButton.addEventListener(\"click\", function(){\n        if(front.value != '' && back.value != ''){\n            const newCard = new Card(front.value, back.value);\n            tempCardList.push(FlashCardEdit(newCard, tempDeck, tempCardList, rightSide));\n            front.value = \"\";\n            back.value = \"\";\n            front.focus();\n        } \n    });\n\n    div.appendChild(createButton);\n    //document.body.appendChild(div);\n    rightSide.appendChild(div);\n}",{"ruleId":"261","severity":1,"message":"262","line":1,"column":8,"nodeType":"263","messageId":"264","endLine":1,"endColumn":13},{"ruleId":"261","severity":1,"message":"265","line":1,"column":17,"nodeType":"263","messageId":"264","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"266","line":63,"column":9,"nodeType":"263","messageId":"264","endLine":63,"endColumn":19},{"ruleId":"261","severity":1,"message":"267","line":65,"column":9,"nodeType":"263","messageId":"264","endLine":65,"endColumn":21},{"ruleId":"268","severity":1,"message":"269","line":72,"column":26,"nodeType":"270","messageId":"271","endLine":72,"endColumn":28},{"ruleId":"268","severity":1,"message":"272","line":76,"column":28,"nodeType":"270","messageId":"271","endLine":76,"endColumn":30},{"ruleId":"268","severity":1,"message":"269","line":85,"column":31,"nodeType":"270","messageId":"271","endLine":85,"endColumn":33},{"ruleId":"268","severity":1,"message":"272","line":89,"column":29,"nodeType":"270","messageId":"271","endLine":89,"endColumn":31},{"ruleId":"268","severity":1,"message":"269","line":98,"column":31,"nodeType":"270","messageId":"271","endLine":98,"endColumn":33},{"ruleId":"268","severity":1,"message":"272","line":102,"column":28,"nodeType":"270","messageId":"271","endLine":102,"endColumn":30},{"ruleId":"268","severity":1,"message":"269","line":110,"column":31,"nodeType":"270","messageId":"271","endLine":110,"endColumn":33},{"ruleId":"268","severity":1,"message":"272","line":114,"column":29,"nodeType":"270","messageId":"271","endLine":114,"endColumn":31},{"ruleId":"268","severity":1,"message":"269","line":147,"column":21,"nodeType":"270","messageId":"271","endLine":147,"endColumn":23},{"ruleId":"268","severity":1,"message":"269","line":147,"column":45,"nodeType":"270","messageId":"271","endLine":147,"endColumn":47},{"ruleId":"268","severity":1,"message":"269","line":176,"column":29,"nodeType":"270","messageId":"271","endLine":176,"endColumn":31},{"ruleId":"268","severity":1,"message":"269","line":176,"column":60,"nodeType":"270","messageId":"271","endLine":176,"endColumn":62},{"ruleId":"261","severity":1,"message":"273","line":194,"column":10,"nodeType":"263","messageId":"264","endLine":194,"endColumn":19},{"ruleId":"261","severity":1,"message":"274","line":5,"column":5,"nodeType":"263","messageId":"264","endLine":5,"endColumn":13},{"ruleId":"261","severity":1,"message":"275","line":6,"column":5,"nodeType":"263","messageId":"264","endLine":6,"endColumn":11},{"ruleId":"261","severity":1,"message":"276","line":7,"column":5,"nodeType":"263","messageId":"264","endLine":7,"endColumn":8},{"ruleId":"261","severity":1,"message":"277","line":68,"column":9,"nodeType":"263","messageId":"264","endLine":68,"endColumn":12},{"ruleId":"261","severity":1,"message":"276","line":69,"column":9,"nodeType":"263","messageId":"264","endLine":69,"endColumn":12},{"ruleId":"261","severity":1,"message":"278","line":70,"column":9,"nodeType":"263","messageId":"264","endLine":70,"endColumn":12},{"ruleId":"279","severity":1,"message":"280","line":144,"column":5,"nodeType":"281","messageId":"282","endLine":167,"endColumn":23},{"ruleId":"268","severity":1,"message":"269","line":144,"column":21,"nodeType":"270","messageId":"271","endLine":144,"endColumn":23},{"ruleId":"261","severity":1,"message":"283","line":201,"column":9,"nodeType":"263","messageId":"264","endLine":201,"endColumn":12},{"ruleId":"284","severity":1,"message":"285","line":224,"column":13,"nodeType":"263","messageId":"286","endLine":224,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":242,"column":13,"nodeType":"263","messageId":"286","endLine":242,"endColumn":19},{"ruleId":"284","severity":1,"message":"287","line":243,"column":13,"nodeType":"263","messageId":"286","endLine":243,"endColumn":17},{"ruleId":"268","severity":1,"message":"269","line":248,"column":41,"nodeType":"270","messageId":"271","endLine":248,"endColumn":43},{"ruleId":"268","severity":1,"message":"269","line":251,"column":41,"nodeType":"270","messageId":"271","endLine":251,"endColumn":43},{"ruleId":"268","severity":1,"message":"269","line":259,"column":42,"nodeType":"270","messageId":"271","endLine":259,"endColumn":44},{"ruleId":"268","severity":1,"message":"269","line":270,"column":20,"nodeType":"270","messageId":"271","endLine":270,"endColumn":22},{"ruleId":"268","severity":1,"message":"269","line":270,"column":42,"nodeType":"270","messageId":"271","endLine":270,"endColumn":44},{"ruleId":"268","severity":1,"message":"269","line":278,"column":25,"nodeType":"270","messageId":"271","endLine":278,"endColumn":27},{"ruleId":"284","severity":1,"message":"287","line":295,"column":13,"nodeType":"263","messageId":"286","endLine":295,"endColumn":17},{"ruleId":"268","severity":1,"message":"269","line":299,"column":24,"nodeType":"270","messageId":"271","endLine":299,"endColumn":26},{"ruleId":"268","severity":1,"message":"269","line":333,"column":25,"nodeType":"270","messageId":"271","endLine":333,"endColumn":27},{"ruleId":"268","severity":1,"message":"269","line":333,"column":41,"nodeType":"270","messageId":"271","endLine":333,"endColumn":43},{"ruleId":"268","severity":1,"message":"269","line":338,"column":31,"nodeType":"270","messageId":"271","endLine":338,"endColumn":33},{"ruleId":"268","severity":1,"message":"269","line":338,"column":47,"nodeType":"270","messageId":"271","endLine":338,"endColumn":49},{"ruleId":"268","severity":1,"message":"269","line":338,"column":62,"nodeType":"270","messageId":"271","endLine":338,"endColumn":64},{"ruleId":"268","severity":1,"message":"269","line":338,"column":78,"nodeType":"270","messageId":"271","endLine":338,"endColumn":80},{"ruleId":"268","severity":1,"message":"269","line":342,"column":31,"nodeType":"270","messageId":"271","endLine":342,"endColumn":33},{"ruleId":"268","severity":1,"message":"269","line":342,"column":50,"nodeType":"270","messageId":"271","endLine":342,"endColumn":52},{"ruleId":"268","severity":1,"message":"269","line":342,"column":65,"nodeType":"270","messageId":"271","endLine":342,"endColumn":67},{"ruleId":"268","severity":1,"message":"269","line":342,"column":84,"nodeType":"270","messageId":"271","endLine":342,"endColumn":86},{"ruleId":"268","severity":1,"message":"269","line":346,"column":37,"nodeType":"270","messageId":"271","endLine":346,"endColumn":39},{"ruleId":"268","severity":1,"message":"269","line":346,"column":53,"nodeType":"270","messageId":"271","endLine":346,"endColumn":55},{"ruleId":"268","severity":1,"message":"269","line":346,"column":74,"nodeType":"270","messageId":"271","endLine":346,"endColumn":76},{"ruleId":"268","severity":1,"message":"269","line":346,"column":90,"nodeType":"270","messageId":"271","endLine":346,"endColumn":92},{"ruleId":"268","severity":1,"message":"269","line":351,"column":30,"nodeType":"270","messageId":"271","endLine":351,"endColumn":32},{"ruleId":"268","severity":1,"message":"269","line":356,"column":26,"nodeType":"270","messageId":"271","endLine":356,"endColumn":28},{"ruleId":"268","severity":1,"message":"269","line":356,"column":42,"nodeType":"270","messageId":"271","endLine":356,"endColumn":44},{"ruleId":"268","severity":1,"message":"269","line":356,"column":57,"nodeType":"270","messageId":"271","endLine":356,"endColumn":59},{"ruleId":"268","severity":1,"message":"269","line":356,"column":76,"nodeType":"270","messageId":"271","endLine":356,"endColumn":78},{"ruleId":"268","severity":1,"message":"269","line":356,"column":97,"nodeType":"270","messageId":"271","endLine":356,"endColumn":99},{"ruleId":"268","severity":1,"message":"269","line":356,"column":113,"nodeType":"270","messageId":"271","endLine":356,"endColumn":115},{"ruleId":"268","severity":1,"message":"269","line":361,"column":30,"nodeType":"270","messageId":"271","endLine":361,"endColumn":32},{"ruleId":"268","severity":1,"message":"269","line":376,"column":37,"nodeType":"270","messageId":"271","endLine":376,"endColumn":39},{"ruleId":"268","severity":1,"message":"269","line":379,"column":42,"nodeType":"270","messageId":"271","endLine":379,"endColumn":44},{"ruleId":"268","severity":1,"message":"269","line":382,"column":42,"nodeType":"270","messageId":"271","endLine":382,"endColumn":44},{"ruleId":"268","severity":1,"message":"269","line":385,"column":42,"nodeType":"270","messageId":"271","endLine":385,"endColumn":44},{"ruleId":"268","severity":1,"message":"269","line":392,"column":41,"nodeType":"270","messageId":"271","endLine":392,"endColumn":43},{"ruleId":"268","severity":1,"message":"269","line":400,"column":41,"nodeType":"270","messageId":"271","endLine":400,"endColumn":43},{"ruleId":"268","severity":1,"message":"269","line":408,"column":41,"nodeType":"270","messageId":"271","endLine":408,"endColumn":43},{"ruleId":"268","severity":1,"message":"269","line":416,"column":41,"nodeType":"270","messageId":"271","endLine":416,"endColumn":43},{"ruleId":"268","severity":1,"message":"269","line":425,"column":22,"nodeType":"270","messageId":"271","endLine":425,"endColumn":24},{"ruleId":"284","severity":1,"message":"288","line":433,"column":9,"nodeType":"263","messageId":"286","endLine":433,"endColumn":15},{"ruleId":"268","severity":1,"message":"269","line":438,"column":22,"nodeType":"270","messageId":"271","endLine":438,"endColumn":24},{"ruleId":"268","severity":1,"message":"269","line":441,"column":30,"nodeType":"270","messageId":"271","endLine":441,"endColumn":32},{"ruleId":"268","severity":1,"message":"269","line":461,"column":27,"nodeType":"270","messageId":"271","endLine":461,"endColumn":29},{"ruleId":"268","severity":1,"message":"269","line":464,"column":30,"nodeType":"270","messageId":"271","endLine":464,"endColumn":32},{"ruleId":"268","severity":1,"message":"269","line":473,"column":47,"nodeType":"270","messageId":"271","endLine":473,"endColumn":49},{"ruleId":"268","severity":1,"message":"269","line":473,"column":107,"nodeType":"270","messageId":"271","endLine":473,"endColumn":109},{"ruleId":"268","severity":1,"message":"269","line":474,"column":56,"nodeType":"270","messageId":"271","endLine":474,"endColumn":58},{"ruleId":"268","severity":1,"message":"269","line":481,"column":51,"nodeType":"270","messageId":"271","endLine":481,"endColumn":53},{"ruleId":"268","severity":1,"message":"269","line":481,"column":111,"nodeType":"270","messageId":"271","endLine":481,"endColumn":113},{"ruleId":"268","severity":1,"message":"269","line":482,"column":60,"nodeType":"270","messageId":"271","endLine":482,"endColumn":62},{"ruleId":"268","severity":1,"message":"269","line":501,"column":27,"nodeType":"270","messageId":"271","endLine":501,"endColumn":29},{"ruleId":"268","severity":1,"message":"269","line":504,"column":30,"nodeType":"270","messageId":"271","endLine":504,"endColumn":32},{"ruleId":"268","severity":1,"message":"269","line":514,"column":47,"nodeType":"270","messageId":"271","endLine":514,"endColumn":49},{"ruleId":"268","severity":1,"message":"269","line":514,"column":107,"nodeType":"270","messageId":"271","endLine":514,"endColumn":109},{"ruleId":"268","severity":1,"message":"269","line":518,"column":52,"nodeType":"270","messageId":"271","endLine":518,"endColumn":54},{"ruleId":"268","severity":1,"message":"269","line":526,"column":51,"nodeType":"270","messageId":"271","endLine":526,"endColumn":53},{"ruleId":"268","severity":1,"message":"269","line":526,"column":111,"nodeType":"270","messageId":"271","endLine":526,"endColumn":113},{"ruleId":"268","severity":1,"message":"269","line":529,"column":56,"nodeType":"270","messageId":"271","endLine":529,"endColumn":58},{"ruleId":"268","severity":1,"message":"269","line":537,"column":40,"nodeType":"270","messageId":"271","endLine":537,"endColumn":42},{"ruleId":"268","severity":1,"message":"269","line":553,"column":27,"nodeType":"270","messageId":"271","endLine":553,"endColumn":29},{"ruleId":"268","severity":1,"message":"269","line":556,"column":30,"nodeType":"270","messageId":"271","endLine":556,"endColumn":32},{"ruleId":"268","severity":1,"message":"269","line":580,"column":27,"nodeType":"270","messageId":"271","endLine":580,"endColumn":29},{"ruleId":"268","severity":1,"message":"269","line":583,"column":30,"nodeType":"270","messageId":"271","endLine":583,"endColumn":32},{"ruleId":"268","severity":1,"message":"269","line":606,"column":27,"nodeType":"270","messageId":"271","endLine":606,"endColumn":29},{"ruleId":"268","severity":1,"message":"269","line":609,"column":30,"nodeType":"270","messageId":"271","endLine":609,"endColumn":32},{"ruleId":"284","severity":1,"message":"289","line":616,"column":21,"nodeType":"263","messageId":"286","endLine":616,"endColumn":30},{"ruleId":"268","severity":1,"message":"269","line":618,"column":47,"nodeType":"270","messageId":"271","endLine":618,"endColumn":49},{"ruleId":"268","severity":1,"message":"269","line":618,"column":107,"nodeType":"270","messageId":"271","endLine":618,"endColumn":109},{"ruleId":"268","severity":1,"message":"269","line":619,"column":56,"nodeType":"270","messageId":"271","endLine":619,"endColumn":58},{"ruleId":"284","severity":1,"message":"290","line":623,"column":21,"nodeType":"263","messageId":"286","endLine":623,"endColumn":31},{"ruleId":"268","severity":1,"message":"269","line":626,"column":51,"nodeType":"270","messageId":"271","endLine":626,"endColumn":53},{"ruleId":"268","severity":1,"message":"269","line":626,"column":111,"nodeType":"270","messageId":"271","endLine":626,"endColumn":113},{"ruleId":"268","severity":1,"message":"269","line":627,"column":60,"nodeType":"270","messageId":"271","endLine":627,"endColumn":62},{"ruleId":"268","severity":1,"message":"269","line":643,"column":27,"nodeType":"270","messageId":"271","endLine":643,"endColumn":29},{"ruleId":"268","severity":1,"message":"269","line":646,"column":30,"nodeType":"270","messageId":"271","endLine":646,"endColumn":32},{"ruleId":"268","severity":1,"message":"269","line":656,"column":47,"nodeType":"270","messageId":"271","endLine":656,"endColumn":49},{"ruleId":"284","severity":1,"message":"287","line":658,"column":33,"nodeType":"263","messageId":"286","endLine":658,"endColumn":37},{"ruleId":"268","severity":1,"message":"269","line":670,"column":51,"nodeType":"270","messageId":"271","endLine":670,"endColumn":53},{"ruleId":"284","severity":1,"message":"287","line":672,"column":37,"nodeType":"263","messageId":"286","endLine":672,"endColumn":41},{"ruleId":"268","severity":1,"message":"269","line":682,"column":41,"nodeType":"270","messageId":"271","endLine":682,"endColumn":43},{"ruleId":"268","severity":1,"message":"269","line":697,"column":27,"nodeType":"270","messageId":"271","endLine":697,"endColumn":29},{"ruleId":"268","severity":1,"message":"269","line":700,"column":30,"nodeType":"270","messageId":"271","endLine":700,"endColumn":32},{"ruleId":"284","severity":1,"message":"291","line":707,"column":21,"nodeType":"263","messageId":"286","endLine":707,"endColumn":25},{"ruleId":"268","severity":1,"message":"269","line":709,"column":47,"nodeType":"270","messageId":"271","endLine":709,"endColumn":49},{"ruleId":"268","severity":1,"message":"269","line":716,"column":51,"nodeType":"270","messageId":"271","endLine":716,"endColumn":53},{"ruleId":"268","severity":1,"message":"269","line":732,"column":27,"nodeType":"270","messageId":"271","endLine":732,"endColumn":29},{"ruleId":"268","severity":1,"message":"269","line":735,"column":30,"nodeType":"270","messageId":"271","endLine":735,"endColumn":32},{"ruleId":"261","severity":1,"message":"292","line":3,"column":9,"nodeType":"263","messageId":"264","endLine":3,"endColumn":17},{"ruleId":"261","severity":1,"message":"293","line":6,"column":7,"nodeType":"263","messageId":"264","endLine":6,"endColumn":12},{"ruleId":"261","severity":1,"message":"294","line":9,"column":9,"nodeType":"263","messageId":"264","endLine":9,"endColumn":16},{"ruleId":"261","severity":1,"message":"295","line":20,"column":10,"nodeType":"263","messageId":"264","endLine":20,"endColumn":22},{"ruleId":"261","severity":1,"message":"296","line":21,"column":7,"nodeType":"263","messageId":"264","endLine":21,"endColumn":19},{"ruleId":"261","severity":1,"message":"297","line":124,"column":9,"nodeType":"263","messageId":"264","endLine":124,"endColumn":13},{"ruleId":"268","severity":1,"message":"269","line":170,"column":21,"nodeType":"270","messageId":"271","endLine":170,"endColumn":23},{"ruleId":"261","severity":1,"message":"298","line":179,"column":13,"nodeType":"263","messageId":"264","endLine":179,"endColumn":17},{"ruleId":"261","severity":1,"message":"299","line":185,"column":15,"nodeType":"263","messageId":"264","endLine":185,"endColumn":21},{"ruleId":"261","severity":1,"message":"300","line":262,"column":7,"nodeType":"263","messageId":"264","endLine":262,"endColumn":15},{"ruleId":"268","severity":1,"message":"272","line":266,"column":21,"nodeType":"270","messageId":"271","endLine":266,"endColumn":23},{"ruleId":"261","severity":1,"message":"297","line":272,"column":13,"nodeType":"263","messageId":"264","endLine":272,"endColumn":17},{"ruleId":"261","severity":1,"message":"301","line":1,"column":9,"nodeType":"263","messageId":"264","endLine":1,"endColumn":13},{"ruleId":"261","severity":1,"message":"302","line":2,"column":9,"nodeType":"263","messageId":"264","endLine":2,"endColumn":13},{"ruleId":"261","severity":1,"message":"303","line":3,"column":9,"nodeType":"263","messageId":"264","endLine":3,"endColumn":22},{"ruleId":"261","severity":1,"message":"304","line":4,"column":9,"nodeType":"263","messageId":"264","endLine":4,"endColumn":22},{"ruleId":"261","severity":1,"message":"305","line":5,"column":9,"nodeType":"263","messageId":"264","endLine":5,"endColumn":24},{"ruleId":"261","severity":1,"message":"306","line":6,"column":9,"nodeType":"263","messageId":"264","endLine":6,"endColumn":18},{"ruleId":"261","severity":1,"message":"307","line":7,"column":10,"nodeType":"263","messageId":"264","endLine":7,"endColumn":18},{"ruleId":"261","severity":1,"message":"262","line":8,"column":8,"nodeType":"263","messageId":"264","endLine":8,"endColumn":13},{"ruleId":"261","severity":1,"message":"308","line":8,"column":17,"nodeType":"263","messageId":"264","endLine":8,"endColumn":26},{"ruleId":"261","severity":1,"message":"309","line":10,"column":5,"nodeType":"263","messageId":"264","endLine":10,"endColumn":13},{"ruleId":"261","severity":1,"message":"310","line":11,"column":7,"nodeType":"263","messageId":"264","endLine":11,"endColumn":10},{"ruleId":"261","severity":1,"message":"311","line":12,"column":7,"nodeType":"263","messageId":"264","endLine":12,"endColumn":15},{"ruleId":"261","severity":1,"message":"312","line":13,"column":7,"nodeType":"263","messageId":"264","endLine":13,"endColumn":16},{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","replacedBy":"316"},{"ruleId":"261","severity":1,"message":"301","line":1,"column":9,"nodeType":"263","messageId":"264","endLine":1,"endColumn":13},{"ruleId":"268","severity":1,"message":"269","line":59,"column":44,"nodeType":"270","messageId":"271","endLine":59,"endColumn":46},{"ruleId":"268","severity":1,"message":"269","line":60,"column":43,"nodeType":"270","messageId":"271","endLine":60,"endColumn":45},{"ruleId":"268","severity":1,"message":"269","line":76,"column":44,"nodeType":"270","messageId":"271","endLine":76,"endColumn":46},{"ruleId":"268","severity":1,"message":"269","line":77,"column":43,"nodeType":"270","messageId":"271","endLine":77,"endColumn":45},{"ruleId":"268","severity":1,"message":"269","line":85,"column":44,"nodeType":"270","messageId":"271","endLine":85,"endColumn":46},{"ruleId":"268","severity":1,"message":"269","line":86,"column":43,"nodeType":"270","messageId":"271","endLine":86,"endColumn":45},{"ruleId":"261","severity":1,"message":"301","line":1,"column":9,"nodeType":"263","messageId":"264","endLine":1,"endColumn":13},{"ruleId":"261","severity":1,"message":"302","line":2,"column":9,"nodeType":"263","messageId":"264","endLine":2,"endColumn":13},{"ruleId":"268","severity":1,"message":"269","line":52,"column":45,"nodeType":"270","messageId":"271","endLine":52,"endColumn":47},{"ruleId":"261","severity":1,"message":"301","line":1,"column":9,"nodeType":"263","messageId":"264","endLine":1,"endColumn":13},{"ruleId":"261","severity":1,"message":"302","line":2,"column":9,"nodeType":"263","messageId":"264","endLine":2,"endColumn":13},{"ruleId":"261","severity":1,"message":"317","line":6,"column":9,"nodeType":"263","messageId":"264","endLine":6,"endColumn":17},{"ruleId":"268","severity":1,"message":"269","line":59,"column":46,"nodeType":"270","messageId":"271","endLine":59,"endColumn":48},{"ruleId":"261","severity":1,"message":"304","line":5,"column":9,"nodeType":"263","messageId":"264","endLine":5,"endColumn":22},{"ruleId":"268","severity":1,"message":"272","line":27,"column":27,"nodeType":"270","messageId":"271","endLine":27,"endColumn":29},{"ruleId":"268","severity":1,"message":"269","line":35,"column":89,"nodeType":"270","messageId":"271","endLine":35,"endColumn":91},{"ruleId":"261","severity":1,"message":"318","line":2,"column":9,"nodeType":"263","messageId":"264","endLine":2,"endColumn":21},{"ruleId":"268","severity":1,"message":"272","line":28,"column":22,"nodeType":"270","messageId":"271","endLine":28,"endColumn":24},{"ruleId":"268","severity":1,"message":"269","line":75,"column":12,"nodeType":"270","messageId":"271","endLine":75,"endColumn":14},{"ruleId":"268","severity":1,"message":"269","line":92,"column":16,"nodeType":"270","messageId":"271","endLine":92,"endColumn":18},{"ruleId":"268","severity":1,"message":"269","line":116,"column":16,"nodeType":"270","messageId":"271","endLine":116,"endColumn":18},{"ruleId":"261","severity":1,"message":"302","line":1,"column":9,"nodeType":"263","messageId":"264","endLine":1,"endColumn":13},{"ruleId":"268","severity":1,"message":"269","line":63,"column":38,"nodeType":"270","messageId":"271","endLine":63,"endColumn":40},{"ruleId":"261","severity":1,"message":"319","line":90,"column":14,"nodeType":"263","messageId":"264","endLine":90,"endColumn":32},{"ruleId":"268","severity":1,"message":"272","line":32,"column":27,"nodeType":"270","messageId":"271","endLine":32,"endColumn":29},{"ruleId":"268","severity":1,"message":"269","line":36,"column":89,"nodeType":"270","messageId":"271","endLine":36,"endColumn":91},{"ruleId":"268","severity":1,"message":"269","line":41,"column":42,"nodeType":"270","messageId":"271","endLine":41,"endColumn":44},{"ruleId":"268","severity":1,"message":"272","line":28,"column":24,"nodeType":"270","messageId":"271","endLine":28,"endColumn":26},{"ruleId":"268","severity":1,"message":"272","line":28,"column":44,"nodeType":"270","messageId":"271","endLine":28,"endColumn":46},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'timerSpeed' is assigned a value but never used.","'sameLocation' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'randomize' is defined but never used.","'tempDeck' is assigned a value but never used.","'winner' is assigned a value but never used.","'cnt' is assigned a value but never used.","'num' is assigned a value but never used.","'rtn' is assigned a value but never used.","no-unreachable","Unreachable code.","IfStatement","unreachableCode","'max' is assigned a value but never used.","no-redeclare","'repeat' is already defined.","redeclared","'temp' is already defined.","'winner' is already defined.","'threeKind' is already defined.","'threeKind2' is already defined.","'pair' is already defined.","'response' is assigned a value but never used.","'mysql' is assigned a value but never used.","'resolve' is assigned a value but never used.","'readDataFile' is defined but never used.","'sendDeckList' is assigned a value but never used.","'hash' is assigned a value but never used.","'bing' is assigned a value but never used.","'verify' is assigned a value but never used.","'username' is assigned a value but never used.","'Card' is defined but never used.","'Deck' is defined but never used.","'FlashCardView' is defined but never used.","'FlashCardEdit' is defined but never used.","'FlashCardCreate' is defined but never used.","'DeckStudy' is defined but never used.","'HomePage' is defined but never used.","'Component' is defined but never used.","'deckList' is assigned a value but never used.","'row' is assigned a value but never used.","'leftSide' is assigned a value but never used.","'rightSide' is assigned a value but never used.","no-native-reassign",["320"],"no-negated-in-lhs",["321"],"'checkDup' is assigned a value but never used.","'ReturnButton' is defined but never used.","'createReturnButton' is defined but never used.","no-global-assign","no-unsafe-negation"]