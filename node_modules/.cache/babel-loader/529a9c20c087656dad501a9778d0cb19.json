{"ast":null,"code":"import { Card } from \"./Card.js\";\nimport { Deck } from \"./Deck.js\";\nimport { FlashCardEdit } from \"./FlashCardEdit.js\";\nimport { HomePage } from \"./HomePage.js\";\nimport { ReturnButton } from \"./ReturnButton.js\"; //visualizes the create deck view. used when creating a deck\n\nexport function DeckEdit(deck, deckList) {\n  var tempDeck = new Deck(\"TEMP\");\n  const buttonArray = document.createElement(\"div\");\n  buttonArray.appendChild(ReturnButton(deckList));\n  const saveButton = document.createElement(\"button\");\n  saveButton.innerHTML = \"Save\";\n  saveButton.addEventListener(\"click\", function () {\n    if (nameArea.value != 0 || Deck.length() > 0) {\n      tempDeck.setName(nameArea.value);\n\n      for (let i = 0; i < deckList.length; i++) {\n        if (deckList[i].getName() == deck.getName()) {\n          deckList[i] = tempDeck;\n          break;\n        }\n      }\n\n      document.body.innerHTML = \"\";\n      HomePage(deckList);\n    }\n  });\n  const nameArea = document.createElement(\"textArea\");\n  nameArea.value = deck.getName();\n  buttonArray.appendChild(nameArea);\n  var div = document.createElement(\"div\");\n  div.className = 'cardCreator';\n  var frontText = document.createElement(\"label\");\n  frontText.innerHTML = 'FRONT:   ';\n  div.appendChild(frontText);\n  var front = document.createElement(\"textarea\");\n  div.appendChild(front);\n  var br = document.createElement(\"br\");\n  var backText = document.createElement(\"label\");\n  backText.innerHTML = 'BACK:   ';\n  backText.className = \"backtext\";\n  div.appendChild(backText);\n  var back = document.createElement(\"textarea\");\n  div.appendChild(back);\n  div.appendChild(br);\n  var createButton = document.createElement(\"button\");\n  createButton.innerHTML = 'Create Card'; //when creating a new card while editing\n\n  createButton.addEventListener(\"click\", function () {\n    if (front.value != '' && back.value != '') {\n      //if(!deck.cardExists(front.value, back.value)){\n      //const newCard = new Card(front.value, back.value);\n      //FlashCardEdit(newCard, deck);\n      //deck.addCard(newCard);\n      //front.value = '';\n      //back.value = '';\n      //}\n      const newCard = new Card(front.value, back.value);\n      FlashCardEdit(newCard, tempDeck);\n    } //const newCard = new Card(front.value, back.value);\n    //FlashCardEdit(newCard, deck);\n\n  });\n  /*createButton.addEventListener(\"click\", function(){\n    if(front.value != '' && back.value != ''){\n      front.value = '';\n      back.value = '';\n    } \n  });*/\n\n  /*for(let i = 0; i < deck.length(); i++){\n      FlashCardEdit(deck.getCard(i), deck);\n  }*/\n\n  div.appendChild(createButton);\n  document.body.appendChild(div);\n}\n_c = DeckEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckEdit\");","map":{"version":3,"sources":["/Users/johnbrain/Projects/FlashCardProject/src/block/DeckEdit.js"],"names":["Card","Deck","FlashCardEdit","HomePage","ReturnButton","DeckEdit","deck","deckList","tempDeck","buttonArray","document","createElement","appendChild","saveButton","innerHTML","addEventListener","nameArea","value","length","setName","i","getName","body","div","className","frontText","front","br","backText","back","createButton","newCard"],"mappings":"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","sourcesContent":["import {Card} from \"./Card.js\";\nimport {Deck} from \"./Deck.js\";\nimport {FlashCardEdit} from \"./FlashCardEdit.js\"\nimport { HomePage } from \"./HomePage.js\";\nimport { ReturnButton } from \"./ReturnButton.js\";\n\n\n//visualizes the create deck view. used when creating a deck\nexport function DeckEdit(deck, deckList){\n\n    var tempDeck = new Deck(\"TEMP\");\n\n    const buttonArray = document.createElement(\"div\");\n\n    buttonArray.appendChild(ReturnButton(deckList));\n\n    const saveButton = document.createElement(\"button\");\n    saveButton.innerHTML = \"Save\";\n    saveButton.addEventListener(\"click\", function(){\n        if(nameArea.value != 0 || Deck.length() > 0){\n            tempDeck.setName(nameArea.value);\n            for(let i = 0; i < deckList.length; i++){\n                if(deckList[i].getName() == deck.getName()){\n                    deckList[i] = tempDeck;\n                    break;\n                }\n            }\n            document.body.innerHTML = \"\";\n            HomePage(deckList);\n        }\n    });\n\n    const nameArea = document.createElement(\"textArea\");\n    nameArea.value = deck.getName();\n    buttonArray.appendChild(nameArea);\n\n    var div = document.createElement(\"div\");\n    div.className = 'cardCreator';\n    \n    var frontText = document.createElement(\"label\");\n    frontText.innerHTML = 'FRONT:   ';\n    div.appendChild(frontText);\n    var front = document.createElement(\"textarea\");\n    div.appendChild(front);\n    var br = document.createElement(\"br\");\n    \n    var backText = document.createElement(\"label\");\n    backText.innerHTML = 'BACK:   ';\n    backText.className = \"backtext\";\n    div.appendChild(backText);\n    var back = document.createElement(\"textarea\");\n    div.appendChild(back);\n    div.appendChild(br);\n\n    var createButton = document.createElement(\"button\");\n    createButton.innerHTML = 'Create Card';\n    \n    //when creating a new card while editing\n    createButton.addEventListener(\"click\", function(){\n        if(front.value != '' && back.value != ''){\n            //if(!deck.cardExists(front.value, back.value)){\n                //const newCard = new Card(front.value, back.value);\n                //FlashCardEdit(newCard, deck);\n                //deck.addCard(newCard);\n                //front.value = '';\n                //back.value = '';\n            //}\n            const newCard = new Card(front.value, back.value);\n            FlashCardEdit(newCard, tempDeck);\n        } \n        //const newCard = new Card(front.value, back.value);\n        //FlashCardEdit(newCard, deck);\n    });\n\n    /*createButton.addEventListener(\"click\", function(){\n      if(front.value != '' && back.value != ''){\n        front.value = '';\n        back.value = '';\n      } \n    });*/ \n\n    /*for(let i = 0; i < deck.length(); i++){\n        FlashCardEdit(deck.getCard(i), deck);\n    }*/\n\n    div.appendChild(createButton);\n    document.body.appendChild(div);\n}"]},"metadata":{},"sourceType":"module"}