{"ast":null,"code":"import { Card } from \"./Card.js\";\nimport { Deck } from \"./Deck.js\"; //visualizes a card when in edit mode or creating the card\n\nexport function FlashCardEdit(card, deck) {\n  var checkDup = false;\n  /*if(front.value != '' && back.value != ''){\n  for(let k = 0; k < cardList.length; k++){\n      if(front.value == cardList[k][0] && back.value == cardList[k][1]){\n      checkDup = true;\n      }\n  }*/\n\n  const newCard = document.createElement(\"div\");\n  newCard.className = \"flashcard\";\n  const frontSide = document.createElement(\"textArea\");\n  frontSide.innerHTML = card.getFront();\n  frontSide.tagName = 1;\n  const backSide = document.createElement(\"textArea\");\n  backSide.innerHTML = card.getBack();\n  backSide.tagName = 2;\n  newCard.appendChild(frontSide);\n  newCard.appendChild(backSide);\n  var deleteButton = document.createElement(\"button\");\n  deleteButton.innerHTML = 'DELETE';\n  deleteButton.className = \"deleteButton\";\n  deleteButton.addEventListener(\"click\", function () {\n    deck.removeCardName(card.getFront(), card.getBack());\n    document.body.removeChild(newCard);\n  });\n  newCard.appendChild(deleteButton);\n  const starButton2 = document.createElement(\"button\");\n  starButton2.innerHTML = 'Star';\n  starButton2.className = \"starButton\";\n  starButton2.tagName = 3;\n\n  if (card.getStar()) {\n    starButton2.style.backgroundColor = \"gold\";\n  }\n\n  starButton2.addEventListener(\"click\", function () {\n    card.setStar();\n\n    if (starButton2.style.backgroundColor == \"gold\") {\n      starButton2.style.backgroundColor = \"\";\n    } else {\n      starButton2.style.backgroundColor = \"gold\";\n    }\n  });\n  newCard.appendChild(starButton2);\n  document.body.appendChild(newCard); //return newCard;  \n}\n_c = FlashCardEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"FlashCardEdit\");","map":{"version":3,"sources":["/Users/johnbrain/Projects/FlashCardProject/src/block/FlashCardEdit.js"],"names":["Card","Deck","FlashCardEdit","card","deck","checkDup","newCard","document","createElement","className","frontSide","innerHTML","getFront","tagName","backSide","getBack","appendChild","deleteButton","addEventListener","removeCardName","body","removeChild","starButton2","getStar","style","backgroundColor","setStar"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,WAAnB;AACA,SAAQC,IAAR,QAAmB,WAAnB,C,CAEA;;AACA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAkC;AACrC,MAAIC,QAAQ,GAAG,KAAf;AACA;AACJ;AACA;AACA;AACA;AACA;;AAEI,QAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;AAEAF,EAAAA,OAAO,CAACG,SAAR,GAAoB,WAApB;AAEA,QAAMC,SAAS,GAAGH,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAlB;AACAE,EAAAA,SAAS,CAACC,SAAV,GAAsBR,IAAI,CAACS,QAAL,EAAtB;AACAF,EAAAA,SAAS,CAACG,OAAV,GAAoB,CAApB;AACA,QAAMC,QAAQ,GAAGP,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;AACAM,EAAAA,QAAQ,CAACH,SAAT,GAAqBR,IAAI,CAACY,OAAL,EAArB;AACAD,EAAAA,QAAQ,CAACD,OAAT,GAAmB,CAAnB;AACAP,EAAAA,OAAO,CAACU,WAAR,CAAoBN,SAApB;AACAJ,EAAAA,OAAO,CAACU,WAAR,CAAoBF,QAApB;AAEA,MAAIG,YAAY,GAAGV,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAnB;AACAS,EAAAA,YAAY,CAACN,SAAb,GAAyB,QAAzB;AACAM,EAAAA,YAAY,CAACR,SAAb,GAAyB,cAAzB;AACAQ,EAAAA,YAAY,CAACC,gBAAb,CAA8B,OAA9B,EAAuC,YAAU;AAC7Cd,IAAAA,IAAI,CAACe,cAAL,CAAoBhB,IAAI,CAACS,QAAL,EAApB,EAAqCT,IAAI,CAACY,OAAL,EAArC;AACAR,IAAAA,QAAQ,CAACa,IAAT,CAAcC,WAAd,CAA0Bf,OAA1B;AACH,GAHD;AAIAA,EAAAA,OAAO,CAACU,WAAR,CAAoBC,YAApB;AAEA,QAAMK,WAAW,GAAGf,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAApB;AACAc,EAAAA,WAAW,CAACX,SAAZ,GAAwB,MAAxB;AACAW,EAAAA,WAAW,CAACb,SAAZ,GAAwB,YAAxB;AACAa,EAAAA,WAAW,CAACT,OAAZ,GAAsB,CAAtB;;AACA,MAAGV,IAAI,CAACoB,OAAL,EAAH,EAAkB;AACdD,IAAAA,WAAW,CAACE,KAAZ,CAAkBC,eAAlB,GAAoC,MAApC;AACH;;AACDH,EAAAA,WAAW,CAACJ,gBAAZ,CAA6B,OAA7B,EAAsC,YAAU;AAC5Cf,IAAAA,IAAI,CAACuB,OAAL;;AACA,QAAGJ,WAAW,CAACE,KAAZ,CAAkBC,eAAlB,IAAqC,MAAxC,EAA+C;AAC3CH,MAAAA,WAAW,CAACE,KAAZ,CAAkBC,eAAlB,GAAoC,EAApC;AACH,KAFD,MAGI;AACAH,MAAAA,WAAW,CAACE,KAAZ,CAAkBC,eAAlB,GAAoC,MAApC;AACH;AACJ,GARD;AASAnB,EAAAA,OAAO,CAACU,WAAR,CAAoBM,WAApB;AAGAf,EAAAA,QAAQ,CAACa,IAAT,CAAcJ,WAAd,CAA0BV,OAA1B,EAlDqC,CAmDrC;AAEH;KArDeJ,a","sourcesContent":["import {Card} from \"./Card.js\";\nimport {Deck} from \"./Deck.js\";\n\n//visualizes a card when in edit mode or creating the card\nexport function FlashCardEdit(card, deck){\n    var checkDup = false;\n    /*if(front.value != '' && back.value != ''){\n    for(let k = 0; k < cardList.length; k++){\n        if(front.value == cardList[k][0] && back.value == cardList[k][1]){\n        checkDup = true;\n        }\n    }*/\n\n    const newCard = document.createElement(\"div\");\n        \n    newCard.className = \"flashcard\";\n\n    const frontSide = document.createElement(\"textArea\");\n    frontSide.innerHTML = card.getFront();\n    frontSide.tagName = 1;\n    const backSide = document.createElement(\"textArea\");\n    backSide.innerHTML = card.getBack();\n    backSide.tagName = 2;\n    newCard.appendChild(frontSide);\n    newCard.appendChild(backSide);\n\n    var deleteButton = document.createElement(\"button\");\n    deleteButton.innerHTML = 'DELETE';\n    deleteButton.className = \"deleteButton\";\n    deleteButton.addEventListener(\"click\", function(){\n        deck.removeCardName(card.getFront(), card.getBack());\n        document.body.removeChild(newCard);\n    });\n    newCard.appendChild(deleteButton);\n\n    const starButton2 = document.createElement(\"button\");\n    starButton2.innerHTML = 'Star';\n    starButton2.className = \"starButton\";\n    starButton2.tagName = 3;\n    if(card.getStar()){\n        starButton2.style.backgroundColor = \"gold\";\n    }\n    starButton2.addEventListener(\"click\", function(){\n        card.setStar();\n        if(starButton2.style.backgroundColor == \"gold\"){\n            starButton2.style.backgroundColor = \"\";\n        }\n        else{\n            starButton2.style.backgroundColor = \"gold\";\n        }\n    });\n    newCard.appendChild(starButton2);\n\n\n    document.body.appendChild(newCard);\n    //return newCard;  \n    \n}"]},"metadata":{},"sourceType":"module"}