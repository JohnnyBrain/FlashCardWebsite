{"ast":null,"code":"import React, { useState } from \"react\";\nconst typingTestValue = \"sample test text for typing test\";\nconst wordBank = [\"high\", \"happy\", \"good\", \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\", \"high\", \"happy\", \"good\", \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\", \"high\", \"happy\", \"good\", \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\", \"high\", \"happy\", \"good\", \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\", \"high\", \"happy\", \"good\", \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\"];\nvar highScore = 0;\n\nfunction TypingPage() {\n  const wordList = shuffle(wordBank);\n  var wordString = \"\";\n\n  for (let k = 0; k < wordList.length; k++) {\n    for (let l = 0; l < wordList[k].length; l++) {\n      wordString += wordList[k].charAt(l);\n    }\n\n    if (k != wordList.length - 1) {\n      wordString += \" \";\n    }\n  }\n\n  const retryArea = document.createElement(\"div\");\n  retryArea.className = \"retryArea\";\n  /*const retryButton = document.createElement(\"button\");\n  retryButton.innerHTML = \"RETRY\";\n  retryButton.addEventListener(\"click\", function(){\n      document.body.innerHTML = \"\";\n      highScore = Math.max(highScore, correctScore.innerHTML);\n      TypingPage();\n  });\n  retryArea.appendChild(retryButton);\n  \n  const highScoreLabel = document.createElement(\"label\");\n  highScoreLabel.innerHTML = highScore;\n  retryArea.appendChild(highScoreLabel);\n   document.body.appendChild(retryArea);*/\n\n  const title = document.createElement(\"span\");\n  title.className = \"title\";\n  title.innerHTML = \"TYPIFY\";\n  retryArea.appendChild(title);\n  const retryButton = document.createElement(\"button\");\n  retryButton.innerHTML = \"RETRY\";\n  retryButton.addEventListener(\"click\", function () {\n    document.body.innerHTML = \"\";\n    highScore = Math.max(highScore, correctScore.innerHTML);\n    TypingPage();\n  });\n  retryArea.appendChild(retryButton);\n  const highScoreLabel = document.createElement(\"label\");\n  highScoreLabel.innerHTML = highScore;\n  retryArea.appendChild(highScoreLabel);\n  document.body.appendChild(retryArea);\n  const typingArea = document.createElement(\"div\");\n  typingArea.className = \"typingArea\";\n  const tempAreaB = document.createElement(\"span\");\n  typingArea.appendChild(tempAreaB);\n  const target = document.createElement(\"span\");\n  target.innerHTML = wordString.substring(0, 1);\n  typingArea.appendChild(target);\n  target.style.color = \"green\"; //target.style.fontWeight = \"bold\";\n\n  const tempAreaA = document.createElement(\"span\");\n  tempAreaA.innerHTML = wordString.substring(1, 20);\n  typingArea.appendChild(tempAreaA);\n  document.body.appendChild(document.createElement(\"br\"));\n  tempAreaB.style.marginLeft = \"100px\";\n  var tCorrect = 0;\n  var tWrong = 0;\n  var wordCount = 0;\n  var started = true;\n  const timerDisplay = document.createElement(\"circle\"); //document.body.appendChild(timerDisplay);\n\n  timerDisplay.className = \"timerDisplay\";\n  var sec = 60;\n  timerDisplay.innerHTML = sec;\n  const dataArea = document.createElement(\"div\");\n  dataArea.className = \"dataArea\";\n  dataArea.appendChild(timerDisplay);\n  const wordCountLabel = document.createElement(\"label\");\n  wordCountLabel.innerHTML = wordCount;\n  wordCountLabel.className = \"scoreArea\";\n  dataArea.appendChild(wordCountLabel);\n  const correctScore = document.createElement(\"label\");\n  correctScore.innerHTML = tCorrect;\n  correctScore.className = \"scoreArea\";\n  dataArea.appendChild(correctScore);\n  const wrongScore = document.createElement(\"label\");\n  wrongScore.innerHTML = tWrong;\n  wrongScore.className = \"scoreArea\";\n  dataArea.appendChild(wrongScore);\n  document.body.appendChild(dataArea);\n  const dataTextArea = document.createElement(\"div\");\n  const timerText = document.createElement(\"span\");\n  timerText.innerHTML = \"seconds\";\n  dataTextArea.appendChild(timerText);\n  const wordCountText = document.createElement(\"span\");\n  wordCountText.innerHTML = \"words completed\";\n  dataTextArea.appendChild(wordCountText);\n  const wordRateText = document.createElement(\"span\");\n  wordRateText.innerHTML = \"words / min\";\n  dataTextArea.appendChild(wordRateText);\n  const wrongScoreText = document.createElement(\"span\");\n  wrongScoreText.innerHTML = \"# chars wrong\";\n  dataTextArea.appendChild(wrongScoreText);\n  document.body.appendChild(dataTextArea);\n  document.body.appendChild(typingArea);\n  document.body.appendChild(document.createElement('br')); //var i = 0\n  //var i = 10;\n\n  var i = 0;\n  var wordDone = false;\n  tempAreaB.style.opacity = \"30%\";\n  document.addEventListener('keydown', function (event) {\n    if (i < wordString.length && sec > 0) {\n      var tempVal = wordString.substring(i, i + 1).charCodeAt(0);\n\n      if (tempVal > 90) {\n        tempVal = tempVal - 32;\n      }\n\n      if (event.keyCode == tempVal) {\n        i++; //testArea.innerHTML = wordList[i] + wordList[i + 1];\n\n        if (i < 20) {\n          tempAreaB.innerHTML = wordString.substring(0, i);\n          target.innerHTML = wordString.substring(i, i + 1);\n          tempAreaA.innerHTML = wordString.substring(i + 1, 20 + i);\n        } else {\n          tempAreaB.innerHTML = wordString.substring(i - 15, i);\n          target.innerHTML = wordString.substring(i, i + 1);\n          tempAreaA.innerHTML = wordString.substring(i + 1, 20 + i);\n        }\n\n        tCorrect += 1;\n        target.style.color = \"green\";\n\n        if (tempVal == 32) {\n          wordCount++;\n          wordCountLabel.innerHTML = wordCount;\n        }\n      } else {\n        if (tempVal == 32) {\n          target.innerHTML = \"_\";\n        }\n\n        tWrong += 1;\n        wrongScore.innerHTML = tWrong; //testArea.style.color = \"red\";\n\n        target.style.color = \"red\";\n      }\n    }\n    /*else if(i >= wordString.length){\n        var tempVal = wordString.substring(0, 1).charCodeAt(0);\n        if(tempVal > 90){\n            tempVal = tempVal - 32;\n        }\n        if(event.keyCode == tempVal){\n            wordString = wordString.substring(1, wordString.length);\n            tCorrect += 1;\n            if(tempVal == 32){\n                wordCount++;\n            }\n        }\n        else{\n            tWrong += 1;\n            wrongScore.innerHTML = tWrong;\n        }\n    }*/\n\n\n    if (started) {\n      var timer = setInterval(function () {\n        if (sec >= 10) {\n          timerDisplay.innerHTML = sec;\n        } else if (sec >= 0) {\n          timerDisplay.innerHTML = \"0\" + sec;\n        }\n\n        sec--;\n\n        if (sec < 0\n        /*|| testArea.innerHTML.length == 0*/\n\n        /*i == wordList.length*/\n        ) {\n          clearInterval(timer);\n          highScore = Math.max(highScore, correctScore.innerHTML);\n          highScoreLabel.innerHTML = highScore;\n        }\n\n        if (sec > 0) {\n          correctScore.innerHTML = Math.floor(wordCount / (60 - sec) * 60);\n        }\n      }, 1000);\n    }\n\n    started = false; //if(event.keyCode == 83){\n    //testArea.innerHTML = \"done\";\n    //}\n  });\n  /*const retryArea = document.createElement(\"div\");\n  retryArea.className = \"retryArea\";\n    const retryButton = document.createElement(\"button\");\n  retryButton.innerHTML = \"RETRY\";\n  retryButton.addEventListener(\"click\", function(){\n      document.body.innerHTML = \"\";\n      highScore = Math.max(highScore, correctScore.innerHTML);\n      TypingPage();\n  });\n  retryArea.appendChild(retryButton);\n  \n  const highScoreLabel = document.createElement(\"label\");\n  highScoreLabel.innerHTML = highScore;\n  retryArea.appendChild(highScoreLabel);\n   document.body.appendChild(retryArea);*/\n}\n\n_c = TypingPage;\n\nfunction shuffle(array) {\n  let currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle.\n\n  while (currentIndex != 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n/*function timer(){\n    const timerDisplay = document.createElement(\"label\");\n    document.body.appendChild(timerDisplay);\n    timerDisplay.className = \"timerDisplay\";\n    var sec = 60;\n    timerDisplay.innerHTML = '00: ' + sec;\n    var timer = setInterval(function(){\n        timerDisplay.innerHTML = '00: ' + sec;\n        sec--;\n\n        if(sec < 0){\n            clearInterval(timer);\n        }\n    }, 1000);\n}*/\n\n\nexport default TypingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypingPage\");","map":{"version":3,"sources":["/Users/johnbrain/Japanese/TypingTestSite/src/TypingPage.js"],"names":["React","useState","typingTestValue","wordBank","highScore","TypingPage","wordList","shuffle","wordString","k","length","l","charAt","retryArea","document","createElement","className","title","innerHTML","appendChild","retryButton","addEventListener","body","Math","max","correctScore","highScoreLabel","typingArea","tempAreaB","target","substring","style","color","tempAreaA","marginLeft","tCorrect","tWrong","wordCount","started","timerDisplay","sec","dataArea","wordCountLabel","wrongScore","dataTextArea","timerText","wordCountText","wordRateText","wrongScoreText","i","wordDone","opacity","event","tempVal","charCodeAt","keyCode","timer","setInterval","clearInterval","floor","array","currentIndex","randomIndex","random"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,MAAMC,eAAe,GAAG,kCAAxB;AAEA,MAAMC,QAAQ,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA2B,MAA3B,EAAmC,KAAnC,EAA0C,MAA1C,EAAkD,MAAlD,EAA0D,OAA1D,EAAmE,MAAnE,EAA2E,MAA3E,EAAmF,SAAnF,EAA8F,SAA9F,EACf,MADe,EACP,OADO,EACE,MADF,EACW,MADX,EACmB,KADnB,EAC0B,MAD1B,EACkC,MADlC,EAC0C,OAD1C,EACmD,MADnD,EAC2D,MAD3D,EACmE,SADnE,EAC8E,SAD9E,EAEjB,MAFiB,EAET,OAFS,EAEA,MAFA,EAES,MAFT,EAEiB,KAFjB,EAEwB,MAFxB,EAEgC,MAFhC,EAEwC,OAFxC,EAEiD,MAFjD,EAEyD,MAFzD,EAEiE,SAFjE,EAE4E,SAF5E,EAGjB,MAHiB,EAGT,OAHS,EAGA,MAHA,EAGS,MAHT,EAGiB,KAHjB,EAGwB,MAHxB,EAGgC,MAHhC,EAGwC,OAHxC,EAGiD,MAHjD,EAGyD,MAHzD,EAGiE,SAHjE,EAG4E,SAH5E,EAIjB,MAJiB,EAIT,OAJS,EAIA,MAJA,EAIS,MAJT,EAIiB,KAJjB,EAIwB,MAJxB,EAIgC,MAJhC,EAIwC,OAJxC,EAIiD,MAJjD,EAIyD,MAJzD,EAIiE,SAJjE,EAI4E,SAJ5E,CAAjB;AAKA,IAAIC,SAAS,GAAG,CAAhB;;AAEA,SAASC,UAAT,GAAsB;AAClB,QAAMC,QAAQ,GAAGC,OAAO,CAACJ,QAAD,CAAxB;AACA,MAAIK,UAAU,GAAG,EAAjB;;AACA,OAAI,IAAIC,CAAC,GAAI,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAAyC;AACrC,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,QAAQ,CAACG,CAAD,CAAR,CAAYC,MAA/B,EAAuCC,CAAC,EAAxC,EAA2C;AACvCH,MAAAA,UAAU,IAAIF,QAAQ,CAACG,CAAD,CAAR,CAAYG,MAAZ,CAAmBD,CAAnB,CAAd;AACH;;AACD,QAAGF,CAAC,IAAIH,QAAQ,CAACI,MAAT,GAAkB,CAA1B,EAA4B;AACxBF,MAAAA,UAAU,IAAI,GAAd;AACH;AACJ;;AAED,QAAMK,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AACAF,EAAAA,SAAS,CAACG,SAAV,GAAsB,WAAtB;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKI,QAAMC,KAAK,GAAGH,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAd;AACAE,EAAAA,KAAK,CAACD,SAAN,GAAkB,OAAlB;AACAC,EAAAA,KAAK,CAACC,SAAN,GAAkB,QAAlB;AAEAL,EAAAA,SAAS,CAACM,WAAV,CAAsBF,KAAtB;AAEA,QAAMG,WAAW,GAAGN,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAApB;AACAK,EAAAA,WAAW,CAACF,SAAZ,GAAwB,OAAxB;AACAE,EAAAA,WAAW,CAACC,gBAAZ,CAA6B,OAA7B,EAAsC,YAAU;AAC5CP,IAAAA,QAAQ,CAACQ,IAAT,CAAcJ,SAAd,GAA0B,EAA1B;AACAd,IAAAA,SAAS,GAAGmB,IAAI,CAACC,GAAL,CAASpB,SAAT,EAAoBqB,YAAY,CAACP,SAAjC,CAAZ;AACAb,IAAAA,UAAU;AACb,GAJD;AAKAQ,EAAAA,SAAS,CAACM,WAAV,CAAsBC,WAAtB;AAEA,QAAMM,cAAc,GAAGZ,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAvB;AACAW,EAAAA,cAAc,CAACR,SAAf,GAA2Bd,SAA3B;AACAS,EAAAA,SAAS,CAACM,WAAV,CAAsBO,cAAtB;AAEAZ,EAAAA,QAAQ,CAACQ,IAAT,CAAcH,WAAd,CAA0BN,SAA1B;AAKA,QAAMc,UAAU,GAAGb,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAnB;AACAY,EAAAA,UAAU,CAACX,SAAX,GAAuB,YAAvB;AAEA,QAAMY,SAAS,GAAGd,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAlB;AACAY,EAAAA,UAAU,CAACR,WAAX,CAAuBS,SAAvB;AAEA,QAAMC,MAAM,GAAGf,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAf;AACAc,EAAAA,MAAM,CAACX,SAAP,GAAmBV,UAAU,CAACsB,SAAX,CAAqB,CAArB,EAAwB,CAAxB,CAAnB;AACAH,EAAAA,UAAU,CAACR,WAAX,CAAuBU,MAAvB;AACAA,EAAAA,MAAM,CAACE,KAAP,CAAaC,KAAb,GAAqB,OAArB,CAlEkB,CAmElB;;AAEA,QAAMC,SAAS,GAAGnB,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAlB;AACAkB,EAAAA,SAAS,CAACf,SAAV,GAAsBV,UAAU,CAACsB,SAAX,CAAqB,CAArB,EAAwB,EAAxB,CAAtB;AACAH,EAAAA,UAAU,CAACR,WAAX,CAAuBc,SAAvB;AAEAnB,EAAAA,QAAQ,CAACQ,IAAT,CAAcH,WAAd,CAA0BL,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAA1B;AACAa,EAAAA,SAAS,CAACG,KAAV,CAAgBG,UAAhB,GAA6B,OAA7B;AAGA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,SAAS,GAAG,CAAhB;AAEA,MAAIC,OAAO,GAAG,IAAd;AACA,QAAMC,YAAY,GAAGzB,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAArB,CAlFkB,CAmFlB;;AACAwB,EAAAA,YAAY,CAACvB,SAAb,GAAyB,cAAzB;AACA,MAAIwB,GAAG,GAAG,EAAV;AACAD,EAAAA,YAAY,CAACrB,SAAb,GAAyBsB,GAAzB;AAEA,QAAMC,QAAQ,GAAG3B,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;AACA0B,EAAAA,QAAQ,CAACzB,SAAT,GAAqB,UAArB;AAEAyB,EAAAA,QAAQ,CAACtB,WAAT,CAAqBoB,YAArB;AAEA,QAAMG,cAAc,GAAG5B,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAvB;AACA2B,EAAAA,cAAc,CAACxB,SAAf,GAA2BmB,SAA3B;AACAK,EAAAA,cAAc,CAAC1B,SAAf,GAA2B,WAA3B;AACAyB,EAAAA,QAAQ,CAACtB,WAAT,CAAqBuB,cAArB;AAEA,QAAMjB,YAAY,GAAEX,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAApB;AACAU,EAAAA,YAAY,CAACP,SAAb,GAAyBiB,QAAzB;AACAV,EAAAA,YAAY,CAACT,SAAb,GAAyB,WAAzB;AACAyB,EAAAA,QAAQ,CAACtB,WAAT,CAAqBM,YAArB;AAEA,QAAMkB,UAAU,GAAE7B,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAlB;AACA4B,EAAAA,UAAU,CAACzB,SAAX,GAAuBkB,MAAvB;AACAO,EAAAA,UAAU,CAAC3B,SAAX,GAAuB,WAAvB;AACAyB,EAAAA,QAAQ,CAACtB,WAAT,CAAqBwB,UAArB;AAEA7B,EAAAA,QAAQ,CAACQ,IAAT,CAAcH,WAAd,CAA0BsB,QAA1B;AAEA,QAAMG,YAAY,GAAG9B,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAArB;AAEA,QAAM8B,SAAS,GAAG/B,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAlB;AACA8B,EAAAA,SAAS,CAAC3B,SAAV,GAAsB,SAAtB;AACA0B,EAAAA,YAAY,CAACzB,WAAb,CAAyB0B,SAAzB;AACA,QAAMC,aAAa,GAAGhC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAtB;AACA+B,EAAAA,aAAa,CAAC5B,SAAd,GAA0B,iBAA1B;AACA0B,EAAAA,YAAY,CAACzB,WAAb,CAAyB2B,aAAzB;AACA,QAAMC,YAAY,GAAGjC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAArB;AACAgC,EAAAA,YAAY,CAAC7B,SAAb,GAAyB,aAAzB;AACA0B,EAAAA,YAAY,CAACzB,WAAb,CAAyB4B,YAAzB;AACA,QAAMC,cAAc,GAAGlC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAvB;AACAiC,EAAAA,cAAc,CAAC9B,SAAf,GAA2B,eAA3B;AACA0B,EAAAA,YAAY,CAACzB,WAAb,CAAyB6B,cAAzB;AAEAlC,EAAAA,QAAQ,CAACQ,IAAT,CAAcH,WAAd,CAA0ByB,YAA1B;AAGA9B,EAAAA,QAAQ,CAACQ,IAAT,CAAcH,WAAd,CAA0BQ,UAA1B;AAEAb,EAAAA,QAAQ,CAACQ,IAAT,CAAcH,WAAd,CAA0BL,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAA1B,EAlIkB,CAoIlB;AACA;;AACA,MAAIkC,CAAC,GAAG,CAAR;AACA,MAAIC,QAAQ,GAAG,KAAf;AAGAtB,EAAAA,SAAS,CAACG,KAAV,CAAgBoB,OAAhB,GAA0B,KAA1B;AACArC,EAAAA,QAAQ,CAACO,gBAAT,CAA0B,SAA1B,EAAqC,UAAS+B,KAAT,EAAe;AAEhD,QAAGH,CAAC,GAAGzC,UAAU,CAACE,MAAf,IAAyB8B,GAAG,GAAG,CAAlC,EAAoC;AAChC,UAAIa,OAAO,GAAG7C,UAAU,CAACsB,SAAX,CAAqBmB,CAArB,EAAwBA,CAAC,GAAG,CAA5B,EAA+BK,UAA/B,CAA0C,CAA1C,CAAd;;AACA,UAAGD,OAAO,GAAG,EAAb,EAAgB;AACZA,QAAAA,OAAO,GAAGA,OAAO,GAAG,EAApB;AACH;;AACD,UAAGD,KAAK,CAACG,OAAN,IAAiBF,OAApB,EAA4B;AACxBJ,QAAAA,CAAC,GADuB,CAExB;;AACA,YAAGA,CAAC,GAAG,EAAP,EAAU;AACNrB,UAAAA,SAAS,CAACV,SAAV,GAAsBV,UAAU,CAACsB,SAAX,CAAqB,CAArB,EAAwBmB,CAAxB,CAAtB;AACApB,UAAAA,MAAM,CAACX,SAAP,GAAmBV,UAAU,CAACsB,SAAX,CAAqBmB,CAArB,EAAwBA,CAAC,GAAG,CAA5B,CAAnB;AACAhB,UAAAA,SAAS,CAACf,SAAV,GAAsBV,UAAU,CAACsB,SAAX,CAAqBmB,CAAC,GAAG,CAAzB,EAA4B,KAAKA,CAAjC,CAAtB;AACH,SAJD,MAKI;AACArB,UAAAA,SAAS,CAACV,SAAV,GAAsBV,UAAU,CAACsB,SAAX,CAAqBmB,CAAC,GAAG,EAAzB,EAA6BA,CAA7B,CAAtB;AACApB,UAAAA,MAAM,CAACX,SAAP,GAAmBV,UAAU,CAACsB,SAAX,CAAqBmB,CAArB,EAAwBA,CAAC,GAAG,CAA5B,CAAnB;AACAhB,UAAAA,SAAS,CAACf,SAAV,GAAsBV,UAAU,CAACsB,SAAX,CAAqBmB,CAAC,GAAG,CAAzB,EAA4B,KAAKA,CAAjC,CAAtB;AACH;;AACDd,QAAAA,QAAQ,IAAI,CAAZ;AACAN,QAAAA,MAAM,CAACE,KAAP,CAAaC,KAAb,GAAqB,OAArB;;AACA,YAAGqB,OAAO,IAAI,EAAd,EAAiB;AACbhB,UAAAA,SAAS;AACTK,UAAAA,cAAc,CAACxB,SAAf,GAA2BmB,SAA3B;AACH;AACJ,OAnBD,MAoBI;AACA,YAAGgB,OAAO,IAAI,EAAd,EAAiB;AACbxB,UAAAA,MAAM,CAACX,SAAP,GAAmB,GAAnB;AACH;;AACDkB,QAAAA,MAAM,IAAI,CAAV;AACAO,QAAAA,UAAU,CAACzB,SAAX,GAAuBkB,MAAvB,CALA,CAMA;;AACAP,QAAAA,MAAM,CAACE,KAAP,CAAaC,KAAb,GAAqB,KAArB;AAEH;AACJ;AACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKQ,QAAGM,OAAH,EAAW;AACP,UAAIkB,KAAK,GAAGC,WAAW,CAAC,YAAU;AAC9B,YAAGjB,GAAG,IAAI,EAAV,EAAa;AACTD,UAAAA,YAAY,CAACrB,SAAb,GAAyBsB,GAAzB;AACH,SAFD,MAGK,IAAGA,GAAG,IAAI,CAAV,EAAY;AACbD,UAAAA,YAAY,CAACrB,SAAb,GAAyB,MAAMsB,GAA/B;AACH;;AACDA,QAAAA,GAAG;;AAEH,YAAGA,GAAG,GAAG;AAAE;;AAAqC;AAAhD,UAAyE;AACrEkB,UAAAA,aAAa,CAACF,KAAD,CAAb;AACApD,UAAAA,SAAS,GAAGmB,IAAI,CAACC,GAAL,CAASpB,SAAT,EAAoBqB,YAAY,CAACP,SAAjC,CAAZ;AACAQ,UAAAA,cAAc,CAACR,SAAf,GAA2Bd,SAA3B;AACH;;AACD,YAAGoC,GAAG,GAAG,CAAT,EAAW;AACPf,UAAAA,YAAY,CAACP,SAAb,GAAyBK,IAAI,CAACoC,KAAL,CAAWtB,SAAS,IAAI,KAAKG,GAAT,CAAT,GAAyB,EAApC,CAAzB;AACH;AAGJ,OAnBsB,EAmBpB,IAnBoB,CAAvB;AAoBF;;AACDF,IAAAA,OAAO,GAAG,KAAV,CAjF+C,CAmFhD;AACI;AACJ;AACH,GAtFD;AAwFA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKC;;KAtPQjC,U;;AAwPT,SAASE,OAAT,CAAiBqD,KAAjB,EAAwB;AACpB,MAAIC,YAAY,GAAGD,KAAK,CAAClD,MAAzB;AAAA,MAAkCoD,WAAlC,CADoB,CAGpB;;AACA,SAAOD,YAAY,IAAI,CAAvB,EAA0B;AAExB;AACAC,IAAAA,WAAW,GAAGvC,IAAI,CAACoC,KAAL,CAAWpC,IAAI,CAACwC,MAAL,KAAgBF,YAA3B,CAAd;AACAA,IAAAA,YAAY,GAJY,CAMxB;;AACA,KAACD,KAAK,CAACC,YAAD,CAAN,EAAsBD,KAAK,CAACE,WAAD,CAA3B,IAA4C,CAC1CF,KAAK,CAACE,WAAD,CADqC,EACtBF,KAAK,CAACC,YAAD,CADiB,CAA5C;AAED;;AAED,SAAOD,KAAP;AACD;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAevD,UAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst typingTestValue = \"sample test text for typing test\";\n\nconst wordBank = [\"high\", \"happy\", \"good\" , \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\"\n, \"high\", \"happy\", \"good\" , \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\", \n\"high\", \"happy\", \"good\" , \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\", \n\"high\", \"happy\", \"good\" , \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\", \n\"high\", \"happy\", \"good\" , \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\"];\nvar highScore = 0;\n\nfunction TypingPage() {\n    const wordList = shuffle(wordBank);\n    var wordString = \"\";\n    for(let k =  0; k < wordList.length; k++){\n        for(let l = 0; l < wordList[k].length; l++){\n            wordString += wordList[k].charAt(l);\n        }\n        if(k != wordList.length - 1){\n            wordString += \" \";\n        }\n    }\n\n    const retryArea = document.createElement(\"div\");\n    retryArea.className = \"retryArea\";\n\n\n    /*const retryButton = document.createElement(\"button\");\n    retryButton.innerHTML = \"RETRY\";\n    retryButton.addEventListener(\"click\", function(){\n        document.body.innerHTML = \"\";\n        highScore = Math.max(highScore, correctScore.innerHTML);\n        TypingPage();\n    });\n    retryArea.appendChild(retryButton);\n    \n    const highScoreLabel = document.createElement(\"label\");\n    highScoreLabel.innerHTML = highScore;\n    retryArea.appendChild(highScoreLabel);\n\n    document.body.appendChild(retryArea);*/\n\n\n\n    const title = document.createElement(\"span\");\n    title.className = \"title\";\n    title.innerHTML = \"TYPIFY\";\n\n    retryArea.appendChild(title);\n\n    const retryButton = document.createElement(\"button\");\n    retryButton.innerHTML = \"RETRY\";\n    retryButton.addEventListener(\"click\", function(){\n        document.body.innerHTML = \"\";\n        highScore = Math.max(highScore, correctScore.innerHTML);\n        TypingPage();\n    });\n    retryArea.appendChild(retryButton);\n    \n    const highScoreLabel = document.createElement(\"label\");\n    highScoreLabel.innerHTML = highScore;\n    retryArea.appendChild(highScoreLabel);\n\n    document.body.appendChild(retryArea);\n\n\n\n\n    const typingArea = document.createElement(\"div\");\n    typingArea.className = \"typingArea\";\n\n    const tempAreaB = document.createElement(\"span\");\n    typingArea.appendChild(tempAreaB);\n\n    const target = document.createElement(\"span\");\n    target.innerHTML = wordString.substring(0, 1);\n    typingArea.appendChild(target);\n    target.style.color = \"green\";\n    //target.style.fontWeight = \"bold\";\n\n    const tempAreaA = document.createElement(\"span\");\n    tempAreaA.innerHTML = wordString.substring(1, 20);\n    typingArea.appendChild(tempAreaA);\n\n    document.body.appendChild(document.createElement(\"br\"));\n    tempAreaB.style.marginLeft = \"100px\";\n\n\n    var tCorrect = 0;\n    var tWrong = 0;\n    var wordCount = 0;\n\n    var started = true;\n    const timerDisplay = document.createElement(\"circle\");\n    //document.body.appendChild(timerDisplay);\n    timerDisplay.className = \"timerDisplay\";\n    var sec = 60;\n    timerDisplay.innerHTML = sec;\n\n    const dataArea = document.createElement(\"div\");\n    dataArea.className = \"dataArea\";\n\n    dataArea.appendChild(timerDisplay);\n\n    const wordCountLabel = document.createElement(\"label\");\n    wordCountLabel.innerHTML = wordCount;\n    wordCountLabel.className = \"scoreArea\";\n    dataArea.appendChild(wordCountLabel);\n\n    const correctScore =document.createElement(\"label\");\n    correctScore.innerHTML = tCorrect;\n    correctScore.className = \"scoreArea\";\n    dataArea.appendChild(correctScore);\n\n    const wrongScore =document.createElement(\"label\");\n    wrongScore.innerHTML = tWrong;\n    wrongScore.className = \"scoreArea\";\n    dataArea.appendChild(wrongScore);\n\n    document.body.appendChild(dataArea);\n\n    const dataTextArea = document.createElement(\"div\");\n\n    const timerText = document.createElement(\"span\");\n    timerText.innerHTML = \"seconds\";\n    dataTextArea.appendChild(timerText);\n    const wordCountText = document.createElement(\"span\");\n    wordCountText.innerHTML = \"words completed\";\n    dataTextArea.appendChild(wordCountText);\n    const wordRateText = document.createElement(\"span\");\n    wordRateText.innerHTML = \"words / min\";\n    dataTextArea.appendChild(wordRateText);\n    const wrongScoreText = document.createElement(\"span\");\n    wrongScoreText.innerHTML = \"# chars wrong\";\n    dataTextArea.appendChild(wrongScoreText);\n\n    document.body.appendChild(dataTextArea);\n\n\n    document.body.appendChild(typingArea);\n\n    document.body.appendChild(document.createElement('br'));\n\n    //var i = 0\n    //var i = 10;\n    var i = 0;\n    var wordDone = false;\n\n\n    tempAreaB.style.opacity = \"30%\";\n    document.addEventListener('keydown', function(event){\n\n        if(i < wordString.length && sec > 0){\n            var tempVal = wordString.substring(i, i + 1).charCodeAt(0);\n            if(tempVal > 90){\n                tempVal = tempVal - 32;\n            }\n            if(event.keyCode == tempVal){\n                i++;\n                //testArea.innerHTML = wordList[i] + wordList[i + 1];\n                if(i < 20){\n                    tempAreaB.innerHTML = wordString.substring(0, i);\n                    target.innerHTML = wordString.substring(i, i + 1);\n                    tempAreaA.innerHTML = wordString.substring(i + 1, 20 + i);\n                }\n                else{\n                    tempAreaB.innerHTML = wordString.substring(i - 15, i);\n                    target.innerHTML = wordString.substring(i, i + 1);\n                    tempAreaA.innerHTML = wordString.substring(i + 1, 20 + i);\n                }\n                tCorrect += 1;\n                target.style.color = \"green\";\n                if(tempVal == 32){\n                    wordCount++;\n                    wordCountLabel.innerHTML = wordCount;\n                }\n            }\n            else{\n                if(tempVal == 32){\n                    target.innerHTML = \"_\";\n                }\n                tWrong += 1;\n                wrongScore.innerHTML = tWrong;\n                //testArea.style.color = \"red\";\n                target.style.color = \"red\";\n                \n            }\n        }\n        /*else if(i >= wordString.length){\n            var tempVal = wordString.substring(0, 1).charCodeAt(0);\n            if(tempVal > 90){\n                tempVal = tempVal - 32;\n            }\n            if(event.keyCode == tempVal){\n                wordString = wordString.substring(1, wordString.length);\n                tCorrect += 1;\n                if(tempVal == 32){\n                    wordCount++;\n                }\n            }\n            else{\n                tWrong += 1;\n                wrongScore.innerHTML = tWrong;\n            }\n        }*/\n\n\n\n\n        if(started){\n            var timer = setInterval(function(){\n                if(sec >= 10){\n                    timerDisplay.innerHTML = sec;\n                }\n                else if(sec >= 0){\n                    timerDisplay.innerHTML = \"0\" + sec;\n                }\n                sec--;\n        \n                if(sec < 0 /*|| testArea.innerHTML.length == 0*//*i == wordList.length*/){\n                    clearInterval(timer);\n                    highScore = Math.max(highScore, correctScore.innerHTML);\n                    highScoreLabel.innerHTML = highScore;\n                }\n                if(sec > 0){\n                    correctScore.innerHTML = Math.floor(wordCount / (60 - sec) * 60);\n                }\n                \n                \n            }, 1000);\n         }\n         started = false;\n        \n        //if(event.keyCode == 83){\n            //testArea.innerHTML = \"done\";\n        //}\n    });\n\n    /*const retryArea = document.createElement(\"div\");\n    retryArea.className = \"retryArea\";\n\n\n    const retryButton = document.createElement(\"button\");\n    retryButton.innerHTML = \"RETRY\";\n    retryButton.addEventListener(\"click\", function(){\n        document.body.innerHTML = \"\";\n        highScore = Math.max(highScore, correctScore.innerHTML);\n        TypingPage();\n    });\n    retryArea.appendChild(retryButton);\n    \n    const highScoreLabel = document.createElement(\"label\");\n    highScoreLabel.innerHTML = highScore;\n    retryArea.appendChild(highScoreLabel);\n\n    document.body.appendChild(retryArea);*/\n\n}\n\nfunction shuffle(array) {\n    let currentIndex = array.length,  randomIndex;\n  \n    // While there remain elements to shuffle.\n    while (currentIndex != 0) {\n  \n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n  \n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n  \n    return array;\n  }\n\n/*function timer(){\n    const timerDisplay = document.createElement(\"label\");\n    document.body.appendChild(timerDisplay);\n    timerDisplay.className = \"timerDisplay\";\n    var sec = 60;\n    timerDisplay.innerHTML = '00: ' + sec;\n    var timer = setInterval(function(){\n        timerDisplay.innerHTML = '00: ' + sec;\n        sec--;\n\n        if(sec < 0){\n            clearInterval(timer);\n        }\n    }, 1000);\n}*/\n\nexport default TypingPage;"]},"metadata":{},"sourceType":"module"}