{"ast":null,"code":"var _jsxFileName = \"/Users/johnbrain/Japanese/japanese-website/src/card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(prop) {\n  _s();\n\n  var frontVal = prop.fr;\n  var backVal = prop.ba;\n  var currentVal = false;\n  const [flipped, setFlip] = useState(false);\n\n  function flipFront() {\n    setFlip(true);\n  }\n\n  function flipBack() {\n    setFlip(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentVal ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: frontVal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: backVal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 49\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"TGQVKHr/V5gD1FSjgwOZOT6a3uI=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/johnbrain/Japanese/japanese-website/src/card.js"],"names":["React","useState","Card","prop","frontVal","fr","backVal","ba","currentVal","flipped","setFlip","flipFront","flipBack"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,IAAT,CAAcC,IAAd,EAAmB;AAAA;;AACf,MAAIC,QAAQ,GAAGD,IAAI,CAACE,EAApB;AACA,MAAIC,OAAO,GAAGH,IAAI,CAACI,EAAnB;AACA,MAAIC,UAAU,GAAG,KAAjB;AAEA,QAAK,CAACC,OAAD,EAAUC,OAAV,IAAqBT,QAAQ,CAAC,KAAD,CAAlC;;AAEA,WAASU,SAAT,GAAqB;AACjBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH;;AACD,WAASE,QAAT,GAAmB;AACfF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH;;AAED,sBACI;AAAA,cACKF,UAAU,gBAAG;AAAA,gBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAyB;AAAA,gBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA;AADxC;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAnBQJ,I;;KAAAA,I;AAoBT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\"\n\nfunction Card(prop){\n    var frontVal = prop.fr;\n    var backVal = prop.ba;\n    var currentVal = false;\n\n    const[flipped, setFlip] = useState(false);\n\n    function flipFront() {\n        setFlip(true);\n    }\n    function flipBack(){\n        setFlip(false);\n    }\n\n    return(\n        <div>\n            {currentVal ? <h2>{frontVal}</h2> : <h2>{backVal}</h2>}\n        </div>\n    );\n}\nexport default Card;"]},"metadata":{},"sourceType":"module"}