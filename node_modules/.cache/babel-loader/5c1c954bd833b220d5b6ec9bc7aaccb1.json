{"ast":null,"code":"import { Card } from \"./Card.js\";\nexport class Deck {\n  constructor(name) {\n    this.name = name;\n    this.cardList = [];\n  }\n\n  length() {\n    return this.cardList.length;\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  setName(name) {\n    this.name = name;\n  }\n\n  getCardList() {\n    return this.cardList;\n  }\n\n  getCardListUnStarred() {\n    var temp = [];\n\n    for (let i = 0; i < this.cardList.length; i++) {\n      if (!this.cardList.getCard(i).getStar) {\n        temp.push(this.cardList.getCard(i));\n      }\n    }\n\n    return temp;\n  }\n\n  getCardListStarred() {\n    var temp = [];\n\n    for (let i = 0; i < this.cardList.length; i++) {\n      if (this.cardList.getCard(i).getStar) {\n        temp.push(this.cardList.getCard(i));\n      }\n    }\n\n    return temp;\n  }\n\n  addCard(card) {\n    this.cardList.push(card);\n  }\n\n  removeCard(idx) {\n    if (idx < 0 || idx >= this.cardList.length) {\n      throw new Error(\"idx not in cardList\");\n    }\n\n    this.cardList.splice(idx, 1);\n  }\n\n  removeCardName(front, back) {\n    for (let i = 0; i < this.cardList.length; i++) {\n      if (this.cardList.getCard(i).getFront == front && this.cardList.getCard(i).getBack == back) {\n        return this.cardList[i];\n        this.cardList.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  getCard(idx) {\n    if (idx < 0 || idx >= this.cardList.length) {\n      throw new Error(\"idx not in cardList\");\n    }\n\n    return this.cardList[idx];\n  }\n\n  getCardName(front, back) {\n    for (let i = 0; i < this.cardList.length; i++) {\n      if (this.cardList.getCard(i).getFront() == front && this.cardList.getCard(i).getBack() == back) {\n        return this.cardList.getCard(i);\n      }\n    }\n  }\n\n  cardExists(front, back) {\n    for (let i = 0; i < this.cardList.length; i++) {\n      if (this.cardList.getCard(i).getFront() == front && this.cardList.getCard(i).getBack() == back) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}","map":{"version":3,"sources":["/Users/johnbrain/Projects/FlashCardProject/src/block/Deck.js"],"names":["Card","Deck","constructor","name","cardList","length","getName","setName","getCardList","getCardListUnStarred","temp","i","getCard","getStar","push","getCardListStarred","addCard","card","removeCard","idx","Error","splice","removeCardName","front","back","getFront","getBack","getCardName","cardExists"],"mappings":"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","sourcesContent":["import {Card} from \"./Card.js\";\n\nexport class Deck{\n\n    constructor(name){\n        this.name = name;\n        this.cardList = [];\n    }\n\n    length(){\n        return this.cardList.length;\n    }\n\n    getName(){\n        return this.name;\n    }\n\n    setName(name){\n       this.name = name;\n    }\n\n    getCardList(){\n        return this.cardList;\n    }\n\n    getCardListUnStarred(){\n        var temp = []\n        for(let i = 0; i < this.cardList.length; i++){\n            if(!this.cardList.getCard(i).getStar){\n                temp.push(this.cardList.getCard(i));\n            }\n        }\n        return temp;\n    }\n\n    getCardListStarred(){\n        var temp = []\n        for(let i = 0; i < this.cardList.length; i++){\n            if(this.cardList.getCard(i).getStar){\n                temp.push(this.cardList.getCard(i));\n            }\n        }\n        return temp;\n    }\n\n    addCard(card){\n        this.cardList.push(card);\n    }\n\n    removeCard(idx){\n        if(idx < 0 || idx >= this.cardList.length){\n            throw new Error(\"idx not in cardList\");\n        }\n        this.cardList.splice(idx, 1);\n    }\n\n    removeCardName(front, back){\n        for(let i = 0; i < this.cardList.length; i++){\n            if(this.cardList.getCard(i).getFront == front \n            && this.cardList.getCard(i).getBack == back){\n                return this.cardList[i];\n                this.cardList.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    getCard(idx){\n        if(idx < 0 || idx >= this.cardList.length){\n            throw new Error(\"idx not in cardList\");\n        }\n        return this.cardList[idx];\n    }\n\n    getCardName(front, back){\n        for(let i = 0; i < this.cardList.length; i++){\n            if(this.cardList.getCard(i).getFront() == front \n            && this.cardList.getCard(i).getBack() == back){\n                return this.cardList.getCard(i);\n            }\n        }\n    }\n\n    cardExists(front, back){\n        for(let i = 0; i < this.cardList.length; i++){\n            if(this.cardList.getCard(i).getFront() == front \n            && this.cardList.getCard(i).getBack() == back){\n                return true;\n            }\n        }\n        return false;\n    }\n}"]},"metadata":{},"sourceType":"module"}