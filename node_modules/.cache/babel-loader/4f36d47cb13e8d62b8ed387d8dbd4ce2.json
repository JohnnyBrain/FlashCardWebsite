{"ast":null,"code":"import React, { useState } from \"react\";\nconst typingTestValue = \"sample test text for typing test\";\nconst wordBank = [\"high\", \"happy\", \"good\", \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\", \"high\", \"happy\", \"good\", \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\", \"high\", \"happy\", \"good\", \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\", \"high\", \"happy\", \"good\", \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\", \"high\", \"happy\", \"good\", \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\"];\nvar highScore = 0;\n\nfunction TypingPage() {\n  const wordList = shuffle(wordBank);\n  var wordString = \"\";\n\n  for (let k = 0; k < wordList.length; k++) {\n    for (let l = 0; l < wordList[k].length; l++) {\n      wordString += wordList[k].charAt(l);\n    }\n\n    if (k != wordList.length - 1) {\n      wordString += \" \";\n    }\n  }\n\n  const title = document.createElement(\"div\");\n  title.className = \"title\";\n  title.innerHTML = \"Typing Test\";\n  document.body.appendChild(title);\n  const typingArea = document.createElement(\"div\");\n  typingArea.className = \"typingArea\";\n  const tempAreaB = document.createElement(\"span\");\n  tempAreaB.innerHTML = wordString.substring(0, 0);\n  typingArea.appendChild(tempAreaB);\n  const target = document.createElement(\"span\");\n  target.innerHTML = wordString.substring(0, 10);\n  typingArea.appendChild(target);\n  target.style.color = \"green\";\n  const tempAreaA = document.createElement(\"span\");\n  tempAreaA.innerHTML = wordString.substring(1, 10);\n  typingArea.appendChild(tempAreaA);\n  document.body.appendChild(document.createElement(\"br\"));\n  tempAreaB.style.marginLeft = \"100px\";\n  document.body.appendChild(typingArea);\n  var tCorrect = 0;\n  var tWrong = 0;\n  document.body.appendChild(document.createElement('br'));\n  const correctScore = document.createElement(\"label\");\n  correctScore.innerHTML = tCorrect;\n  correctScore.className = \"scoreArea\";\n  document.body.appendChild(correctScore);\n  const wrongScore = document.createElement(\"label\");\n  wrongScore.innerHTML = tWrong;\n  wrongScore.className = \"scoreArea\";\n  document.body.appendChild(wrongScore);\n  var started = true;\n  const timerDisplay = document.createElement(\"label\");\n  document.body.appendChild(timerDisplay);\n  timerDisplay.className = \"timerDisplay\";\n  var sec = 60;\n  timerDisplay.innerHTML = '00: ' + sec; //var i = 0\n  //var i = 10;\n\n  var i = 0;\n  var wordDone = false;\n  var wordCount = 0;\n  tempAreaB.style.opacity = \"50%\";\n  document.addEventListener('keydown', function (event) {\n    if (i < wordString.length) {\n      var tempVal = wordString.substring(i, i + 1).charCodeAt(0);\n\n      if (tempVal > 90) {\n        tempVal = tempVal - 32;\n      }\n\n      if (event.keyCode == tempVal) {\n        i++; //testArea.innerHTML = wordList[i] + wordList[i + 1];\n\n        if (i < 20) {\n          tempAreaB.innerHTML = wordString.substring(0, i);\n          target.innerHTML = wordString.substring(i, i + 1);\n          tempAreaA.innerHTML = wordString.substring(i + 1, 10 + i);\n        } else {\n          tempAreaB.innerHTML = wordString.substring(i - 20, i);\n          target.innerHTML = wordString.substring(i, i + 1);\n          tempAreaA.innerHTML = wordString.substring(i + 1, 10 + i);\n        }\n\n        tCorrect += 1;\n        target.style.color = \"green\";\n\n        if (tempVal == 32) {\n          wordCount++;\n        }\n      } else {\n        tWrong += 1;\n        wrongScore.innerHTML = tWrong; //testArea.style.color = \"red\";\n\n        target.style.color = \"red\";\n      }\n    }\n    /*else if(i >= wordString.length){\n        var tempVal = wordString.substring(0, 1).charCodeAt(0);\n        if(tempVal > 90){\n            tempVal = tempVal - 32;\n        }\n        if(event.keyCode == tempVal){\n            wordString = wordString.substring(1, wordString.length);\n            tCorrect += 1;\n            if(tempVal == 32){\n                wordCount++;\n            }\n        }\n        else{\n            tWrong += 1;\n            wrongScore.innerHTML = tWrong;\n        }\n    }*/\n\n\n    if (started) {\n      var timer = setInterval(function () {\n        timerDisplay.innerHTML = '00: ' + sec;\n        sec--;\n\n        if (sec < 0\n        /*|| testArea.innerHTML.length == 0*/\n\n        /*i == wordList.length*/\n        ) {\n          clearInterval(timer);\n          highScore = Math.max(highScore, correctScore.innerHTML);\n        }\n\n        correctScore.innerHTML = Math.floor(wordCount / (60 - sec) * 60);\n      }, 1000);\n    }\n\n    started = false; //if(event.keyCode == 83){\n    //testArea.innerHTML = \"done\";\n    //}\n  });\n  const retryButton = document.createElement(\"button\");\n  retryButton.innerHTML = \"RETRY\";\n  retryButton.addEventListener(\"click\", function () {\n    document.body.innerHTML = \"\";\n    highScore = Math.max(highScore, correctScore.innerHTML);\n    TypingPage();\n  });\n  document.body.appendChild(retryButton);\n  const highScoreLabel = document.createElement(\"label\");\n  highScoreLabel.innerHTML = highScore;\n  document.body.appendChild(highScoreLabel);\n}\n\n_c = TypingPage;\n\nfunction shuffle(array) {\n  let currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle.\n\n  while (currentIndex != 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n/*function timer(){\n    const timerDisplay = document.createElement(\"label\");\n    document.body.appendChild(timerDisplay);\n    timerDisplay.className = \"timerDisplay\";\n    var sec = 60;\n    timerDisplay.innerHTML = '00: ' + sec;\n    var timer = setInterval(function(){\n        timerDisplay.innerHTML = '00: ' + sec;\n        sec--;\n\n        if(sec < 0){\n            clearInterval(timer);\n        }\n    }, 1000);\n}*/\n\n\nexport default TypingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypingPage\");","map":{"version":3,"sources":["/Users/johnbrain/Japanese/TypingTestSite/src/TypingPage.js"],"names":["React","useState","typingTestValue","wordBank","highScore","TypingPage","wordList","shuffle","wordString","k","length","l","charAt","title","document","createElement","className","innerHTML","body","appendChild","typingArea","tempAreaB","substring","target","style","color","tempAreaA","marginLeft","tCorrect","tWrong","correctScore","wrongScore","started","timerDisplay","sec","i","wordDone","wordCount","opacity","addEventListener","event","tempVal","charCodeAt","keyCode","timer","setInterval","clearInterval","Math","max","floor","retryButton","highScoreLabel","array","currentIndex","randomIndex","random"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,MAAMC,eAAe,GAAG,kCAAxB;AAEA,MAAMC,QAAQ,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA2B,MAA3B,EAAmC,KAAnC,EAA0C,MAA1C,EAAkD,MAAlD,EAA0D,OAA1D,EAAmE,MAAnE,EAA2E,MAA3E,EAAmF,SAAnF,EAA8F,SAA9F,EACf,MADe,EACP,OADO,EACE,MADF,EACW,MADX,EACmB,KADnB,EAC0B,MAD1B,EACkC,MADlC,EAC0C,OAD1C,EACmD,MADnD,EAC2D,MAD3D,EACmE,SADnE,EAC8E,SAD9E,EAEjB,MAFiB,EAET,OAFS,EAEA,MAFA,EAES,MAFT,EAEiB,KAFjB,EAEwB,MAFxB,EAEgC,MAFhC,EAEwC,OAFxC,EAEiD,MAFjD,EAEyD,MAFzD,EAEiE,SAFjE,EAE4E,SAF5E,EAGjB,MAHiB,EAGT,OAHS,EAGA,MAHA,EAGS,MAHT,EAGiB,KAHjB,EAGwB,MAHxB,EAGgC,MAHhC,EAGwC,OAHxC,EAGiD,MAHjD,EAGyD,MAHzD,EAGiE,SAHjE,EAG4E,SAH5E,EAIjB,MAJiB,EAIT,OAJS,EAIA,MAJA,EAIS,MAJT,EAIiB,KAJjB,EAIwB,MAJxB,EAIgC,MAJhC,EAIwC,OAJxC,EAIiD,MAJjD,EAIyD,MAJzD,EAIiE,SAJjE,EAI4E,SAJ5E,CAAjB;AAKA,IAAIC,SAAS,GAAG,CAAhB;;AAEA,SAASC,UAAT,GAAsB;AAClB,QAAMC,QAAQ,GAAGC,OAAO,CAACJ,QAAD,CAAxB;AACA,MAAIK,UAAU,GAAG,EAAjB;;AACA,OAAI,IAAIC,CAAC,GAAI,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAAyC;AACrC,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,QAAQ,CAACG,CAAD,CAAR,CAAYC,MAA/B,EAAuCC,CAAC,EAAxC,EAA2C;AACvCH,MAAAA,UAAU,IAAIF,QAAQ,CAACG,CAAD,CAAR,CAAYG,MAAZ,CAAmBD,CAAnB,CAAd;AACH;;AACD,QAAGF,CAAC,IAAIH,QAAQ,CAACI,MAAT,GAAkB,CAA1B,EAA4B;AACxBF,MAAAA,UAAU,IAAI,GAAd;AACH;AACJ;;AAED,QAAMK,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACAF,EAAAA,KAAK,CAACG,SAAN,GAAkB,OAAlB;AACAH,EAAAA,KAAK,CAACI,SAAN,GAAkB,aAAlB;AAEAH,EAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,KAA1B;AAGA,QAAMO,UAAU,GAAGN,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAnB;AACAK,EAAAA,UAAU,CAACJ,SAAX,GAAuB,YAAvB;AAEA,QAAMK,SAAS,GAAGP,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAlB;AACAM,EAAAA,SAAS,CAACJ,SAAV,GAAsBT,UAAU,CAACc,SAAX,CAAqB,CAArB,EAAwB,CAAxB,CAAtB;AACAF,EAAAA,UAAU,CAACD,WAAX,CAAuBE,SAAvB;AAEA,QAAME,MAAM,GAAGT,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAf;AACAQ,EAAAA,MAAM,CAACN,SAAP,GAAmBT,UAAU,CAACc,SAAX,CAAqB,CAArB,EAAwB,EAAxB,CAAnB;AACAF,EAAAA,UAAU,CAACD,WAAX,CAAuBI,MAAvB;AACAA,EAAAA,MAAM,CAACC,KAAP,CAAaC,KAAb,GAAqB,OAArB;AAEA,QAAMC,SAAS,GAAGZ,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAlB;AACAW,EAAAA,SAAS,CAACT,SAAV,GAAsBT,UAAU,CAACc,SAAX,CAAqB,CAArB,EAAwB,EAAxB,CAAtB;AACAF,EAAAA,UAAU,CAACD,WAAX,CAAuBO,SAAvB;AAEAZ,EAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BL,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAA1B;AACAM,EAAAA,SAAS,CAACG,KAAV,CAAgBG,UAAhB,GAA6B,OAA7B;AAEAb,EAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BC,UAA1B;AAGA,MAAIQ,QAAQ,GAAG,CAAf;AACA,MAAIC,MAAM,GAAG,CAAb;AAEAf,EAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BL,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAA1B;AAEA,QAAMe,YAAY,GAAEhB,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAApB;AACAe,EAAAA,YAAY,CAACb,SAAb,GAAyBW,QAAzB;AACAE,EAAAA,YAAY,CAACd,SAAb,GAAyB,WAAzB;AACAF,EAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BW,YAA1B;AAEA,QAAMC,UAAU,GAAEjB,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAlB;AACAgB,EAAAA,UAAU,CAACd,SAAX,GAAuBY,MAAvB;AACAE,EAAAA,UAAU,CAACf,SAAX,GAAuB,WAAvB;AACAF,EAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BY,UAA1B;AAEA,MAAIC,OAAO,GAAG,IAAd;AACA,QAAMC,YAAY,GAAGnB,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAArB;AACAD,EAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0Bc,YAA1B;AACAA,EAAAA,YAAY,CAACjB,SAAb,GAAyB,cAAzB;AACA,MAAIkB,GAAG,GAAG,EAAV;AACAD,EAAAA,YAAY,CAAChB,SAAb,GAAyB,SAASiB,GAAlC,CA7DkB,CA+DlB;AACA;;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,QAAQ,GAAG,KAAf;AACA,MAAIC,SAAS,GAAG,CAAhB;AAGAhB,EAAAA,SAAS,CAACG,KAAV,CAAgBc,OAAhB,GAA0B,KAA1B;AACAxB,EAAAA,QAAQ,CAACyB,gBAAT,CAA0B,SAA1B,EAAqC,UAASC,KAAT,EAAe;AAEhD,QAAGL,CAAC,GAAG3B,UAAU,CAACE,MAAlB,EAAyB;AACrB,UAAI+B,OAAO,GAAGjC,UAAU,CAACc,SAAX,CAAqBa,CAArB,EAAwBA,CAAC,GAAG,CAA5B,EAA+BO,UAA/B,CAA0C,CAA1C,CAAd;;AACA,UAAGD,OAAO,GAAG,EAAb,EAAgB;AACZA,QAAAA,OAAO,GAAGA,OAAO,GAAG,EAApB;AACH;;AACD,UAAGD,KAAK,CAACG,OAAN,IAAiBF,OAApB,EAA4B;AACxBN,QAAAA,CAAC,GADuB,CAExB;;AACA,YAAGA,CAAC,GAAG,EAAP,EAAU;AACNd,UAAAA,SAAS,CAACJ,SAAV,GAAsBT,UAAU,CAACc,SAAX,CAAqB,CAArB,EAAwBa,CAAxB,CAAtB;AACAZ,UAAAA,MAAM,CAACN,SAAP,GAAmBT,UAAU,CAACc,SAAX,CAAqBa,CAArB,EAAwBA,CAAC,GAAG,CAA5B,CAAnB;AACAT,UAAAA,SAAS,CAACT,SAAV,GAAsBT,UAAU,CAACc,SAAX,CAAqBa,CAAC,GAAG,CAAzB,EAA4B,KAAKA,CAAjC,CAAtB;AACH,SAJD,MAKI;AACAd,UAAAA,SAAS,CAACJ,SAAV,GAAsBT,UAAU,CAACc,SAAX,CAAqBa,CAAC,GAAG,EAAzB,EAA6BA,CAA7B,CAAtB;AACAZ,UAAAA,MAAM,CAACN,SAAP,GAAmBT,UAAU,CAACc,SAAX,CAAqBa,CAArB,EAAwBA,CAAC,GAAG,CAA5B,CAAnB;AACAT,UAAAA,SAAS,CAACT,SAAV,GAAsBT,UAAU,CAACc,SAAX,CAAqBa,CAAC,GAAG,CAAzB,EAA4B,KAAKA,CAAjC,CAAtB;AACH;;AACDP,QAAAA,QAAQ,IAAI,CAAZ;AACAL,QAAAA,MAAM,CAACC,KAAP,CAAaC,KAAb,GAAqB,OAArB;;AACA,YAAGgB,OAAO,IAAI,EAAd,EAAiB;AACbJ,UAAAA,SAAS;AACZ;AACJ,OAlBD,MAmBI;AACAR,QAAAA,MAAM,IAAI,CAAV;AACAE,QAAAA,UAAU,CAACd,SAAX,GAAuBY,MAAvB,CAFA,CAGA;;AACAN,QAAAA,MAAM,CAACC,KAAP,CAAaC,KAAb,GAAqB,KAArB;AAEH;AACJ;AACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKQ,QAAGO,OAAH,EAAW;AACP,UAAIY,KAAK,GAAGC,WAAW,CAAC,YAAU;AAC9BZ,QAAAA,YAAY,CAAChB,SAAb,GAAyB,SAASiB,GAAlC;AACAA,QAAAA,GAAG;;AAEH,YAAGA,GAAG,GAAG;AAAE;;AAAqC;AAAhD,UAAyE;AACrEY,UAAAA,aAAa,CAACF,KAAD,CAAb;AACAxC,UAAAA,SAAS,GAAG2C,IAAI,CAACC,GAAL,CAAS5C,SAAT,EAAoB0B,YAAY,CAACb,SAAjC,CAAZ;AACH;;AACDa,QAAAA,YAAY,CAACb,SAAb,GAAyB8B,IAAI,CAACE,KAAL,CAAWZ,SAAS,IAAI,KAAKH,GAAT,CAAT,GAAyB,EAApC,CAAzB;AACH,OATsB,EASpB,IAToB,CAAvB;AAUF;;AACDF,IAAAA,OAAO,GAAG,KAAV,CAnE+C,CAqEhD;AACI;AACJ;AACH,GAxED;AA0EA,QAAMkB,WAAW,GAAGpC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAApB;AACAmC,EAAAA,WAAW,CAACjC,SAAZ,GAAwB,OAAxB;AACAiC,EAAAA,WAAW,CAACX,gBAAZ,CAA6B,OAA7B,EAAsC,YAAU;AAC5CzB,IAAAA,QAAQ,CAACI,IAAT,CAAcD,SAAd,GAA0B,EAA1B;AACAb,IAAAA,SAAS,GAAG2C,IAAI,CAACC,GAAL,CAAS5C,SAAT,EAAoB0B,YAAY,CAACb,SAAjC,CAAZ;AACAZ,IAAAA,UAAU;AACb,GAJD;AAKAS,EAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0B+B,WAA1B;AAEA,QAAMC,cAAc,GAAGrC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAvB;AACAoC,EAAAA,cAAc,CAAClC,SAAf,GAA2Bb,SAA3B;AACAU,EAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BgC,cAA1B;AAEH;;KA9JQ9C,U;;AAgKT,SAASE,OAAT,CAAiB6C,KAAjB,EAAwB;AACpB,MAAIC,YAAY,GAAGD,KAAK,CAAC1C,MAAzB;AAAA,MAAkC4C,WAAlC,CADoB,CAGpB;;AACA,SAAOD,YAAY,IAAI,CAAvB,EAA0B;AAExB;AACAC,IAAAA,WAAW,GAAGP,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACQ,MAAL,KAAgBF,YAA3B,CAAd;AACAA,IAAAA,YAAY,GAJY,CAMxB;;AACA,KAACD,KAAK,CAACC,YAAD,CAAN,EAAsBD,KAAK,CAACE,WAAD,CAA3B,IAA4C,CAC1CF,KAAK,CAACE,WAAD,CADqC,EACtBF,KAAK,CAACC,YAAD,CADiB,CAA5C;AAED;;AAED,SAAOD,KAAP;AACD;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe/C,UAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst typingTestValue = \"sample test text for typing test\";\n\nconst wordBank = [\"high\", \"happy\", \"good\" , \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\"\n, \"high\", \"happy\", \"good\" , \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\", \n\"high\", \"happy\", \"good\" , \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\", \n\"high\", \"happy\", \"good\" , \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\", \n\"high\", \"happy\", \"good\" , \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\"];\nvar highScore = 0;\n\nfunction TypingPage() {\n    const wordList = shuffle(wordBank);\n    var wordString = \"\";\n    for(let k =  0; k < wordList.length; k++){\n        for(let l = 0; l < wordList[k].length; l++){\n            wordString += wordList[k].charAt(l);\n        }\n        if(k != wordList.length - 1){\n            wordString += \" \";\n        }\n    }\n\n    const title = document.createElement(\"div\");\n    title.className = \"title\";\n    title.innerHTML = \"Typing Test\";\n\n    document.body.appendChild(title);\n\n\n    const typingArea = document.createElement(\"div\");\n    typingArea.className = \"typingArea\";\n\n    const tempAreaB = document.createElement(\"span\");\n    tempAreaB.innerHTML = wordString.substring(0, 0);\n    typingArea.appendChild(tempAreaB);\n\n    const target = document.createElement(\"span\");\n    target.innerHTML = wordString.substring(0, 10);\n    typingArea.appendChild(target);\n    target.style.color = \"green\";\n\n    const tempAreaA = document.createElement(\"span\");\n    tempAreaA.innerHTML = wordString.substring(1, 10);\n    typingArea.appendChild(tempAreaA);\n\n    document.body.appendChild(document.createElement(\"br\"));\n    tempAreaB.style.marginLeft = \"100px\";\n\n    document.body.appendChild(typingArea);\n\n\n    var tCorrect = 0;\n    var tWrong = 0;\n\n    document.body.appendChild(document.createElement('br'));\n\n    const correctScore =document.createElement(\"label\");\n    correctScore.innerHTML = tCorrect;\n    correctScore.className = \"scoreArea\";\n    document.body.appendChild(correctScore);\n\n    const wrongScore =document.createElement(\"label\");\n    wrongScore.innerHTML = tWrong;\n    wrongScore.className = \"scoreArea\";\n    document.body.appendChild(wrongScore);\n    \n    var started = true;\n    const timerDisplay = document.createElement(\"label\");\n    document.body.appendChild(timerDisplay);\n    timerDisplay.className = \"timerDisplay\";\n    var sec = 60;\n    timerDisplay.innerHTML = '00: ' + sec;\n\n    //var i = 0\n    //var i = 10;\n    var i = 0;\n    var wordDone = false;\n    var wordCount = 0;\n\n\n    tempAreaB.style.opacity = \"50%\";\n    document.addEventListener('keydown', function(event){\n\n        if(i < wordString.length){\n            var tempVal = wordString.substring(i, i + 1).charCodeAt(0);\n            if(tempVal > 90){\n                tempVal = tempVal - 32;\n            }\n            if(event.keyCode == tempVal){\n                i++;\n                //testArea.innerHTML = wordList[i] + wordList[i + 1];\n                if(i < 20){\n                    tempAreaB.innerHTML = wordString.substring(0, i);\n                    target.innerHTML = wordString.substring(i, i + 1);\n                    tempAreaA.innerHTML = wordString.substring(i + 1, 10 + i);\n                }\n                else{\n                    tempAreaB.innerHTML = wordString.substring(i - 20, i);\n                    target.innerHTML = wordString.substring(i, i + 1);\n                    tempAreaA.innerHTML = wordString.substring(i + 1, 10 + i);\n                }\n                tCorrect += 1;\n                target.style.color = \"green\";\n                if(tempVal == 32){\n                    wordCount++;\n                }\n            }\n            else{\n                tWrong += 1;\n                wrongScore.innerHTML = tWrong;\n                //testArea.style.color = \"red\";\n                target.style.color = \"red\";\n                \n            }\n        }\n        /*else if(i >= wordString.length){\n            var tempVal = wordString.substring(0, 1).charCodeAt(0);\n            if(tempVal > 90){\n                tempVal = tempVal - 32;\n            }\n            if(event.keyCode == tempVal){\n                wordString = wordString.substring(1, wordString.length);\n                tCorrect += 1;\n                if(tempVal == 32){\n                    wordCount++;\n                }\n            }\n            else{\n                tWrong += 1;\n                wrongScore.innerHTML = tWrong;\n            }\n        }*/\n\n\n\n\n        if(started){\n            var timer = setInterval(function(){\n                timerDisplay.innerHTML = '00: ' + sec;\n                sec--;\n        \n                if(sec < 0 /*|| testArea.innerHTML.length == 0*//*i == wordList.length*/){\n                    clearInterval(timer);\n                    highScore = Math.max(highScore, correctScore.innerHTML);\n                }\n                correctScore.innerHTML = Math.floor(wordCount / (60 - sec) * 60);\n            }, 1000);\n         }\n         started = false;\n        \n        //if(event.keyCode == 83){\n            //testArea.innerHTML = \"done\";\n        //}\n    });\n\n    const retryButton = document.createElement(\"button\");\n    retryButton.innerHTML = \"RETRY\";\n    retryButton.addEventListener(\"click\", function(){\n        document.body.innerHTML = \"\";\n        highScore = Math.max(highScore, correctScore.innerHTML);\n        TypingPage();\n    });\n    document.body.appendChild(retryButton);\n    \n    const highScoreLabel = document.createElement(\"label\");\n    highScoreLabel.innerHTML = highScore;\n    document.body.appendChild(highScoreLabel);\n\n}\n\nfunction shuffle(array) {\n    let currentIndex = array.length,  randomIndex;\n  \n    // While there remain elements to shuffle.\n    while (currentIndex != 0) {\n  \n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n  \n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n  \n    return array;\n  }\n\n/*function timer(){\n    const timerDisplay = document.createElement(\"label\");\n    document.body.appendChild(timerDisplay);\n    timerDisplay.className = \"timerDisplay\";\n    var sec = 60;\n    timerDisplay.innerHTML = '00: ' + sec;\n    var timer = setInterval(function(){\n        timerDisplay.innerHTML = '00: ' + sec;\n        sec--;\n\n        if(sec < 0){\n            clearInterval(timer);\n        }\n    }, 1000);\n}*/\n\nexport default TypingPage;"]},"metadata":{},"sourceType":"module"}