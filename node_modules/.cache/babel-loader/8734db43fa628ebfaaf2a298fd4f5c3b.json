{"ast":null,"code":"import React,{useState}from\"react\";var snakeList=[];var boardList=[];var tempList;function Snake(){var board=document.createElement('table');var max=20;for(var i=0;i<max;i++){var tr=board.insertRow();boardList.push([]);for(var j=0;j<max;j++){var td=tr.insertCell();//td.appendChild(document.createTextNode(\"___\"));\nboardList[i].push([i,j]);td.style.border='1px solid black';}}tempList=boardList;var start=[Math.floor((max-1)/2),Math.floor((max-1)/2)];var berry=[3,3];//board.rows.item(berry[0]).cells.item(berry[1]).innerHTML = \"***\";\nvar len=1;var direction=[0,0];var startTimer=true;for(var _i=0;_i<len;_i++){snakeList.push([start[0]+_i,start[1]]);}var eaten=false;var update=true;var begin=true;var timerSpeed=100;var sameLocation=true;document.addEventListener('keydown',function(event){begin=false;//board.rows.item(start[0]).cells.item(start[1]).innerHTML = \"___\";\n//left arrow\nif(event.keyCode==37&&update){//if(start[1] > 0){\n//start[1]--;\n//}\nif(direction[1]!=1){direction[1]=-1;direction[0]=0;update=false;}}//down arrow\nelse if(event.keyCode==40&&update){//if(start[0] < max - 1){\n//start[0]++;\n//}\nif(direction[0]!=-1){direction[0]=1;direction[1]=0;update=false;}}//right arrow\nelse if(event.keyCode==39&&update){//if(start[1] < max - 1){\n//start[1]++;\n// }\nif(direction[1]!=-1){direction[1]=1;direction[0]=0;update=false;}}//up arrow\nelse if(event.keyCode==38&&update){//if(start[0] > 0){\n//start[0]--;\n//}\nif(direction[0]!=1){direction[0]=-1;direction[1]=0;update=false;}}if(startTimer){}startTimer=false;});var timer=setInterval(function(){if(start[0]<0||start[0]>max-1||start[1]<0||start[1]>max-1){//clearInterval(timer);\n//document.body.innerHTML = \"\";\nend(timer);}//board.rows.item(berry[0]).cells.item(berry[1]).innerHTML = \"***\";\nboard.rows.item(berry[0]).cells.item(berry[1]).style.backgroundColor=\"red\";//updates position of snake\nstart[0]+=direction[0];start[1]+=direction[1];//board.rows.item(start[0]).cells.item(start[1]).innerHTML = \"***\";\nboard.rows.item(start[0]).cells.item(start[1]).style.backgroundColor=\"green\";snakeList.unshift([start[0],start[1]]);if(start[0]==berry[0]&&start[1]==berry[1]){eaten=true;//berry[0] = Math.floor(Math.random() * max);\n//berry[1] = Math.floor(Math.random() * max);\ntimerSpeed-=20;//for(let i = 0; i < snakeList.length; i++){\n//tempList[snakeList[i][0]].splice(snakeList[i][1], 1);\n//}\nvar rand0=Math.floor(Math.random()*tempList.length);var rand1=Math.floor(Math.random()*tempList[rand0].length);berry[0]=tempList[rand0][rand1][0];berry[1]=tempList[rand0][rand1][1];tempList=boardList;}if(!eaten){//board.rows.item(snakeList[snakeList.length - 1][0]).cells.item(snakeList[snakeList.length - 1][1]).innerHTML = \"___\";\nboard.rows.item(snakeList[snakeList.length-1][0]).cells.item(snakeList[snakeList.length-1][1]).style.backgroundColor=\"white\";snakeList.splice(snakeList.length-1,1);}else{eaten=false;}update=true;if(!begin){for(var _i2=1;_i2<snakeList.length;_i2++){if(start[0]==snakeList[_i2][0]&&start[1]==snakeList[_i2][1]){//clearInterval(timer);\n//document.body.innerHTML = \"\";\nend(timer);}}}},100/*timerSpeed*/);document.body.appendChild(board);}function end(timer){clearInterval(timer);document.body.innerHTML=\"\";var retry=document.createElement(\"button\");retry.innerHTML=\"RETRY\";retry.className=\"retry\";retry.addEventListener(\"click\",function(){document.body.innerHTML=\"\";snakeList=[];boardList=[];Snake();});document.body.appendChild(retry);}function randomize(list,max){list[0]=Math.floor(Math.random()*max);list[1]=Math.floor(Math.random()*max);}export default Snake;","map":{"version":3,"sources":["/Users/johnbrain/Projects/SnakeGame/src/snake.js"],"names":["React","useState","snakeList","boardList","tempList","Snake","board","document","createElement","max","i","tr","insertRow","push","j","td","insertCell","style","border","start","Math","floor","berry","len","direction","startTimer","eaten","update","begin","timerSpeed","sameLocation","addEventListener","event","keyCode","timer","setInterval","end","rows","item","cells","backgroundColor","unshift","rand0","random","length","rand1","splice","body","appendChild","clearInterval","innerHTML","retry","className","randomize","list"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nvar snakeList = [];\nvar boardList = [];\nvar tempList;\n\nfunction Snake(){\n\n    const board = document.createElement('table');\n    const max = 20;\n    for(let i = 0; i < max; i++){\n        const tr = board.insertRow();\n        boardList.push([]);\n        for(let j = 0; j < max; j++){\n            const td = tr.insertCell();\n            //td.appendChild(document.createTextNode(\"___\"));\n            boardList[i].push([i, j]);\n            td.style.border = '1px solid black';\n        }\n    }\n    tempList = boardList;\n    var start = [Math.floor((max - 1) / 2), Math.floor((max - 1) / 2)];\n\n    var berry = [3, 3];\n    //board.rows.item(berry[0]).cells.item(berry[1]).innerHTML = \"***\";\n\n    var len = 1;\n\n    var direction = [0, 0];\n    var startTimer = true;\n\n    for(let i = 0; i < len; i++){\n        snakeList.push([start[0] + i, start[1]]);\n    }\n\n    var eaten = false;\n    var update = true;\n    var begin = true;\n\n    var timerSpeed = 100;\n\n    var sameLocation = true;\n\n    document.addEventListener('keydown', function(event){\n\n        begin = false;\n        //board.rows.item(start[0]).cells.item(start[1]).innerHTML = \"___\";\n        //left arrow\n        if(event.keyCode == 37 && update){\n            //if(start[1] > 0){\n                //start[1]--;\n           //}\n           if(direction[1] != 1){\n                direction[1] = -1;\n                direction[0] = 0;\n                update = false;\n           }\n           \n        }\n\n        //down arrow\n        else if(event.keyCode == 40 && update){\n            //if(start[0] < max - 1){\n                //start[0]++;\n            //}\n            if(direction[0] != -1){\n                direction[0] = 1;\n                direction[1] = 0;\n                update = false;\n            }\n            \n        }\n\n        //right arrow\n        else if(event.keyCode == 39 && update){\n            //if(start[1] < max - 1){\n                //start[1]++;\n           // }\n           if(direction[1] != -1){\n                direction[1] = 1;\n                direction[0] = 0;\n                update = false;\n           }\n        }\n\n        //up arrow\n        else if(event.keyCode ==38 && update){\n            //if(start[0] > 0){\n                //start[0]--;\n            //}\n            if(direction[0] != 1){\n                direction[0] = -1;\n                direction[1] = 0;\n                update = false;\n            }\n        }\n            \n        if(startTimer){\n            \n        }  \n        startTimer = false;\n\n    });\n\n    var timer = setInterval(function(){\n        if(start[0] < 0 || start[0] > max - 1 || start[1] < 0 || start[1] > max - 1){\n            //clearInterval(timer);\n            //document.body.innerHTML = \"\";\n            end(timer);\n        }\n\n        //board.rows.item(berry[0]).cells.item(berry[1]).innerHTML = \"***\";\n        board.rows.item(berry[0]).cells.item(berry[1]).style.backgroundColor = \"red\";\n\n        //updates position of snake\n        start[0] += direction[0];\n        start[1] += direction[1];\n        //board.rows.item(start[0]).cells.item(start[1]).innerHTML = \"***\";\n        board.rows.item(start[0]).cells.item(start[1]).style.backgroundColor = \"green\";\n\n\n        snakeList.unshift([start[0], start[1]]);\n\n        if(start[0] == berry[0] && start[1] == berry[1]){\n            eaten = true;\n            //berry[0] = Math.floor(Math.random() * max);\n            //berry[1] = Math.floor(Math.random() * max);\n            timerSpeed -= 20;\n\n            //for(let i = 0; i < snakeList.length; i++){\n                //tempList[snakeList[i][0]].splice(snakeList[i][1], 1);\n            //}\n            var rand0 = Math.floor(Math.random() * tempList.length);\n            var rand1 = Math.floor(Math.random() * tempList[rand0].length);\n            berry[0] = tempList[rand0][rand1][0];\n            berry[1] = tempList[rand0][rand1][1];\n            tempList = boardList;\n        }\n        \n        if(!eaten){\n            //board.rows.item(snakeList[snakeList.length - 1][0]).cells.item(snakeList[snakeList.length - 1][1]).innerHTML = \"___\";\n            board.rows.item(snakeList[snakeList.length - 1][0]).cells.item(snakeList[snakeList.length - 1][1]).style.backgroundColor = \"white\";\n            snakeList.splice(snakeList.length - 1, 1);\n        }\n        else{\n            eaten = false;\n        }\n\n        update = true;\n\n        if(!begin){\n            for(let i = 1; i < snakeList.length; i++){\n                if(start[0] == snakeList[i][0] && start[1] == snakeList[i][1]){\n                    //clearInterval(timer);\n                    //document.body.innerHTML = \"\";\n                    end(timer);\n                }\n            }\n        }\n    }, 100 /*timerSpeed*/);\n   \n\n    document.body.appendChild(board);\n\n}\n\nfunction end(timer){\n    clearInterval(timer);\n    document.body.innerHTML = \"\";\n\n    const retry = document.createElement(\"button\");\n    retry.innerHTML =  \"RETRY\";\n    retry.className = \"retry\";\n    retry.addEventListener(\"click\", function(){\n        document.body.innerHTML = \"\";\n        snakeList = [];\n        boardList = [];\n        Snake();\n    })\n    document.body.appendChild(retry);\n}\n\nfunction randomize(list, max){\n    list[0] = Math.floor(Math.random() * max);\n    list[1] = Math.floor(Math.random() * max);\n}\n\n\nexport default Snake;"]},"metadata":{},"sourceType":"module"}