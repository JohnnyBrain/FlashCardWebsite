{"ast":null,"code":"import { Card } from \"./Card.js\";\nimport { CreateCard } from \"./CreateCard.js\";\nimport { Deck } from \"./Deck.js\";\nimport { FlashCardEdit } from \"./FlashCardEdit.js\";\nimport { HomePage } from \"./HomePage.js\";\nimport { ReturnButton } from \"./ReturnButton.js\"; //visualizes the create deck view. used when creating a deck\n\nexport function DeckEdit(deck, deckList, rightSide, leftSide) {\n  //document.body.innerHTML = \"\";\n  rightSide.innerHTML = \"\";\n  var tempCardList = [];\n  var tempDeck = new Deck(\"TEMP\");\n\n  for (let i = 0; i < deck.length(); i++) {\n    tempDeck.addCard(new Card(deck.getCard(i).getFront(), deck.getCard(i).getBack()));\n\n    if (deck.getCard(i).getStar()) {\n      tempDeck.getCard(i).setStar();\n    }\n  }\n\n  const buttonArray = document.createElement(\"div\");\n  buttonArray.className = \"buttonArray\";\n  buttonArray.appendChild(ReturnButton(deckList));\n  const saveButton = document.createElement(\"button\");\n  saveButton.innerHTML = \"Save\";\n  saveButton.addEventListener(\"click\", function () {\n    if (nameArea.value != 0) {\n      var rtnDeck = new Deck(nameArea.value);\n\n      for (let i = 0; i < tempCardList.length; i++) {\n        rtnDeck.addCard(new Card(tempCardList[i].getElementsByClassName(\"a\")[0].value, tempCardList[i].getElementsByClassName(\"b\")[0].value));\n\n        if (tempCardList[i].getElementsByClassName(\"c\")[0].style.backgroundColor == \"gold\") {\n          rtnDeck.getCard(i).setStar();\n        }\n      }\n\n      for (let i = 0; i < deckList.length; i++) {\n        if (deckList[i].getName() == deck.getName()) {\n          deckList[i] = rtnDeck;\n          break;\n        }\n      }\n      /*tempDeck.setName(nameArea.value);\n      for(let i = 0; i < deckList.length; i++){\n          if(deckList[i].getName() == deck.getName()){\n              deckList[i] = tempDeck;\n              break;\n          }\n      }*/\n      //document.body.innerHTML = \"\";\n\n\n      HomePage(deckList, rightSide, leftSide);\n    }\n  });\n  buttonArray.appendChild(saveButton);\n  const nameArea = document.createElement(\"textArea\");\n  nameArea.value = deck.getName();\n  buttonArray.appendChild(nameArea); //document.body.appendChild(buttonArray);\n\n  rightSide.appendChild(buttonArray);\n  /*var div = document.createElement(\"div\");\n  div.className = 'cardCreator';\n  \n  var frontText = document.createElement(\"label\");\n  frontText.innerHTML = 'FRONT:   ';\n  div.appendChild(frontText);\n  var front = document.createElement(\"textarea\");\n  div.appendChild(front);\n  var br = document.createElement(\"br\");\n  \n  var backText = document.createElement(\"label\");\n  backText.innerHTML = 'BACK:   ';\n  backText.className = \"backtext\";\n  div.appendChild(backText);\n  var back = document.createElement(\"textarea\");\n  div.appendChild(back);\n  div.appendChild(br);\n   var createButton = document.createElement(\"button\");\n  createButton.innerHTML = 'Create Card';\n  \n  //when creating a new card while editing\n  createButton.addEventListener(\"click\", function(){\n      if(front.value != '' && back.value != ''){\n          //if(!deck.cardExists(front.value, back.value)){\n              //const newCard = new Card(front.value, back.value);\n              //FlashCardEdit(newCard, deck);\n              //deck.addCard(newCard);\n              //front.value = '';\n              //back.value = '';\n          //}\n          const newCard = new Card(front.value, back.value);\n          //FlashCardEdit(newCard, tempDeck);\n          tempCardList.push(FlashCardEdit(newCard, tempDeck));\n      } \n      //const newCard = new Card(front.value, back.value);\n      //FlashCardEdit(newCard, deck);\n  });\n   /*createButton.addEventListener(\"click\", function(){\n    if(front.value != '' && back.value != ''){\n      front.value = '';\n      back.value = '';\n    } \n  });*/\n\n  /*\n  div.appendChild(createButton);\n  document.body.appendChild(div);*/\n\n  CreateCard(tempDeck, tempCardList, rightSide);\n\n  for (let i = 0; i < deck.length(); i++) {\n    //FlashCardEdit(tempDeck.getCard(i), tempDeck);\n    tempCardList.push(FlashCardEdit(tempDeck.getCard(i), tempDeck, tempCardList, rightSide));\n  }\n}\n_c = DeckEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckEdit\");","map":{"version":3,"sources":["/Users/johnbrain/Projects/FlashCardProject/src/block/DeckEdit.js"],"names":["Card","CreateCard","Deck","FlashCardEdit","HomePage","ReturnButton","DeckEdit","deck","deckList","rightSide","leftSide","innerHTML","tempCardList","tempDeck","i","length","addCard","getCard","getFront","getBack","getStar","setStar","buttonArray","document","createElement","className","appendChild","saveButton","addEventListener","nameArea","value","rtnDeck","getElementsByClassName","style","backgroundColor","getName","push"],"mappings":"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","sourcesContent":["import {Card} from \"./Card.js\";\nimport { CreateCard } from \"./CreateCard.js\";\nimport {Deck} from \"./Deck.js\";\nimport {FlashCardEdit} from \"./FlashCardEdit.js\"\nimport { HomePage } from \"./HomePage.js\";\nimport { ReturnButton } from \"./ReturnButton.js\";\n\n\n//visualizes the create deck view. used when creating a deck\nexport function DeckEdit(deck, deckList, rightSide, leftSide){\n    //document.body.innerHTML = \"\";\n    rightSide.innerHTML = \"\";\n\n    var tempCardList = [];\n\n    var tempDeck = new Deck(\"TEMP\");\n    for(let i = 0; i < deck.length(); i++){\n        tempDeck.addCard(new Card(deck.getCard(i).getFront(), deck.getCard(i).getBack()));\n        if(deck.getCard(i).getStar()){\n            tempDeck.getCard(i).setStar();\n        }\n    }\n\n    const buttonArray = document.createElement(\"div\");\n    buttonArray.className = \"buttonArray\";\n\n    buttonArray.appendChild(ReturnButton(deckList));\n\n    const saveButton = document.createElement(\"button\");\n    saveButton.innerHTML = \"Save\";\n    saveButton.addEventListener(\"click\", function(){\n        if(nameArea.value != 0){\n            var rtnDeck = new Deck(nameArea.value);\n            for(let i = 0; i < tempCardList.length; i++){\n                rtnDeck.addCard(new Card(tempCardList[i].getElementsByClassName(\"a\")[0].value, tempCardList[i].getElementsByClassName(\"b\")[0].value));\n                if(tempCardList[i].getElementsByClassName(\"c\")[0].style.backgroundColor == \"gold\"){\n                    rtnDeck.getCard(i).setStar();\n                }\n            }\n            for(let i = 0; i < deckList.length; i++){\n                if(deckList[i].getName() == deck.getName()){\n                    deckList[i] = rtnDeck;\n                    break;\n                }\n            }\n            /*tempDeck.setName(nameArea.value);\n            for(let i = 0; i < deckList.length; i++){\n                if(deckList[i].getName() == deck.getName()){\n                    deckList[i] = tempDeck;\n                    break;\n                }\n            }*/\n            //document.body.innerHTML = \"\";\n            HomePage(deckList, rightSide, leftSide);\n        }\n    });\n    buttonArray.appendChild(saveButton);\n\n    const nameArea = document.createElement(\"textArea\");\n    nameArea.value = deck.getName();\n    buttonArray.appendChild(nameArea);\n\n    //document.body.appendChild(buttonArray);\n    rightSide.appendChild(buttonArray);\n\n    /*var div = document.createElement(\"div\");\n    div.className = 'cardCreator';\n    \n    var frontText = document.createElement(\"label\");\n    frontText.innerHTML = 'FRONT:   ';\n    div.appendChild(frontText);\n    var front = document.createElement(\"textarea\");\n    div.appendChild(front);\n    var br = document.createElement(\"br\");\n    \n    var backText = document.createElement(\"label\");\n    backText.innerHTML = 'BACK:   ';\n    backText.className = \"backtext\";\n    div.appendChild(backText);\n    var back = document.createElement(\"textarea\");\n    div.appendChild(back);\n    div.appendChild(br);\n\n    var createButton = document.createElement(\"button\");\n    createButton.innerHTML = 'Create Card';\n    \n    //when creating a new card while editing\n    createButton.addEventListener(\"click\", function(){\n        if(front.value != '' && back.value != ''){\n            //if(!deck.cardExists(front.value, back.value)){\n                //const newCard = new Card(front.value, back.value);\n                //FlashCardEdit(newCard, deck);\n                //deck.addCard(newCard);\n                //front.value = '';\n                //back.value = '';\n            //}\n            const newCard = new Card(front.value, back.value);\n            //FlashCardEdit(newCard, tempDeck);\n            tempCardList.push(FlashCardEdit(newCard, tempDeck));\n        } \n        //const newCard = new Card(front.value, back.value);\n        //FlashCardEdit(newCard, deck);\n    });\n\n    /*createButton.addEventListener(\"click\", function(){\n      if(front.value != '' && back.value != ''){\n        front.value = '';\n        back.value = '';\n      } \n    });*/ /*\n    \n\n    div.appendChild(createButton);\n    document.body.appendChild(div);*/\n    CreateCard(tempDeck, tempCardList, rightSide);\n\n    for(let i = 0; i < deck.length(); i++){\n        //FlashCardEdit(tempDeck.getCard(i), tempDeck);\n        tempCardList.push(FlashCardEdit(tempDeck.getCard(i), tempDeck, tempCardList, rightSide));\n    }\n}"]},"metadata":{},"sourceType":"module"}