{"ast":null,"code":"import React, { useState } from \"react\";\nconst typingTestValue = \"sample test text for typing test\";\nconst wordBank = [\"high\", \"happy\", \"good\", \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\"];\nvar highScore = 0;\n\nfunction TypingPage() {\n  const wordList = shuffle(wordBank);\n  const title = document.createElement(\"div\");\n  title.className = \"title\";\n  title.innerHTML = \"Typing Test\";\n  document.body.appendChild(title);\n  const testArea = document.createElement(\"textarea\");\n  testArea.className = 'testArea';\n  wordList[1] = \" \" + wordList[1];\n  testArea.innerHTML = wordList[0] + wordList[1];\n  document.body.appendChild(testArea);\n  var tCorrect = 0;\n  var tWrong = 0;\n  document.body.appendChild(document.createElement('br'));\n  const correctScore = document.createElement(\"label\");\n  correctScore.innerHTML = tCorrect;\n  correctScore.className = \"scoreArea\";\n  document.body.appendChild(correctScore);\n  const wrongScore = document.createElement(\"label\");\n  wrongScore.innerHTML = tWrong;\n  wrongScore.className = \"scoreArea\";\n  document.body.appendChild(wrongScore);\n  var started = true;\n  const timerDisplay = document.createElement(\"label\");\n  document.body.appendChild(timerDisplay);\n  timerDisplay.className = \"timerDisplay\";\n  var sec = 60;\n  timerDisplay.innerHTML = '00: ' + sec;\n  var i = 0;\n  var wordDone = false;\n  var wordCount = 0;\n  document.addEventListener('keydown', function (event) {\n    if (wordDone && i < wordList.length - 1) {\n      wordList[i + 1] = \" \" + wordList[i + 1];\n      testArea.innerHTML = wordList[i] + wordList[i + 1];\n      wordDone = false;\n    }\n    /*if(testArea.innerHTML.length != 0){\n        var tempVal = testArea.innerHTML.substring(0, 1).charCodeAt(0);\n        if(tempVal > 90){\n            tempVal = tempVal - 32;\n        }\n        if(event.keyCode == tempVal){\n            testArea.innerHTML = testArea.innerHTML.substring(1, testArea.innerHTML.length);\n            tCorrect += 1;\n        }\n        else{\n            tWrong += 1\n            wrongScore.innerHTML = tWrong;\n        }\n    }*/\n\n\n    if (wordList[i].length != 0) {\n      if (i < wordList.length - 1) {\n        var tempVal = wordList[i].substring(0, 1).charCodeAt(0);\n\n        if (tempVal > 90) {\n          tempVal = tempVal - 32;\n        }\n\n        if (event.keyCode == tempVal) {\n          wordList[i] = wordList[i].substring(1, wordList[i].length);\n          testArea.innerHTML = wordList[i] + wordList[i + 1];\n          tCorrect += 1;\n        } else {\n          tWrong += 1;\n          wrongScore.innerHTML = tWrong;\n          testArea.style.textDecorationColor = \"red\";\n        }\n      } else if (i == wordList.length - 1) {\n        var tempVal = wordList[i].substring(0, 1).charCodeAt(0);\n\n        if (tempVal > 90) {\n          tempVal = tempVal - 32;\n        }\n\n        if (event.keyCode == tempVal) {\n          wordList[i] = wordList[i].substring(1, wordList[i].length);\n          testArea.innerHTML = wordList[i];\n          tCorrect += 1;\n        } else {\n          tWrong += 1;\n          wrongScore.innerHTML = tWrong;\n        }\n      }\n    }\n\n    if (wordList[i].length == 0) {\n      wordDone = true;\n      i += 1;\n      wordCount++;\n    }\n\n    if (started) {\n      var timer = setInterval(function () {\n        timerDisplay.innerHTML = '00: ' + sec;\n        sec--;\n\n        if (sec < 0 || testArea.innerHTML.length == 0\n        /*i == wordList.length*/\n        ) {\n          clearInterval(timer);\n          highScore = correctScore.innerHTML;\n        }\n\n        correctScore.innerHTML = Math.floor(wordCount / (60 - sec) * 60);\n      }, 1000);\n    }\n\n    started = false; //if(event.keyCode == 83){\n    //testArea.innerHTML = \"done\";\n    //}\n  });\n  const retryButton = document.createElement(\"button\");\n  retryButton.innerHTML = \"RETRY\";\n  retryButton.addEventListener(\"click\", function () {\n    document.body.innerHTML = \"\";\n    TypingPage();\n  });\n  document.body.appendChild(retryButton);\n  const highScoreLabel = document.createElement(\"label\");\n  highScoreLabel.innerHTML = highScore;\n  document.body.appendChild(highScoreLabel);\n}\n\n_c = TypingPage;\n\nfunction shuffle(array) {\n  let currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle.\n\n  while (currentIndex != 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n/*function timer(){\n    const timerDisplay = document.createElement(\"label\");\n    document.body.appendChild(timerDisplay);\n    timerDisplay.className = \"timerDisplay\";\n    var sec = 60;\n    timerDisplay.innerHTML = '00: ' + sec;\n    var timer = setInterval(function(){\n        timerDisplay.innerHTML = '00: ' + sec;\n        sec--;\n\n        if(sec < 0){\n            clearInterval(timer);\n        }\n    }, 1000);\n}*/\n\n\nexport default TypingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypingPage\");","map":{"version":3,"sources":["/Users/johnbrain/Japanese/TypingTestSite/src/TypingPage.js"],"names":["React","useState","typingTestValue","wordBank","highScore","TypingPage","wordList","shuffle","title","document","createElement","className","innerHTML","body","appendChild","testArea","tCorrect","tWrong","correctScore","wrongScore","started","timerDisplay","sec","i","wordDone","wordCount","addEventListener","event","length","tempVal","substring","charCodeAt","keyCode","style","textDecorationColor","timer","setInterval","clearInterval","Math","floor","retryButton","highScoreLabel","array","currentIndex","randomIndex","random"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst typingTestValue = \"sample test text for typing test\";\n\nconst wordBank = [\"high\", \"happy\", \"good\" , \"work\", \"day\", \"food\", \"some\", \"drive\", \"know\", \"take\", \"special\", \"because\"];\nvar highScore = 0;\n\nfunction TypingPage() {\n    const wordList = shuffle(wordBank);\n\n    const title = document.createElement(\"div\");\n    title.className = \"title\";\n    title.innerHTML = \"Typing Test\";\n\n    document.body.appendChild(title);\n\n    const testArea = document.createElement(\"textarea\");\n    testArea.className = 'testArea';\n    wordList[1] = \" \" + wordList[1];\n    testArea.innerHTML = wordList[0] +  wordList[1];\n    document.body.appendChild(testArea);\n\n\n    var tCorrect = 0;\n    var tWrong = 0;\n\n    document.body.appendChild(document.createElement('br'));\n\n    const correctScore =document.createElement(\"label\");\n    correctScore.innerHTML = tCorrect;\n    correctScore.className = \"scoreArea\";\n    document.body.appendChild(correctScore);\n\n    const wrongScore =document.createElement(\"label\");\n    wrongScore.innerHTML = tWrong;\n    wrongScore.className = \"scoreArea\";\n    document.body.appendChild(wrongScore);\n    \n    var started = true;\n    const timerDisplay = document.createElement(\"label\");\n    document.body.appendChild(timerDisplay);\n    timerDisplay.className = \"timerDisplay\";\n    var sec = 60;\n    timerDisplay.innerHTML = '00: ' + sec;\n\n    var i = 0\n    var wordDone = false;\n    var wordCount = 0;\n\n    document.addEventListener('keydown', function(event)\n    {\n        if(wordDone && i < wordList.length - 1){\n            wordList[i + 1] = \" \" + wordList[i + 1];\n            testArea.innerHTML = wordList[i] + wordList[i + 1];\n            wordDone = false;\n        }\n        /*if(testArea.innerHTML.length != 0){\n            var tempVal = testArea.innerHTML.substring(0, 1).charCodeAt(0);\n            if(tempVal > 90){\n                tempVal = tempVal - 32;\n            }\n            if(event.keyCode == tempVal){\n                testArea.innerHTML = testArea.innerHTML.substring(1, testArea.innerHTML.length);\n                tCorrect += 1;\n            }\n            else{\n                tWrong += 1\n                wrongScore.innerHTML = tWrong;\n            }\n        }*/\n\n        if(wordList[i].length != 0){\n            if(i < wordList.length - 1){\n                var tempVal = wordList[i].substring(0, 1).charCodeAt(0);\n                if(tempVal > 90){\n                    tempVal = tempVal - 32;\n                }\n                if(event.keyCode == tempVal){\n                    wordList[i] = wordList[i].substring(1, wordList[i].length);\n                    testArea.innerHTML = wordList[i] + wordList[i + 1];\n                    tCorrect += 1;\n                }\n                else{\n                    tWrong += 1\n                    wrongScore.innerHTML = tWrong;\n                    testArea.style.textDecorationColor = \"red\";\n                }\n            }\n            else if(i == wordList.length - 1){\n                var tempVal = wordList[i].substring(0, 1).charCodeAt(0);\n                if(tempVal > 90){\n                    tempVal = tempVal - 32;\n                }\n                if(event.keyCode == tempVal){\n                    wordList[i] = wordList[i].substring(1, wordList[i].length);\n                    testArea.innerHTML = wordList[i];\n                    tCorrect += 1;\n                }\n                else{\n                    tWrong += 1\n                    wrongScore.innerHTML = tWrong;\n                }\n            }\n        }\n\n        if(wordList[i].length == 0){\n            wordDone = true;\n            i += 1;\n            wordCount++;\n        }\n\n        if(started){\n            var timer = setInterval(function(){\n                timerDisplay.innerHTML = '00: ' + sec;\n                sec--;\n        \n                if(sec < 0 || testArea.innerHTML.length == 0/*i == wordList.length*/){\n                    clearInterval(timer);\n                    highScore = correctScore.innerHTML;\n                }\n                correctScore.innerHTML = Math.floor(wordCount / (60 - sec) * 60);\n            }, 1000);\n         }\n         started = false;\n        \n        //if(event.keyCode == 83){\n            //testArea.innerHTML = \"done\";\n        //}\n    });\n\n    const retryButton = document.createElement(\"button\");\n    retryButton.innerHTML = \"RETRY\";\n    retryButton.addEventListener(\"click\", function(){\n        document.body.innerHTML = \"\";\n        TypingPage();\n    });\n    document.body.appendChild(retryButton);\n    \n    const highScoreLabel = document.createElement(\"label\");\n    highScoreLabel.innerHTML = highScore;\n    document.body.appendChild(highScoreLabel);\n\n}\n\nfunction shuffle(array) {\n    let currentIndex = array.length,  randomIndex;\n  \n    // While there remain elements to shuffle.\n    while (currentIndex != 0) {\n  \n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n  \n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n  \n    return array;\n  }\n\n/*function timer(){\n    const timerDisplay = document.createElement(\"label\");\n    document.body.appendChild(timerDisplay);\n    timerDisplay.className = \"timerDisplay\";\n    var sec = 60;\n    timerDisplay.innerHTML = '00: ' + sec;\n    var timer = setInterval(function(){\n        timerDisplay.innerHTML = '00: ' + sec;\n        sec--;\n\n        if(sec < 0){\n            clearInterval(timer);\n        }\n    }, 1000);\n}*/\n\nexport default TypingPage;"]},"metadata":{},"sourceType":"module"}