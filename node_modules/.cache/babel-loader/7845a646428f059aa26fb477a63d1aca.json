{"ast":null,"code":"import Sentence from './Sentence';\nimport FlashCard from './FlashCard';\nimport React, { useState } from \"react\";\nvar cardList = [];\nconst deckNames = [];\nconst cardListArray = [];\n\nfunction App() {\n  const title = document.createElement(\"h1\");\n  title.className = 'title';\n  title.innerHTML = 'QUIZIFY';\n  document.body.appendChild(title);\n\n  for (let i = 0; i < cardListArray.length; i++) {\n    const deckWidget = document.createElement(\"div\"); //const deckWidget = document.createElement(\"div\");\n\n    deckWidget.className = 'deck';\n    const deckName = document.createElement(\"h2\"); //deckName.innerHTML = 'tempName';\n\n    deckName.innerHTML = deckNames[i];\n    const deckSize = document.createElement(\"label\");\n    deckSize.innerHTML = \"SIZE: \" + cardListArray[i].length;\n    const studyButton = document.createElement(\"button\");\n    studyButton.innerHTML = 'STUDY';\n    studyButton.className = 'widgetButton';\n    var deckIndex = deckNames.indexOf(deckName.innerHTML);\n    studyButton.addEventListener(\"click\", function () {\n      document.body.innerHTML = \"\";\n      /*document.body.innerHTML = '';\n       const returnButton = document.createElement(\"button\");\n      returnButton.innerHTML = 'Return';\n      returnButton.style.marginTop = \"10px\";\n      returnButton.style.marginLeft = \"10px\";\n      returnButton.addEventListener(\"click\", function(){\n        document.body.innerHTML = '';\n        App();\n      });\n      document.body.appendChild(returnButton);\n         var deckIndex = deckNames.indexOf(deckName.innerHTML);\n      let cnt = 0;\n      \n       createFlashCard();\n       //when you press the study button\n      function createFlashCard(){\n        const cardCounter = document.createElement(\"text\");\n        function createCardCounter(){\n          if(!(cnt + 1 > cardListArray[deckIndex].length)){\n            cardCounter.innerHTML = \"CARD: \" + (cnt + 1) + \" / \" + cardListArray[deckIndex].length;\n          }\n          else{\n            cardCounter.innerHTML = \"END\";\n          }\n          //cardCounter.style.marginLeft = \"10px\";\n          cardCounter.className = 'cardcounter';\n          document.body.appendChild(cardCounter);\n        }\n        if(cardListArray[deckIndex].length != 0){\n          createCardCounter();\n        }\n         //when you press the study button\n        \n        const can = document.createElement(\"div\");\n        if(cnt >= 0 && cnt < cardListArray[deckIndex].length){\n              can.className = \"flashcard2\";\n                 const frontSide = document.createElement(\"h2\");\n              frontSide.innerHTML = cardListArray[deckIndex][cnt][0];\n              const backSide = document.createElement(\"h2\");\n              backSide.innerHTML = cardListArray[deckIndex][cnt][1];\n              can.appendChild(frontSide);\n              can.appendChild(backSide)\n              backSide.style.display = \"none\";\n              \n              var button = document.createElement(\"button\");\n              button.innerHTML = \"FLIP\";\n              button.style.marginRight = \"10px\";\n                 button.addEventListener(\"click\", function(){\n                  if(frontSide.style.display == \"none\"){\n                      frontSide.style.display = \"block\";\n                      backSide.style.display = \"none\";\n                  }\n                  else{\n                      frontSide.style.display = \"none\";\n                      backSide.style.display = \"block\";\n                  }\n                  \n              });\n              can.appendChild(button);\n                 var deleteButton = document.createElement(\"button\");\n              deleteButton.innerHTML = 'DELETE';\n              deleteButton.className = \"deleteButton\";\n              deleteButton.addEventListener(\"click\", function(){\n                document.body.removeChild(can);\n                for(let i = 0; i < cardListArray[deckIndex].length; i++){\n                  if(cardListArray[deckIndex][i][0] == frontSide.innerHTML && cardListArray[deckIndex][i][1] == backSide.innerHTML){\n                    cardListArray[deckIndex].splice(i, 1);\n                  }\n                }\n                document.body.removeChild(cardCounter);\n                document.body.removeChild(nextButton);\n                document.body.removeChild(prevButton);\n                createFlashCard();\n                   });\n              can.appendChild(deleteButton);\n               var starButton = document.createElement(\"button\");\n                    starButton.innerHTML = 'Star';\n                    starButton.className = \"starButton\";\n                    if(cardListArray[deckIndex][cnt][2]){\n                      starButton.style.backgroundColor = \"gold\";\n                    }\n                    starButton.addEventListener(\"click\", function(){\n                      if(cardListArray[deckIndex][cnt][2]){\n                        cardListArray[deckIndex][cnt][2] = false;\n                        starButton.style.backgroundColor = \"\";\n                      }\n                      else{\n                        cardListArray[deckIndex][cnt][2] = true;\n                        starButton.style.backgroundColor = \"gold\";\n                      }\n                    });\n                    can.appendChild(starButton);\n                    document.body.appendChild(can);\n                   }\n            \n            \n             const nextButton = document.createElement(\"button\");\n              nextButton.innerHTML = 'NEXT';\n              nextButton.style = \"\";\n              nextButton.className = 'nextButton';\n              nextButton.addEventListener(\"click\", function(){\n                if(!(cnt < 0)){\n                  document.body.removeChild(can);\n                  document.body.removeChild(nextButton);\n                  document.body.removeChild(prevButton);\n                  document.body.removeChild(cardCounter);\n                  cnt++;\n                  createFlashCard();\n                }\n                else{\n                  document.body.removeChild(nextButton);\n                  document.body.removeChild(cardCounter);\n                  cnt++;\n                  createFlashCard();\n                }\n            });\n             const prevButton = document.createElement(\"button\");\n            prevButton.innerHTML = 'PREVIOUS';\n            prevButton.className = 'nextButton';\n            prevButton.style = \"\";\n            prevButton.addEventListener(\"click\", function(){\n              if(!(cnt >= cardListArray[deckIndex].length && cardListArray[deckIndex].length != 0)){\n                document.body.removeChild(can);\n                document.body.removeChild(prevButton);\n                document.body.removeChild(nextButton);\n                document.body.removeChild(cardCounter);\n                cnt--;\n                createFlashCard();\n              }\n              else{\n                  document.body.removeChild(prevButton);\n                  document.body.removeChild(cardCounter);\n                  cnt--;\n                  createFlashCard();\n              }\n            });\n             if(cnt >= 0 && cnt < cardListArray[deckIndex].length){\n              nextButton.style.marginLeft = \"38%\";\n              prevButton.style.display = \"block\";\n              prevButton.style.marginLeft = \"38%\";\n              document.body.appendChild(nextButton);\n              document.body.appendChild(prevButton);\n            }\n            else if(cnt < 0){\n              nextButton.style.display = \"block\";\n              nextButton.style.marginLeft = \"38%\";\n              document.body.appendChild(nextButton);\n            }\n            else if(cnt >= cardListArray[deckIndex].length && cardListArray[deckIndex].length != 0){\n              prevButton.style.display = \"block\";\n              prevButton.style.marginLeft = \"38%\";\n              document.body.appendChild(prevButton);\n              \n            }\n            \n      }*/\n    });\n    const deleteWidget = document.createElement(\"button\");\n    deleteWidget.innerHTML = \"DELETE\";\n    deleteWidget.className = \"deleteButton\";\n    ;\n    deleteWidget.addEventListener(\"click\", function () {\n      cardListArray.splice(deckNames.indexOf(deckName.innerHTML), 1);\n      deckNames.splice(deckNames.indexOf(deckName.innerHTML), 1);\n      document.body.innerHTML = '';\n      App();\n    });\n    const addButton = document.createElement(\"button\");\n    addButton.innerHTML = \"EDIT\";\n    addButton.style.marginLeft = \"7px\"; //when editing\n\n    addButton.addEventListener(\"click\", function () {\n      var cardList = [];\n      var deckIndex2 = deckNames.indexOf(deckName.innerHTML);\n\n      for (let i = 0; i < cardListArray[deckIndex2].length; i++) {\n        cardList[i] = cardListArray[deckIndex2][i];\n      }\n\n      document.body.innerHTML = '';\n      var buttonArray = document.createElement(\"div\");\n      var div = document.createElement(\"div\");\n      div.className = 'cardCreator';\n      var frontText = document.createElement(\"label\");\n      frontText.innerHTML = 'FRONT:   ';\n      div.appendChild(frontText);\n      var front = document.createElement(\"textarea\");\n      div.appendChild(front);\n      var br = document.createElement(\"br\");\n      var backText = document.createElement(\"label\");\n      backText.innerHTML = 'BACK:   ';\n      backText.className = \"backtext\";\n      div.appendChild(backText);\n      var back = document.createElement(\"textarea\");\n      div.appendChild(back);\n      div.appendChild(br);\n      var createButton = document.createElement(\"button\");\n      createButton.innerHTML = 'Create Card'; //when creating a new card while editing\n\n      createButton.addEventListener(\"click\", function () {\n        if (front.value != '' && back.value != '') {\n          const newCard = document.createElement(\"div\");\n          newCard.className = \"flashcard\";\n          const frontSide = document.createElement(\"h2\");\n          frontSide.innerHTML = front.value;\n          const backSide = document.createElement(\"h2\");\n          backSide.innerHTML = back.value;\n          newCard.appendChild(frontSide);\n          newCard.appendChild(backSide);\n          backSide.style.display = \"none\";\n          var button = document.createElement(\"button\");\n          button.innerHTML = \"FLIP\";\n          button.addEventListener(\"click\", function () {\n            if (frontSide.style.display == \"none\") {\n              frontSide.style.display = \"block\";\n              backSide.style.display = \"none\";\n            } else {\n              frontSide.style.display = \"none\";\n              backSide.style.display = \"block\";\n            }\n          });\n          newCard.appendChild(button);\n          var deleteButton = document.createElement(\"button\");\n          deleteButton.innerHTML = 'DELETE';\n          deleteButton.className = \"deleteButton\";\n          deleteButton.addEventListener(\"click\", function () {\n            document.body.removeChild(newCard); //This deletes a card when you are adding a new deck. It assumes each card is unique\n\n            for (let i = 0; i < cardList.length; i++) {\n              if (cardList[i][0] == frontSide.innerHTML && cardList[i][1] == backSide.innerHTML) {\n                cardList.splice(i, 1);\n              }\n            } //cardList.splice(cardList.indexOf(frontSide.innerHTML + \",\" + backSide.innerHTML), 1);\n\n          });\n          newCard.appendChild(deleteButton);\n          var starButton = document.createElement(\"button\");\n          starButton.innerHTML = 'Star';\n          starButton.className = \"starButton\";\n          starButton.addEventListener(\"click\", function () {\n            for (let i = 0; i < cardList.length; i++) {\n              if (cardList[i][0] == frontSide.innerHTML && cardList[i][1] == backSide.innerHTML) {\n                if (cardList[i][2]) {\n                  starButton.style.backgroundColor = \"\";\n                  cardList[i][2] = false;\n                } else {\n                  starButton.style.backgroundColor = \"gold\";\n                  cardList[i][2] = true;\n                }\n              }\n            }\n          });\n          newCard.appendChild(starButton);\n          document.body.appendChild(newCard);\n          cardList.push([front.value, back.value, false]);\n        }\n      });\n      createButton.addEventListener(\"click\", function () {\n        if (front.value != '' && back.value != '') {\n          front.value = '';\n          back.value = '';\n        }\n      });\n      const titleLabel = document.createElement(\"label\");\n      titleLabel.innerHTML = 'TITLE: ';\n      const titleArea = document.createElement(\"textarea\");\n      titleArea.value = deckNames[deckIndex2];\n      const saveButton = document.createElement(\"button\");\n      saveButton.innerHTML = 'SAVE';\n      saveButton.addEventListener(\"click\", function () {\n        if (titleArea.value != \"\") {\n          //for(let i = 0; i < cardList.length; i++){\n          //cardListArray.push([cardList[i][0], cardList[i][1]]);\n          //}\n          //deckNames.push(titleArea.value);\n          deckNames[deckIndex2] = titleArea.value;\n          cardListArray[deckIndex2] = cardList;\n          document.body.innerHTML = '';\n          App();\n        }\n      });\n      const rtnButton = document.createElement(\"button\");\n      rtnButton.innerHTML = \"RETURN\";\n      rtnButton.addEventListener(\"click\", function () {\n        document.body.innerHTML = '';\n        cardList = [];\n        App();\n      });\n      buttonArray.appendChild(rtnButton);\n      buttonArray.appendChild(saveButton);\n      buttonArray.appendChild(br);\n      buttonArray.appendChild(titleLabel);\n      buttonArray.appendChild(titleArea);\n      div.appendChild(createButton);\n      buttonArray.className = 'buttonArray';\n      document.body.appendChild(buttonArray);\n      document.body.appendChild(div); //when adding cards to the page when editing that already exist in the deck\n      //ie, not cards that are being added when editing\n\n      for (let i = 0; i < cardListArray[deckIndex2].length; i++) {\n        const newCard = document.createElement(\"div\");\n        newCard.className = \"flashcard\";\n        const frontSide = document.createElement(\"h2\");\n        frontSide.innerHTML = cardListArray[deckIndex2][i][0];\n        const backSide = document.createElement(\"h2\");\n        backSide.innerHTML = cardListArray[deckIndex2][i][1];\n        newCard.appendChild(frontSide);\n        newCard.appendChild(backSide);\n        backSide.style.display = \"none\";\n        var button = document.createElement(\"button\");\n        button.innerHTML = \"FLIP\";\n        button.addEventListener(\"click\", function () {\n          if (frontSide.style.display == \"none\") {\n            frontSide.style.display = \"block\";\n            backSide.style.display = \"none\";\n          } else {\n            frontSide.style.display = \"none\";\n            backSide.style.display = \"block\";\n          }\n        });\n        newCard.appendChild(button);\n        var deleteButton = document.createElement(\"button\");\n        deleteButton.innerHTML = 'DELETE';\n        deleteButton.className = \"deleteButton\";\n        deleteButton.addEventListener(\"click\", function () {\n          document.body.removeChild(newCard); //This deletes a card when you are adding a new deck. It assumes each card is unique\n\n          for (let i = 0; i < cardList.length; i++) {\n            if (cardList[i][0] == frontSide.innerHTML && cardList[i][1] == backSide.innerHTML) {\n              cardList.splice(i, 1);\n            }\n          } //cardList.splice(cardList.indexOf(frontSide.innerHTML + \",\" + backSide.innerHTML), 1);\n\n        });\n        newCard.appendChild(deleteButton);\n        const starButton = document.createElement(\"button\");\n        starButton.innerHTML = 'Star';\n        starButton.className = \"starButton\";\n\n        if (cardListArray[deckIndex2][i][2]) {\n          starButton.style.backgroundColor = \"gold\";\n        }\n\n        starButton.addEventListener(\"click\", function () {\n          for (let i = 0; i < cardList.length; i++) {\n            if (cardList[i][0] == frontSide.innerHTML && cardList[i][1] == backSide.innerHTML) {\n              if (cardList[i][2]) {\n                cardList[i][2] = false;\n                starButton.style.backgroundColor = \"\";\n              } else {\n                cardList[i][2] = true;\n                starButton.style.backgroundColor = \"gold\";\n              }\n            }\n          }\n        });\n        newCard.appendChild(starButton);\n        document.body.appendChild(newCard);\n      }\n    });\n    deckWidget.appendChild(deckName);\n    deckWidget.appendChild(studyButton);\n    deckWidget.appendChild(deleteWidget);\n    deckWidget.appendChild(addButton);\n    document.body.appendChild(deckWidget);\n    deckWidget.appendChild(deckSize);\n  } //document.body.appendChild(deckWidget);\n\n\n  const addDeck = document.createElement(\"button\");\n  addDeck.innerHTML = \"Add New Deck\";\n  addDeck.style.marginLeft = \"15px\";\n  addDeck.addEventListener(\"click\", function () {\n    //document.body.removeChild(deckWidget);\n    //document.body.removeChild(addDeck);\n    //document.body.removeChild(title);\n    document.body.innerHTML = '';\n    var buttonArray = document.createElement(\"div\");\n    var div = document.createElement(\"div\");\n    div.className = 'cardCreator';\n    var frontText = document.createElement(\"label\");\n    frontText.innerHTML = 'FRONT:   ';\n    div.appendChild(frontText);\n    var front = document.createElement(\"textarea\");\n    div.appendChild(front);\n    var br = document.createElement(\"br\");\n    var backText = document.createElement(\"label\");\n    backText.innerHTML = 'BACK:   ';\n    backText.className = \"backtext\";\n    div.appendChild(backText);\n    var back = document.createElement(\"textarea\");\n    div.appendChild(back);\n    div.appendChild(br);\n    var createButton = document.createElement(\"button\");\n    createButton.innerHTML = 'Create Card'; //creates cards when first creating the deck\n\n    createButton.addEventListener(\"click\", function () {\n      if (front.value != '' && back.value != '') {\n        const newCard = document.createElement(\"div\");\n        newCard.className = \"flashcard\";\n        const frontSide = document.createElement(\"h2\");\n        frontSide.innerHTML = front.value;\n        const backSide = document.createElement(\"h2\");\n        backSide.innerHTML = back.value;\n        newCard.appendChild(frontSide);\n        newCard.appendChild(backSide);\n        backSide.style.display = \"none\";\n        var button = document.createElement(\"button\");\n        button.innerHTML = \"FLIP\";\n        button.addEventListener(\"click\", function () {\n          if (frontSide.style.display == \"none\") {\n            frontSide.style.display = \"block\";\n            backSide.style.display = \"none\";\n          } else {\n            frontSide.style.display = \"none\";\n            backSide.style.display = \"block\";\n          }\n        });\n        newCard.appendChild(button);\n        var deleteButton = document.createElement(\"button\");\n        deleteButton.innerHTML = 'DELETE';\n        deleteButton.className = \"deleteButton\";\n        deleteButton.addEventListener(\"click\", function () {\n          document.body.removeChild(newCard); //This deletes a card when you are adding a new deck. It assumes each card is unique\n\n          for (let i = 0; i < cardList.length; i++) {\n            if (cardList[i][0] == frontSide.innerHTML && cardList[i][1] == backSide.innerHTML) {\n              cardList.splice(i, 1);\n            }\n          } //cardList.splice(cardList.indexOf(frontSide.innerHTML + \",\" + backSide.innerHTML), 1);\n\n        });\n        newCard.appendChild(deleteButton);\n        var starButton = document.createElement(\"button\");\n        starButton.innerHTML = 'Star';\n        starButton.className = \"starButton\";\n        starButton.style.position = \"absolute\";\n        starButton.style.marginLeft = \"10%\";\n        starButton.addEventListener(\"click\", function () {\n          for (let i = 0; i < cardList.length; i++) {\n            if (cardList[i][0] == frontSide.innerHTML && cardList[i][1] == backSide.innerHTML) {\n              if (cardList[i][2]) {\n                starButton.style.backgroundColor = \"\";\n                cardList[i][2] = false;\n              } else {\n                starButton.style.backgroundColor = \"gold\";\n                cardList[i][2] = true;\n              }\n            }\n          }\n        });\n        newCard.appendChild(starButton);\n        document.body.appendChild(newCard);\n        cardList.push([front.value, back.value, false]);\n      }\n    });\n    createButton.addEventListener(\"click\", function () {\n      if (front.value != '' && back.value != '') {\n        front.value = '';\n        back.value = '';\n      }\n    });\n    const titleLabel = document.createElement(\"label\");\n    titleLabel.innerHTML = 'TITLE: ';\n    const titleArea = document.createElement(\"textarea\");\n    const saveButton = document.createElement(\"button\");\n    saveButton.innerHTML = 'SAVE';\n    saveButton.addEventListener(\"click\", function () {\n      if (cardList.length != 0 && titleArea.value != \"\") {\n        //for(let i = 0; i < cardList.length; i++){\n        //cardListArray.push([cardList[i][0], cardList[i][1]]);\n        //}\n        cardListArray.push(cardList);\n        cardList = [];\n        deckNames.push(titleArea.value);\n        document.body.innerHTML = '';\n        App();\n      }\n    });\n    const rtnButton = document.createElement(\"button\");\n    rtnButton.innerHTML = \"RETURN\";\n    rtnButton.addEventListener(\"click\", function () {\n      document.body.innerHTML = '';\n      cardList = [];\n      App();\n    });\n    buttonArray.appendChild(rtnButton);\n    buttonArray.appendChild(saveButton);\n    buttonArray.appendChild(br);\n    buttonArray.appendChild(titleLabel);\n    buttonArray.appendChild(titleArea);\n    div.appendChild(createButton);\n    buttonArray.className = 'buttonArray';\n    document.body.appendChild(buttonArray);\n    document.body.appendChild(div);\n  });\n  document.body.appendChild(addDeck);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/johnbrain/Japanese/japanese-website/src/App.js"],"names":["Sentence","FlashCard","React","useState","cardList","deckNames","cardListArray","App","title","document","createElement","className","innerHTML","body","appendChild","i","length","deckWidget","deckName","deckSize","studyButton","deckIndex","indexOf","addEventListener","deleteWidget","splice","addButton","style","marginLeft","deckIndex2","buttonArray","div","frontText","front","br","backText","back","createButton","value","newCard","frontSide","backSide","display","button","deleteButton","removeChild","starButton","backgroundColor","push","titleLabel","titleArea","saveButton","rtnButton","addDeck","position"],"mappings":"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","sourcesContent":["import Sentence from './Sentence';\nimport FlashCard from './FlashCard';\nimport React, { useState } from \"react\";\n\nvar cardList = [];\nconst deckNames = [];\nconst cardListArray = [];\n\n\nfunction App() {\n\n    const title = document.createElement(\"h1\");\n    title.className = 'title';\n    title.innerHTML = 'QUIZIFY';\n    document.body.appendChild(title);\n\n    for(let i = 0; i < cardListArray.length; i++){\n      const deckWidget = document.createElement(\"div\");\n      //const deckWidget = document.createElement(\"div\");\n      deckWidget.className = 'deck';\n      \n      const deckName = document.createElement(\"h2\");\n      //deckName.innerHTML = 'tempName';\n      deckName.innerHTML = deckNames[i];\n\n      const deckSize = document.createElement(\"label\");\n      deckSize.innerHTML = \"SIZE: \" + cardListArray[i].length;\n\n      const studyButton = document.createElement(\"button\");\n      studyButton.innerHTML = 'STUDY';\n      studyButton.className = 'widgetButton';\n      var deckIndex = deckNames.indexOf(deckName.innerHTML);\n\n      studyButton.addEventListener(\"click\", function(){\n        document.body.innerHTML = \"\";\n        /*document.body.innerHTML = '';\n\n        const returnButton = document.createElement(\"button\");\n        returnButton.innerHTML = 'Return';\n        returnButton.style.marginTop = \"10px\";\n        returnButton.style.marginLeft = \"10px\";\n        returnButton.addEventListener(\"click\", function(){\n          document.body.innerHTML = '';\n          App();\n        });\n        document.body.appendChild(returnButton);\n\n\n\n        var deckIndex = deckNames.indexOf(deckName.innerHTML);\n        let cnt = 0;\n        \n\n        createFlashCard();\n\n        //when you press the study button\n        function createFlashCard(){\n          const cardCounter = document.createElement(\"text\");\n          function createCardCounter(){\n            if(!(cnt + 1 > cardListArray[deckIndex].length)){\n              cardCounter.innerHTML = \"CARD: \" + (cnt + 1) + \" / \" + cardListArray[deckIndex].length;\n            }\n            else{\n              cardCounter.innerHTML = \"END\";\n            }\n            //cardCounter.style.marginLeft = \"10px\";\n            cardCounter.className = 'cardcounter';\n            document.body.appendChild(cardCounter);\n          }\n          if(cardListArray[deckIndex].length != 0){\n            createCardCounter();\n          }\n\n          //when you press the study button\n          \n          const can = document.createElement(\"div\");\n          if(cnt >= 0 && cnt < cardListArray[deckIndex].length){\n                can.className = \"flashcard2\";\n  \n                const frontSide = document.createElement(\"h2\");\n                frontSide.innerHTML = cardListArray[deckIndex][cnt][0];\n                const backSide = document.createElement(\"h2\");\n                backSide.innerHTML = cardListArray[deckIndex][cnt][1];\n                can.appendChild(frontSide);\n                can.appendChild(backSide)\n                backSide.style.display = \"none\";\n                \n                var button = document.createElement(\"button\");\n                button.innerHTML = \"FLIP\";\n                button.style.marginRight = \"10px\";\n  \n                button.addEventListener(\"click\", function(){\n                    if(frontSide.style.display == \"none\"){\n                        frontSide.style.display = \"block\";\n                        backSide.style.display = \"none\";\n                    }\n                    else{\n                        frontSide.style.display = \"none\";\n                        backSide.style.display = \"block\";\n                    }\n                    \n                });\n                can.appendChild(button);\n  \n                var deleteButton = document.createElement(\"button\");\n                deleteButton.innerHTML = 'DELETE';\n                deleteButton.className = \"deleteButton\";\n                deleteButton.addEventListener(\"click\", function(){\n                  document.body.removeChild(can);\n                  for(let i = 0; i < cardListArray[deckIndex].length; i++){\n                    if(cardListArray[deckIndex][i][0] == frontSide.innerHTML && cardListArray[deckIndex][i][1] == backSide.innerHTML){\n                      cardListArray[deckIndex].splice(i, 1);\n                    }\n                  }\n                  document.body.removeChild(cardCounter);\n                  document.body.removeChild(nextButton);\n                  document.body.removeChild(prevButton);\n                  createFlashCard();\n    \n                });\n                can.appendChild(deleteButton);\n\n                var starButton = document.createElement(\"button\");\n                      starButton.innerHTML = 'Star';\n                      starButton.className = \"starButton\";\n                      if(cardListArray[deckIndex][cnt][2]){\n                        starButton.style.backgroundColor = \"gold\";\n                      }\n                      starButton.addEventListener(\"click\", function(){\n                        if(cardListArray[deckIndex][cnt][2]){\n                          cardListArray[deckIndex][cnt][2] = false;\n                          starButton.style.backgroundColor = \"\";\n                        }\n                        else{\n                          cardListArray[deckIndex][cnt][2] = true;\n                          starButton.style.backgroundColor = \"gold\";\n                        }\n                      });\n                      can.appendChild(starButton);\n                      document.body.appendChild(can);\n\n                    }\n\n             \n              \n\n              const nextButton = document.createElement(\"button\");\n                nextButton.innerHTML = 'NEXT';\n                nextButton.style = \"\";\n                nextButton.className = 'nextButton';\n                nextButton.addEventListener(\"click\", function(){\n                  if(!(cnt < 0)){\n                    document.body.removeChild(can);\n                    document.body.removeChild(nextButton);\n                    document.body.removeChild(prevButton);\n                    document.body.removeChild(cardCounter);\n                    cnt++;\n                    createFlashCard();\n                  }\n                  else{\n                    document.body.removeChild(nextButton);\n                    document.body.removeChild(cardCounter);\n                    cnt++;\n                    createFlashCard();\n                  }\n              });\n\n              const prevButton = document.createElement(\"button\");\n              prevButton.innerHTML = 'PREVIOUS';\n              prevButton.className = 'nextButton';\n              prevButton.style = \"\";\n              prevButton.addEventListener(\"click\", function(){\n                if(!(cnt >= cardListArray[deckIndex].length && cardListArray[deckIndex].length != 0)){\n                  document.body.removeChild(can);\n                  document.body.removeChild(prevButton);\n                  document.body.removeChild(nextButton);\n                  document.body.removeChild(cardCounter);\n                  cnt--;\n                  createFlashCard();\n                }\n                else{\n                    document.body.removeChild(prevButton);\n                    document.body.removeChild(cardCounter);\n                    cnt--;\n                    createFlashCard();\n                }\n              });\n\n              if(cnt >= 0 && cnt < cardListArray[deckIndex].length){\n                nextButton.style.marginLeft = \"38%\";\n                prevButton.style.display = \"block\";\n                prevButton.style.marginLeft = \"38%\";\n                document.body.appendChild(nextButton);\n                document.body.appendChild(prevButton);\n              }\n              else if(cnt < 0){\n                nextButton.style.display = \"block\";\n                nextButton.style.marginLeft = \"38%\";\n                document.body.appendChild(nextButton);\n              }\n              else if(cnt >= cardListArray[deckIndex].length && cardListArray[deckIndex].length != 0){\n                prevButton.style.display = \"block\";\n                prevButton.style.marginLeft = \"38%\";\n                document.body.appendChild(prevButton);\n                \n              }\n              \n        }*/\n            \n            \n\n      });\n\n      const deleteWidget = document.createElement(\"button\");\n      deleteWidget.innerHTML = \"DELETE\";\n      deleteWidget.className = \"deleteButton\";;\n\n      deleteWidget.addEventListener(\"click\", function(){\n        cardListArray.splice(deckNames.indexOf(deckName.innerHTML), 1);\n        deckNames.splice(deckNames.indexOf(deckName.innerHTML), 1);\n        document.body.innerHTML = '';\n        App();\n      });\n\n      const addButton = document.createElement(\"button\");\n      addButton.innerHTML = \"EDIT\";\n      addButton.style.marginLeft = \"7px\";\n\n      //when editing\n      addButton.addEventListener(\"click\", function(){\n            var cardList = [];\n            var deckIndex2 = deckNames.indexOf(deckName.innerHTML);\n            for(let i = 0; i < cardListArray[deckIndex2].length; i++){\n              cardList[i] = cardListArray[deckIndex2][i];\n            }\n\n              document.body.innerHTML = '';\n\n            var buttonArray = document.createElement(\"div\");\n\n            var div = document.createElement(\"div\");\n            div.className = 'cardCreator';\n            \n            var frontText = document.createElement(\"label\");\n            frontText.innerHTML = 'FRONT:   ';\n            div.appendChild(frontText);\n\n            var front = document.createElement(\"textarea\");\n            div.appendChild(front);\n            var br = document.createElement(\"br\");\n            \n            var backText = document.createElement(\"label\");\n            backText.innerHTML = 'BACK:   ';\n            backText.className = \"backtext\";\n            div.appendChild(backText);\n            var back = document.createElement(\"textarea\");\n            div.appendChild(back);\n            div.appendChild(br);\n        \n        \n            var createButton = document.createElement(\"button\");\n            createButton.innerHTML = 'Create Card';\n            \n            //when creating a new card while editing\n            createButton.addEventListener(\"click\", function(){\n              if(front.value != '' && back.value != ''){\n                const newCard = document.createElement(\"div\");\n        \n                newCard.className = \"flashcard\";\n        \n                      const frontSide = document.createElement(\"h2\");\n                      frontSide.innerHTML = front.value;\n                      const backSide = document.createElement(\"h2\");\n                      backSide.innerHTML = back.value;\n                      newCard.appendChild(frontSide);\n                      newCard.appendChild(backSide)\n                      backSide.style.display = \"none\";\n                      \n                      var button = document.createElement(\"button\");\n                      button.innerHTML = \"FLIP\";\n        \n                      button.addEventListener(\"click\", function(){\n                          if(frontSide.style.display == \"none\"){\n                              frontSide.style.display = \"block\";\n                              backSide.style.display = \"none\";\n                          }\n                          else{\n                              frontSide.style.display = \"none\";\n                              backSide.style.display = \"block\";\n                          }\n                          \n                      });\n                      newCard.appendChild(button);\n        \n                      var deleteButton = document.createElement(\"button\");\n                      deleteButton.innerHTML = 'DELETE';\n                      deleteButton.className = \"deleteButton\";\n                      deleteButton.addEventListener(\"click\", function(){\n                        document.body.removeChild(newCard);\n                        \n                        //This deletes a card when you are adding a new deck. It assumes each card is unique\n                        for(let i = 0; i < cardList.length; i++){\n                          if(cardList[i][0] == frontSide.innerHTML && cardList[i][1] == backSide.innerHTML){\n                            cardList.splice(i, 1);\n                          }\n                        }\n                        //cardList.splice(cardList.indexOf(frontSide.innerHTML + \",\" + backSide.innerHTML), 1);\n                      });\n                      newCard.appendChild(deleteButton);\n\n                      var starButton = document.createElement(\"button\");\n                      starButton.innerHTML = 'Star';\n                      starButton.className = \"starButton\";\n                      starButton.addEventListener(\"click\", function(){\n                        for(let i = 0; i < cardList.length; i++){\n                          if(cardList[i][0] == frontSide.innerHTML && cardList[i][1] == backSide.innerHTML){\n                            if(cardList[i][2]){\n                              starButton.style.backgroundColor = \"\";\n                              cardList[i][2] = false;\n                            }\n                            else{\n                              starButton.style.backgroundColor = \"gold\";\n                              cardList[i][2] = true;\n                            }\n                          }\n                        }\n                      });\n                      newCard.appendChild(starButton);\n                      document.body.appendChild(newCard);\n          \n                      cardList.push([front.value, back.value, false]);\n                }\n              \n            });\n            createButton.addEventListener(\"click\", function(){\n              if(front.value != '' && back.value != ''){\n                front.value = '';\n                back.value = '';\n              }\n      }); \n  \n      const titleLabel = document.createElement(\"label\");\n      titleLabel.innerHTML = 'TITLE: ';\n\n      const titleArea = document.createElement(\"textarea\");\n      titleArea.value = deckNames[deckIndex2];\n\n      const saveButton = document.createElement(\"button\");\n      saveButton.innerHTML = 'SAVE';\n      saveButton.addEventListener(\"click\", function(){\n        if(titleArea.value != \"\"){  \n          //for(let i = 0; i < cardList.length; i++){\n            //cardListArray.push([cardList[i][0], cardList[i][1]]);\n          //}\n\n          //deckNames.push(titleArea.value);\n          deckNames[deckIndex2] = titleArea.value;\n          cardListArray[deckIndex2] = cardList;\n          document.body.innerHTML = '';\n          App();\n        }\n        \n      });\n\n      const rtnButton = document.createElement(\"button\");\n      rtnButton.innerHTML = \"RETURN\";\n      rtnButton.addEventListener(\"click\", function(){\n        document.body.innerHTML = '';\n        cardList = [];\n        App();\n      });\n\n      buttonArray.appendChild(rtnButton);\n      buttonArray.appendChild(saveButton);\n      buttonArray.appendChild(br);\n\n      buttonArray.appendChild(titleLabel);\n      buttonArray.appendChild(titleArea);\n  \n      div.appendChild(createButton);\n      buttonArray.className = 'buttonArray';\n      document.body.appendChild(buttonArray);\n      document.body.appendChild(div);\n\n      //when adding cards to the page when editing that already exist in the deck\n      //ie, not cards that are being added when editing\n      for(let i = 0; i < cardListArray[deckIndex2].length; i++){\n        const newCard = document.createElement(\"div\");\n        \n                newCard.className = \"flashcard\";\n        \n                      const frontSide = document.createElement(\"h2\");\n                      frontSide.innerHTML = cardListArray[deckIndex2][i][0];\n                      const backSide = document.createElement(\"h2\");\n                      backSide.innerHTML = cardListArray[deckIndex2][i][1];\n                      newCard.appendChild(frontSide);\n                      newCard.appendChild(backSide)\n                      backSide.style.display = \"none\";\n                      \n                      var button = document.createElement(\"button\");\n                      button.innerHTML = \"FLIP\";\n        \n                      button.addEventListener(\"click\", function(){\n                          if(frontSide.style.display == \"none\"){\n                              frontSide.style.display = \"block\";\n                              backSide.style.display = \"none\";\n                          }\n                          else{\n                              frontSide.style.display = \"none\";\n                              backSide.style.display = \"block\";\n                          }\n                          \n                      });\n                      newCard.appendChild(button);\n        \n                      var deleteButton = document.createElement(\"button\");\n                      deleteButton.innerHTML = 'DELETE';\n                      deleteButton.className = \"deleteButton\";\n                      deleteButton.addEventListener(\"click\", function(){\n                        document.body.removeChild(newCard);\n                        \n                        //This deletes a card when you are adding a new deck. It assumes each card is unique\n                        for(let i = 0; i < cardList.length; i++){\n                          if(cardList[i][0] == frontSide.innerHTML && cardList[i][1] == backSide.innerHTML){\n                            cardList.splice(i, 1);\n                          }\n                        }\n                        //cardList.splice(cardList.indexOf(frontSide.innerHTML + \",\" + backSide.innerHTML), 1);\n                     });\n                     newCard.appendChild(deleteButton);\n\n                      const starButton = document.createElement(\"button\");\n                      starButton.innerHTML = 'Star';\n                      starButton.className = \"starButton\";\n                      if(cardListArray[deckIndex2][i][2]){\n                        starButton.style.backgroundColor = \"gold\";\n                      }\n                      starButton.addEventListener(\"click\", function(){\n                        for(let i = 0; i < cardList.length; i++){\n                          if(cardList[i][0] == frontSide.innerHTML && cardList[i][1] == backSide.innerHTML){\n                            if(cardList[i][2]){\n                              cardList[i][2] = false;\n                              starButton.style.backgroundColor = \"\";\n                            }\n                            else{\n                              cardList[i][2] = true;\n                              starButton.style.backgroundColor = \"gold\";\n                            }\n                          }\n                          \n                        }\n                      });\n                      newCard.appendChild(starButton);\n\n\n                    document.body.appendChild(newCard);\n      }\n    });\n     \n      deckWidget.appendChild(deckName);\n      deckWidget.appendChild(studyButton);\n      deckWidget.appendChild(deleteWidget);\n      deckWidget.appendChild(addButton);\n      document.body.appendChild(deckWidget);\n      deckWidget.appendChild(deckSize);\n    }\n \n    //document.body.appendChild(deckWidget);\n\n    const addDeck = document.createElement(\"button\");\n    addDeck.innerHTML = \"Add New Deck\";\n    addDeck.style.marginLeft = \"15px\";\n    addDeck.addEventListener(\"click\", function(){\n      \n      //document.body.removeChild(deckWidget);\n      //document.body.removeChild(addDeck);\n      //document.body.removeChild(title);\n      document.body.innerHTML = '';\n\n      var buttonArray = document.createElement(\"div\");\n\n      var div = document.createElement(\"div\");\n      div.className = 'cardCreator';\n      \n      var frontText = document.createElement(\"label\");\n      frontText.innerHTML = 'FRONT:   ';\n      div.appendChild(frontText);\n\n      var front = document.createElement(\"textarea\");\n      div.appendChild(front);\n      var br = document.createElement(\"br\");\n      \n      var backText = document.createElement(\"label\");\n      backText.innerHTML = 'BACK:   ';\n      backText.className = \"backtext\";\n      div.appendChild(backText);\n      var back = document.createElement(\"textarea\");\n      div.appendChild(back);\n      div.appendChild(br);\n  \n  \n      var createButton = document.createElement(\"button\");\n      createButton.innerHTML = 'Create Card';\n      \n      //creates cards when first creating the deck\n      createButton.addEventListener(\"click\", function(){\n        if(front.value != '' && back.value != ''){\n          const newCard = document.createElement(\"div\");\n  \n          newCard.className = \"flashcard\";\n  \n                const frontSide = document.createElement(\"h2\");\n                frontSide.innerHTML = front.value;\n                const backSide = document.createElement(\"h2\");\n                backSide.innerHTML = back.value;\n                newCard.appendChild(frontSide);\n                newCard.appendChild(backSide)\n                backSide.style.display = \"none\";\n                \n                var button = document.createElement(\"button\");\n                button.innerHTML = \"FLIP\";\n  \n                button.addEventListener(\"click\", function(){\n                    if(frontSide.style.display == \"none\"){\n                        frontSide.style.display = \"block\";\n                        backSide.style.display = \"none\";\n                    }\n                    else{\n                        frontSide.style.display = \"none\";\n                        backSide.style.display = \"block\";\n                    }\n                    \n                });\n                newCard.appendChild(button);\n  \n                var deleteButton = document.createElement(\"button\");\n                deleteButton.innerHTML = 'DELETE';\n                deleteButton.className = \"deleteButton\";\n                deleteButton.addEventListener(\"click\", function(){\n                  document.body.removeChild(newCard);\n                  \n                  //This deletes a card when you are adding a new deck. It assumes each card is unique\n                  for(let i = 0; i < cardList.length; i++){\n                    if(cardList[i][0] == frontSide.innerHTML && cardList[i][1] == backSide.innerHTML){\n                      cardList.splice(i, 1);\n                    }\n                  }\n                  //cardList.splice(cardList.indexOf(frontSide.innerHTML + \",\" + backSide.innerHTML), 1);\n              });\n              newCard.appendChild(deleteButton);\n\n              var starButton = document.createElement(\"button\");\n                      starButton.innerHTML = 'Star';\n                      starButton.className = \"starButton\";\n                      starButton.style.position = \"absolute\";\n                      starButton.style.marginLeft = \"10%\";\n                      starButton.addEventListener(\"click\", function(){\n                        for(let i = 0; i < cardList.length; i++){\n                          if(cardList[i][0] == frontSide.innerHTML && cardList[i][1] == backSide.innerHTML){\n                            if(cardList[i][2]){\n                              starButton.style.backgroundColor = \"\";\n                              cardList[i][2] = false;\n                            }\n                            else{\n                              starButton.style.backgroundColor = \"gold\";\n                              cardList[i][2] = true;\n                            }\n                          }\n                        }\n                      });\n                      newCard.appendChild(starButton);\n\n              document.body.appendChild(newCard);\n  \n              cardList.push([front.value, back.value, false]);\n          }\n        \n      });\n      createButton.addEventListener(\"click\", function(){\n        if(front.value != '' && back.value != ''){\n          front.value = '';\n          back.value = '';\n        }\n      }); \n  \n      const titleLabel = document.createElement(\"label\");\n      titleLabel.innerHTML = 'TITLE: ';\n\n      const titleArea = document.createElement(\"textarea\");\n\n      const saveButton = document.createElement(\"button\");\n      saveButton.innerHTML = 'SAVE';\n      saveButton.addEventListener(\"click\", function(){\n        if(cardList.length != 0 && titleArea.value != \"\"){  \n          //for(let i = 0; i < cardList.length; i++){\n            //cardListArray.push([cardList[i][0], cardList[i][1]]);\n          //}\n          cardListArray.push(cardList);\n          cardList = [];\n          deckNames.push(titleArea.value);\n\n          document.body.innerHTML = '';\n          App();\n        }\n        \n      });\n\n      const rtnButton = document.createElement(\"button\");\n      rtnButton.innerHTML = \"RETURN\";\n      rtnButton.addEventListener(\"click\", function(){\n        document.body.innerHTML = '';\n        cardList = [];\n        App();\n      });\n      buttonArray.appendChild(rtnButton);\n      buttonArray.appendChild(saveButton);\n      buttonArray.appendChild(br);\n\n      buttonArray.appendChild(titleLabel);\n      buttonArray.appendChild(titleArea);\n  \n      div.appendChild(createButton);\n      buttonArray.className = 'buttonArray';\n      document.body.appendChild(buttonArray);\n      document.body.appendChild(div);\n    });\n\n\n    document.body.appendChild(addDeck);\n\n\n    \n    \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}