{"ast":null,"code":"import React, { useState } from \"react\";\nvar snakeList = [];\n\nfunction Snake() {\n  const board = document.createElement('table');\n  const max = 30;\n\n  for (let i = 0; i < max; i++) {\n    const tr = board.insertRow();\n\n    for (let j = 0; j < max; j++) {\n      const td = tr.insertCell();\n      td.appendChild(document.createTextNode(\"___\"));\n      td.style.border = '1px solid black';\n    }\n  }\n\n  const start = [Math.floor((max - 1) / 2), Math.florr((max - 1) / 2)];\n  const berry = [10, 10];\n  board.rows.item(berry[0]).cells.item(berry[1]).innerHTML = \"***\";\n  const len = 5;\n  const direction = [0, 0];\n  const startTimer = true;\n\n  for (let i = 0; i < len; i++) {\n    snakeList.push([start[0] + i, start[1]]);\n  }\n\n  const eaten = false;\n  var update = true;\n  document.addEventListener('keydown', function (event) {\n    //board.rows.item(start[0]).cells.item(start[1]).innerHTML = \"___\";\n    //left arrow\n    if (event.keyCode == 37 && update) {\n      //if(start[1] > 0){\n      //start[1]--;\n      //}\n      if (direction[1] != 1) {\n        direction[1] = -1;\n        direction[0] = 0;\n        update = false;\n      }\n    } //down arrow\n    else if (event.keyCode == 40 && update) {\n      //if(start[0] < max - 1){\n      //start[0]++;\n      //}\n      if (direction[0] != -1) {\n        direction[0] = 1;\n        direction[1] = 0;\n        update = false;\n      }\n    } //right arrow\n    else if (event.keyCode == 39 && update) {\n      //if(start[1] < max - 1){\n      //start[1]++;\n      // }\n      if (direction[1] != -1) {\n        direction[1] = 1;\n        direction[0] = 0;\n        update = false;\n      }\n    } //up arrow\n    else if (event.keyCode == 38 && update) {\n      //if(start[0] > 0){\n      //start[0]--;\n      //}\n      if (direction[0] != 1) {\n        direction[0] = -1;\n        direction[1] = 0;\n        update = false;\n      }\n    }\n\n    if (startTimer) {}\n\n    startTimer = false;\n  });\n  const lab = document.createElement(\"label\");\n  lab.innerHTML = eaten;\n  var timer = setInterval(function () {\n    board.rows.item(berry[0]).cells.item(berry[1]).innerHTML = \"***\"; //updates position of snake\n\n    start[0] += direction[0];\n    start[1] += direction[1];\n    board.rows.item(start[0]).cells.item(start[1]).innerHTML = \"***\";\n    snakeList.unshift([start[0], start[1]]);\n\n    if (start[0] == berry[0] && start[1] == berry[1]) {\n      //len++;\n      eaten = true;\n    }\n\n    if (!eaten) {\n      board.rows.item(snakeList[snakeList.length - 1][0]).cells.item(snakeList[snakeList.length - 1][1]).innerHTML = \"___\";\n      snakeList.splice(snakeList.length - 1, 1);\n    } else {//eaten = false;\n    }\n\n    update = true;\n    lab.innerHTML = start[0];\n  }, 100);\n  document.body.appendChild(board);\n  document.body.appendChild(lab);\n}\n\n_c = Snake;\nexport default Snake;\n\nvar _c;\n\n$RefreshReg$(_c, \"Snake\");","map":{"version":3,"sources":["/Users/johnbrain/Projects/SnakeGame/src/snake.js"],"names":["React","useState","snakeList","Snake","board","document","createElement","max","i","tr","insertRow","j","td","insertCell","appendChild","createTextNode","style","border","start","Math","floor","florr","berry","rows","item","cells","innerHTML","len","direction","startTimer","push","eaten","update","addEventListener","event","keyCode","lab","timer","setInterval","unshift","length","splice","body"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nvar snakeList = [];\n\nfunction Snake(){\n\n    const board = document.createElement('table');\n    const max = 30\n    for(let i = 0; i < max; i++){\n        const tr = board.insertRow();\n        for(let j = 0; j < max; j++){\n            const td = tr.insertCell();\n            td.appendChild(document.createTextNode(\"___\"));\n            td.style.border = '1px solid black';\n        }\n    }\n    const start = [Math.floor((max - 1) / 2), Math.florr((max - 1) / 2)];\n\n    const berry = [10, 10];\n    board.rows.item(berry[0]).cells.item(berry[1]).innerHTML = \"***\";\n\n    const len = 5;\n\n    const direction = [0, 0];\n    const startTimer = true;\n\n    for(let i = 0; i < len; i++){\n        snakeList.push([start[0] + i, start[1]]);\n    }\n\n    const eaten = false;\n    var update = true;\n\n    document.addEventListener('keydown', function(event){\n        //board.rows.item(start[0]).cells.item(start[1]).innerHTML = \"___\";\n        //left arrow\n        if(event.keyCode == 37 && update){\n            //if(start[1] > 0){\n                //start[1]--;\n           //}\n           if(direction[1] != 1){\n                direction[1] = -1;\n                direction[0] = 0;\n                update = false;\n           }\n           \n        }\n\n        //down arrow\n        else if(event.keyCode == 40 && update){\n            //if(start[0] < max - 1){\n                //start[0]++;\n            //}\n            if(direction[0] != -1){\n                direction[0] = 1;\n                direction[1] = 0;\n                update = false;\n            }\n            \n        }\n\n        //right arrow\n        else if(event.keyCode == 39 && update){\n            //if(start[1] < max - 1){\n                //start[1]++;\n           // }\n           if(direction[1] != -1){\n                direction[1] = 1;\n                direction[0] = 0;\n                update = false;\n           }\n        }\n\n        //up arrow\n        else if(event.keyCode ==38 && update){\n            //if(start[0] > 0){\n                //start[0]--;\n            //}\n            if(direction[0] != 1){\n                direction[0] = -1;\n                direction[1] = 0;\n                update = false;\n            }\n        }\n            \n        if(startTimer){\n            \n        }  \n        startTimer = false;\n\n    });\n\n    const lab = document.createElement(\"label\");\n    lab.innerHTML = eaten;\n\n    var timer = setInterval(function(){\n        board.rows.item(berry[0]).cells.item(berry[1]).innerHTML = \"***\";\n\n        //updates position of snake\n        start[0] += direction[0];\n        start[1] += direction[1];\n        board.rows.item(start[0]).cells.item(start[1]).innerHTML = \"***\";\n\n        snakeList.unshift([start[0], start[1]]);\n\n        if(start[0] == berry[0] && start[1] == berry[1]){\n            //len++;\n            eaten = true;\n        }\n        \n        if(!eaten){\n            board.rows.item(snakeList[snakeList.length - 1][0]).cells.item(snakeList[snakeList.length - 1][1]).innerHTML = \"___\";\n            snakeList.splice(snakeList.length - 1, 1);\n        }\n        else{\n            //eaten = false;\n        }\n\n        update = true;\n        lab.innerHTML = start[0];\n    }, 100);\n   \n\n    document.body.appendChild(board);\n    document.body.appendChild(lab);\n\n}\nexport default Snake;"]},"metadata":{},"sourceType":"module"}