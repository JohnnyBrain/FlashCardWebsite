{"ast":null,"code":"var players = [];\nvar deck = [];\nvar board = [];\ntempDeck = 0;\n\nfunction pokerGame() {\n  deck = [];\n  players = [];\n  board = [];\n\n  for (let i = 2; i <= 13; i++) {\n    deck.push([[i, 1], [i, 2], [i, 3], [i, 4]]);\n  }\n\n  tempDeck = deck;\n}\n\nfunction calc(players, deck, board) {\n  var max = 0;\n  var playerProb = [];\n\n  for (let i = 0; i < players.length; i++) {\n    playerProb[i] = 0;\n  }\n\n  if (board.length == 0) {\n    for (let i = 0; i < players.length; i++) {\n      for (let j = 0; j < deck.length; j++);\n    }\n  }\n}\n\nfunction play(deck, board) {\n  if (board.length == 0) {\n    for (let i = 0; i < 3; i++) {\n      var tempi = Math.floor(Math.random() * deck.length);\n      var tempj = Math.floor(Math.random() * deck[tempi].length);\n      board.add(deck[tempi][tempj]);\n      deck[tempi].splice(tempj, 1);\n    }\n  } else if (board.length == 3 || board.length == 4) {\n    var tempi = Math.floor(Math.random() * deck.length);\n    var tempj = Math.floor(Math.random() * deck[tempi].length);\n    board.add(deck[tempi][tempj]);\n    deck[tempi].splice(tempj, 1);\n  }\n}\n\nfunction win(players, board) {\n  var winner = 0;\n  var max = 0;\n  var win = [];\n  var repeat = true;\n\n  while (repeat) {\n    repeat = false;\n\n    for (let i = 0; i < board.length - 1; i++) {\n      if (board[i] > board[i + 1]) {\n        var temp = board[i];\n        board[i] = board[i + 1];\n        board[i + 1] = temp;\n        repeat = true;\n      }\n    }\n  } //pair\n\n\n  for (let i = 0; i < players.length; i++) {\n    if (players[i][0][0] == players[i][1][0]) {\n      win.push([i, player[i][0][0]]);\n    }\n\n    for (let j = 0; j < board.length; j++) {\n      if (players[i][0][0] == board[j][0][0]) {\n        win.push([i, player[i][0][0]]);\n      }\n\n      if (players[i][1][0] == board[j][0][0]) {\n        win.push([i, player[i][1][0]]);\n      }\n    }\n  }\n\n  var max = win[0][1];\n\n  for (let i = 1; i < win.length; i++) {\n    if (win[i][1] > max) {\n      max = win[i][1];\n      winner = win[i][0];\n    }\n  }\n\n  return winner;\n}\n\nexport default pokerGame;","map":{"version":3,"sources":["/Users/johnbrain/Projects/PokerGame/src/PokerGame.js"],"names":["players","deck","board","tempDeck","pokerGame","i","push","calc","max","playerProb","length","j","play","tempi","Math","floor","random","tempj","add","splice","win","winner","repeat","temp","player"],"mappings":"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","sourcesContent":["\nvar players = [];\nvar deck = [];\nvar board = [];\ntempDeck = 0;\n\nfunction pokerGame(){\n    deck = [];\n    players = [];\n    board = [];\n    for(let i = 2; i <= 13; i++){\n        deck.push([[i, 1], [i, 2], [i, 3], [i, 4]]);\n    }\n    tempDeck = deck;\n}\n\nfunction calc(players, deck, board){\n    var max = 0;\n    var playerProb = []\n    for(let i = 0; i < players.length; i++){\n        playerProb[i] = 0;\n    }\n    if(board.length == 0){\n        for(let i = 0; i < players.length; i++){\n            for(let j = 0; j < deck.length; j++);\n        }\n    }\n}\n\nfunction play(deck, board){\n    if(board.length == 0){\n        for(let i = 0; i < 3; i++){\n            var tempi = Math.floor(Math.random() * deck.length);\n            var tempj =  Math.floor(Math.random() * deck[tempi].length);\n            board.add(deck[tempi][tempj]);\n            deck[tempi].splice(tempj, 1);\n        }\n    }\n    else if(board.length == 3 || board.length == 4){\n        var tempi = Math.floor(Math.random() * deck.length);\n        var tempj =  Math.floor(Math.random() * deck[tempi].length);\n        board.add(deck[tempi][tempj]);\n        deck[tempi].splice(tempj, 1);\n    }\n}\n\nfunction win(players, board){\n    var winner = 0;\n    var max = 0;\n    var win = [];\n\n    var repeat = true;\n    while(repeat){\n        repeat = false;\n        for(let i = 0; i < board.length - 1; i++){\n            if(board[i] > board[i + 1]){\n                var temp = board[i];\n                board[i] = board[i + 1];\n                board[i + 1] = temp;\n                repeat = true;\n            }\n        }\n    }\n\n    //pair\n    for(let i = 0; i < players.length; i++){\n        if(players[i][0][0] == players[i][1][0]){\n            win.push([i, player[i][0][0]]);\n        }\n        for(let j = 0; j < board.length; j++){\n            if(players[i][0][0] == board[j][0][0]){\n                win.push([i, player[i][0][0]]);\n            }\n            if(players[i][1][0] == board[j][0][0]){\n                win.push([i, player[i][1][0]]);\n            }\n        }\n    }\n    var max = win[0][1];\n    for(let i = 1; i < win.length; i++){\n        if(win[i][1] > max){\n            max = win[i][1];\n            winner = win[i][0];\n        }\n    }\n\n    return winner;\n}\n\nexport default pokerGame;"]},"metadata":{},"sourceType":"module"}