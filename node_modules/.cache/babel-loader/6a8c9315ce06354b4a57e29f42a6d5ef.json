{"ast":null,"code":"import { Card } from \"./Card.js\";\nimport { Deck } from \"./Deck.js\";\nimport { FlashCardEdit } from \"./FlashCardEdit.js\";\nimport { HomePage } from \"./HomePage.js\";\nimport { ReturnButton } from \"./ReturnButton.js\"; //visualizes the create deck view. used when creating a deck\n\nexport function DeckCreate(deckList) {\n  document.body.innerHTML = \"\";\n  var tempDeck = new Deck(\"TEMP\");\n  var tempCardList = [];\n  const buttonArray = document.createElement(\"div\");\n  buttonArray.appendChild(ReturnButton(deckList));\n  const saveButton = document.createElement(\"button\");\n  saveButton.innerHTML = \"Save\";\n  saveButton.addEventListener(\"click\", function () {\n    if (nameArea.value != 0) {\n      /*tempDeck.setName(nameArea.value);\n      deckList.push(tempDeck);\n      document.body.innerHTML = \"\";\n      HomePage(deckList);*/\n      var rtnDeck = new Deck(nameArea.value);\n\n      for (let i = 0; i < tempCardList.length; i++) {\n        rtnDeck.addCard(new Card(tempCardList[i].getElementsByClassName(\"a\")[0].value, tempCardList[i].getElementsByClassName(\"b\")[0].value));\n\n        if (tempCardList[i].getElementsByClassName(\"c\")[0].style.backgroundColor == \"gold\") {\n          rtnDeck.getCard(i).setStar();\n        }\n      }\n\n      deckList.push(rtnDeck);\n      document.body.innerHTML = \"\";\n      HomePage(deckList);\n    }\n  });\n  buttonArray.appendChild(saveButton);\n  const nameArea = document.createElement(\"textArea\");\n  buttonArray.appendChild(nameArea);\n  document.body.appendChild(buttonArray);\n  var div = document.createElement(\"div\");\n  div.className = 'cardCreator';\n  var frontText = document.createElement(\"label\");\n  frontText.innerHTML = 'FRONT:   ';\n  div.appendChild(frontText);\n  var front = document.createElement(\"textarea\");\n  div.appendChild(front);\n  var br = document.createElement(\"br\");\n  var backText = document.createElement(\"label\");\n  backText.innerHTML = 'BACK:   ';\n  backText.className = \"backtext\";\n  div.appendChild(backText);\n  var back = document.createElement(\"textarea\");\n  div.appendChild(back);\n  div.appendChild(br);\n  var createButton = document.createElement(\"button\");\n  createButton.innerHTML = 'Create Card'; //when creating a new card while editing\n\n  createButton.addEventListener(\"click\", function () {\n    if (front.value != '' && back.value != '') {\n      //if(!deck.cardExists(front.value, back.value)){\n      //const newCard = new Card(front.value, back.value);\n      //FlashCardEdit(newCard, deck);\n      //deck.addCard(newCard);\n      //front.value = '';\n      //back.value = '';\n      //}\n      const newCard = new Card(front.value, back.value); //FlashCardEdit(newCard, tempDeck);\n\n      tempCardList.push(FlashCardEdit(newCard, tempDeck, tempCardList));\n      front.value = \"\";\n      back.value = \"\"; //tempDeck.addCard(newCard);\n    } //const newCard = new Card(front.value, back.value);\n    //FlashCardEdit(newCard, deck);\n\n  });\n  /*createButton.addEventListener(\"click\", function(){\n    if(front.value != '' && back.value != ''){\n      front.value = '';\n      back.value = '';\n    } \n  });*/\n\n  /*for(let i = 0; i < deck.length(); i++){\n      FlashCardEdit(deck.getCard(i), deck);\n  }*/\n\n  div.appendChild(createButton);\n  document.body.appendChild(div);\n}\n_c = DeckCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckCreate\");","map":{"version":3,"sources":["/Users/johnbrain/Projects/FlashCardProject/src/block/DeckCreate.js"],"names":["Card","Deck","FlashCardEdit","HomePage","ReturnButton","DeckCreate","deckList","document","body","innerHTML","tempDeck","tempCardList","buttonArray","createElement","appendChild","saveButton","addEventListener","nameArea","value","rtnDeck","i","length","addCard","getElementsByClassName","style","backgroundColor","getCard","setStar","push","div","className","frontText","front","br","backText","back","createButton","newCard"],"mappings":"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","sourcesContent":["import {Card} from \"./Card.js\";\nimport {Deck} from \"./Deck.js\";\nimport {FlashCardEdit} from \"./FlashCardEdit.js\"\nimport { HomePage } from \"./HomePage.js\";\nimport { ReturnButton } from \"./ReturnButton.js\";\n\n\n//visualizes the create deck view. used when creating a deck\nexport function DeckCreate(deckList){\n    document.body.innerHTML = \"\";\n\n    var tempDeck = new Deck(\"TEMP\");\n\n    var tempCardList = [];\n\n    const buttonArray = document.createElement(\"div\");\n\n    buttonArray.appendChild(ReturnButton(deckList));\n\n    const saveButton = document.createElement(\"button\");\n    saveButton.innerHTML = \"Save\";\n    saveButton.addEventListener(\"click\", function(){\n        if(nameArea.value != 0){\n            /*tempDeck.setName(nameArea.value);\n            deckList.push(tempDeck);\n            document.body.innerHTML = \"\";\n            HomePage(deckList);*/\n            var rtnDeck = new Deck(nameArea.value);\n            for(let i = 0; i < tempCardList.length; i++){\n                rtnDeck.addCard(new Card(tempCardList[i].getElementsByClassName(\"a\")[0].value, tempCardList[i].getElementsByClassName(\"b\")[0].value));\n                if(tempCardList[i].getElementsByClassName(\"c\")[0].style.backgroundColor == \"gold\"){\n                    rtnDeck.getCard(i).setStar();\n                }\n            }\n            deckList.push(rtnDeck);\n            document.body.innerHTML = \"\";\n            HomePage(deckList);\n        }\n    });\n    buttonArray.appendChild(saveButton);\n\n    const nameArea = document.createElement(\"textArea\");\n    buttonArray.appendChild(nameArea);\n\n    document.body.appendChild(buttonArray);\n\n    var div = document.createElement(\"div\");\n    div.className = 'cardCreator';\n    \n    var frontText = document.createElement(\"label\");\n    frontText.innerHTML = 'FRONT:   ';\n    div.appendChild(frontText);\n    var front = document.createElement(\"textarea\");\n    div.appendChild(front);\n    var br = document.createElement(\"br\");\n    \n    var backText = document.createElement(\"label\");\n    backText.innerHTML = 'BACK:   ';\n    backText.className = \"backtext\";\n    div.appendChild(backText);\n    var back = document.createElement(\"textarea\");\n    div.appendChild(back);\n    div.appendChild(br);\n\n    var createButton = document.createElement(\"button\");\n    createButton.innerHTML = 'Create Card';\n    \n    //when creating a new card while editing\n    createButton.addEventListener(\"click\", function(){\n        if(front.value != '' && back.value != ''){\n            //if(!deck.cardExists(front.value, back.value)){\n                //const newCard = new Card(front.value, back.value);\n                //FlashCardEdit(newCard, deck);\n                //deck.addCard(newCard);\n                //front.value = '';\n                //back.value = '';\n            //}\n            const newCard = new Card(front.value, back.value);\n            //FlashCardEdit(newCard, tempDeck);\n            tempCardList.push(FlashCardEdit(newCard, tempDeck, tempCardList));\n            front.value = \"\";\n            back.value = \"\";\n            //tempDeck.addCard(newCard);\n        } \n        //const newCard = new Card(front.value, back.value);\n        //FlashCardEdit(newCard, deck);\n    });\n\n    /*createButton.addEventListener(\"click\", function(){\n      if(front.value != '' && back.value != ''){\n        front.value = '';\n        back.value = '';\n      } \n    });*/ \n\n    /*for(let i = 0; i < deck.length(); i++){\n        FlashCardEdit(deck.getCard(i), deck);\n    }*/\n\n    div.appendChild(createButton);\n    document.body.appendChild(div);\n}"]},"metadata":{},"sourceType":"module"}